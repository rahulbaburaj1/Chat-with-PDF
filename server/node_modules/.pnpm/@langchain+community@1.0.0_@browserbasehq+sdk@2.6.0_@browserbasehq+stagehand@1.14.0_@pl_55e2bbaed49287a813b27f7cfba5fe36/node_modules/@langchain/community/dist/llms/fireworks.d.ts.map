{"version":3,"file":"fireworks.d.ts","names":["OpenAIClient","OpenAICallOptions","OpenAIInput","OpenAICoreRequestOptions","OpenAI","BaseLLMParams","FireworksUnsupportedArgs","FireworksUnsupportedCallOptions","FireworksCallOptions","Omit","Partial","Fireworks","___load_serializable2","Serialized","CompletionCreateParamsStreaming","Completion","AsyncIterable","Promise","CompletionCreateParamsNonStreaming","Completions"],"sources":["../../src/llms/fireworks.d.ts"],"sourcesContent":["import { type OpenAIClient, type OpenAICallOptions, type OpenAIInput, type OpenAICoreRequestOptions, OpenAI } from \"@langchain/openai\";\nimport type { BaseLLMParams } from \"@langchain/core/language_models/llms\";\ntype FireworksUnsupportedArgs = \"frequencyPenalty\" | \"presencePenalty\" | \"bestOf\" | \"logitBias\";\ntype FireworksUnsupportedCallOptions = \"functions\" | \"function_call\" | \"tools\";\nexport type FireworksCallOptions = Partial<Omit<OpenAICallOptions, FireworksUnsupportedCallOptions>>;\n/**\n * Wrapper around Fireworks API for large language models\n *\n * Fireworks API is compatible to the OpenAI API with some limitations described in\n * https://readme.fireworks.ai/docs/openai-compatibility.\n *\n * To use, you should have the `openai` package installed and\n * the `FIREWORKS_API_KEY` environment variable set.\n */\nexport declare class Fireworks extends OpenAI<FireworksCallOptions> {\n    static lc_name(): string;\n    _llmType(): string;\n    get lc_secrets(): {\n        [key: string]: string;\n    } | undefined;\n    lc_serializable: boolean;\n    fireworksApiKey?: string;\n    constructor(fields?: Partial<Omit<OpenAIInput, \"openAIApiKey\" | FireworksUnsupportedArgs>> & BaseLLMParams & {\n        fireworksApiKey?: string;\n    });\n    toJSON(): import(\"../load/serializable\").Serialized;\n    completionWithRetry(request: OpenAIClient.CompletionCreateParamsStreaming, options?: OpenAICoreRequestOptions): Promise<AsyncIterable<OpenAIClient.Completion>>;\n    completionWithRetry(request: OpenAIClient.CompletionCreateParamsNonStreaming, options?: OpenAICoreRequestOptions): Promise<OpenAIClient.Completions.Completion>;\n}\nexport {};\n"],"mappings":";;;;;;;;KAEKM,wBAAAA;KACAC,+BAAAA;KACOC,oBAAAA,GAAuBE,QAAQD,KAAKR,mBAAmBM;;;;;;;AAHO;AAC7C;AAE7B;AAAgC,cAUXI,SAAAA,SAAkBP,MAVP,CAUcI,oBAVd,CAAA,CAAA;EAAA,OAAgBP,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAiB,QAAEM,CAAAA,CAAAA,EAAAA,MAAAA;EAA+B,IAAvDE,UAAAA,CAAAA,CAAAA,EAAAA;IAARC,CAAAA,GAAAA,EAAAA,MAAAA,CAAAA,EAAAA,MAAAA;EAAO,CAAA,GAAA,SAAA;EAUrBC,eAAS,EAAA,OAAA;EAAA,eAAA,CAAA,EAAA,MAAA;EAAA,WAAgBH,CAAAA,MAQG,CARHA,EAQrBE,OARqBF,CAQbC,IARaD,CAQRN,WARQM,EAAAA,cAAAA,GAQsBF,wBARtBE,CAAAA,CAAAA,GAQmDH,aARnDG,GAAAA;IAQRN,eAAAA,CAAAA,EAAAA,MAAAA;EAAW,CAAA;EAA2C,MAA3DO,CAAAA,CAAAA,EAA6EG,sBAAAA,CAGjEC,UAHZJ;EAAI,mBAAZC,CAAAA,OAAAA,EAIQV,YAAAA,CAAac,+BAJrBJ,EAAAA,OAAAA,CAAAA,EAIgEP,wBAJhEO,CAAAA,EAI2FO,OAJ3FP,CAImGM,aAJnGN,CAIiHV,YAAAA,CAAae,UAJ9HL,CAAAA,CAAAA;EAAO,mBAAiEL,CAAAA,OAAAA,EAKhEL,YAAAA,CAAakB,kCALmDb,EAAAA,OAAAA,CAAAA,EAKLF,wBALKE,CAAAA,EAKsBY,OALtBZ,CAK8BL,YAAAA,CAAamB,WAAAA,CAAYJ,UALvDV,CAAAA"}