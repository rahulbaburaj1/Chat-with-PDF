{"version":3,"file":"neo4j_vector.d.ts","names":["EmbeddingsInterface","VectorStore","Document","Any","SearchType","IndexType","DistanceStrategy","Metadata","Record","Neo4jVectorStoreArgs","Neo4jVectorStore","Promise","url","username","password","database","Array"],"sources":["../../src/vectorstores/neo4j_vector.d.ts"],"sourcesContent":["import type { EmbeddingsInterface } from \"@langchain/core/embeddings\";\nimport { VectorStore } from \"@langchain/core/vectorstores\";\nimport { Document } from \"@langchain/core/documents\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Any = any;\nexport type SearchType = \"vector\" | \"hybrid\";\nexport type IndexType = \"NODE\" | \"RELATIONSHIP\";\nexport type DistanceStrategy = \"euclidean\" | \"cosine\";\nexport type Metadata = Record<string, unknown>;\ninterface Neo4jVectorStoreArgs {\n    url: string;\n    username: string;\n    password: string;\n    database?: string;\n    preDeleteCollection?: boolean;\n    textNodeProperty?: string;\n    textNodeProperties?: string[];\n    embeddingNodeProperty?: string;\n    keywordIndexName?: string;\n    indexName?: string;\n    searchType?: SearchType;\n    indexType?: IndexType;\n    retrievalQuery?: string;\n    nodeLabel?: string;\n    createIdIndex?: boolean;\n}\n/**\n * @security *Security note*: Make sure that the database connection uses credentials\n * that are narrowly-scoped to only include necessary permissions.\n * Failure to do so may result in data corruption or loss, since the calling\n * code may attempt commands that would result in deletion, mutation\n * of data if appropriately prompted or reading sensitive data if such\n * data is present in the database.\n * The best way to guard against such negative outcomes is to (as appropriate)\n * limit the permissions granted to the credentials used with this tool.\n * For example, creating read only users for the database is a good way to\n * ensure that the calling code cannot mutate or delete data.\n *\n * @link See https://js.langchain.com/docs/security for more information.\n */\nexport declare class Neo4jVectorStore extends VectorStore {\n    private driver;\n    private database;\n    private preDeleteCollection;\n    private nodeLabel;\n    private embeddingNodeProperty;\n    private embeddingDimension;\n    private textNodeProperty;\n    private keywordIndexName;\n    private indexName;\n    private retrievalQuery;\n    private searchType;\n    private indexType;\n    private distanceStrategy;\n    private supportMetadataFilter;\n    private isEnterprise;\n    _vectorstoreType(): string;\n    constructor(embeddings: EmbeddingsInterface, config: Neo4jVectorStoreArgs);\n    static initialize(embeddings: EmbeddingsInterface, config: Neo4jVectorStoreArgs): Promise<Neo4jVectorStore>;\n    _initializeDriver({ url, username, password, database }: Neo4jVectorStoreArgs): Promise<void>;\n    _verifyConnectivity(): Promise<void>;\n    _verifyVersion(): Promise<void>;\n    close(): Promise<void>;\n    _dropIndex(): Promise<void>;\n    query(query: string, params?: Any): Promise<Any[]>;\n    static fromTexts(texts: string[], metadatas: Any, embeddings: EmbeddingsInterface, config: Neo4jVectorStoreArgs): Promise<Neo4jVectorStore>;\n    static fromDocuments(docs: Document[], embeddings: EmbeddingsInterface, config: Neo4jVectorStoreArgs): Promise<Neo4jVectorStore>;\n    static fromExistingIndex(embeddings: EmbeddingsInterface, config: Neo4jVectorStoreArgs): Promise<Neo4jVectorStore>;\n    static fromExistingGraph(embeddings: EmbeddingsInterface, config: Neo4jVectorStoreArgs): Promise<Neo4jVectorStore>;\n    createNewIndex(): Promise<void>;\n    retrieveExistingIndex(): Promise<number | null>;\n    retrieveExistingFtsIndex(textNodeProperties?: string[]): Promise<string | null>;\n    createNewKeywordIndex(textNodeProperties?: string[]): Promise<void>;\n    sortByIndexName(values: Array<{\n        [key: string]: Any;\n    }>, indexName: string): Array<{\n        [key: string]: Any;\n    }>;\n    addVectors(vectors: number[][], documents: Document[], metadatas?: Record<string, Any>[], ids?: string[]): Promise<string[]>;\n    addDocuments(documents: Document[]): Promise<string[]>;\n    similaritySearch(query: string, k?: number, params?: Record<string, Any>): Promise<Document[]>;\n    similaritySearchWithScore(query: string, k?: number, params?: Record<string, Any>): Promise<[Document, number][]>;\n    similaritySearchVectorWithScore(vector: number[], k: number, query: string, params?: Record<string, Any>): Promise<[Document, number][]>;\n}\nexport {};\n"],"mappings":";;;;;;;;;KAIKG,GAAAA;KACOC,UAAAA;KACAC,SAAAA;KACAC,gBAAAA;KACAC,QAAAA,GAAWC;UACbC,oBAAAA;;;;;EALLN,mBAAG,CAAA,EAAA,OAAA;EACIC,gBAAU,CAAA,EAAA,MAAA;EACVC,kBAAS,CAAA,EAAA,MAAA,EAAA;EACTC,qBAAgB,CAAA,EAAA,MAAA;EAChBC,gBAAQ,CAAA,EAAA,MAAGC;EACbC,SAAAA,CAAAA,EAAAA,MAAAA;EAAoB,UAAA,CAAA,EAWbL,UAXa;EAAA,SAWbA,CAAAA,EACDC,SADCD;EAAU,cACXC,CAAAA,EAAAA,MAAAA;EAAS,SAAA,CAAA,EAAA,MAAA;EAmBJK,aAAAA,CAAAA,EAAAA,OAAgB;;;;;;;;;;;;;;;;AAsBxBC,cAtBQD,gBAAAA,SAAyBT,WAAAA,CAsBjCU;EAAO,QACFA,MAAAA;EAAO,QACSR,QAAAA;EAAG,QAAWA,mBAAAA;EAAG,QAAXQ,SAAAA;EAAO,QACER,qBAAAA;EAAG,QAAcH,kBAAAA;EAAmB,QAAUS,gBAAAA;EAAoB,QAAWC,gBAAAA;EAAgB,QAAxBC,SAAAA;EAAO,QAC9FT,cAAAA;EAAQ,QAAgBF,UAAAA;EAAmB,QAAUS,SAAAA;EAAoB,QAAWC,gBAAAA;EAAgB,QAAxBC,qBAAAA;EAAO,QACzEX,YAAAA;EAAmB,gBAAUS,CAAAA,CAAAA,EAAAA,MAAAA;EAAoB,WAAWC,CAAAA,UAAAA,EAVzEV,mBAUyEU,EAAAA,MAAAA,EAV5CD,oBAU4CC;EAAgB,OAAxBC,UAAAA,CAAAA,UAAAA,EAT3DX,mBAS2DW,EAAAA,MAAAA,EAT9BF,oBAS8BE,CAAAA,EATPA,OASOA,CATCD,gBASDC,CAAAA;EAAO,iBAC3DX,CAAAA;IAAAA,GAAAA;IAAAA,QAAAA;IAAAA,QAAAA;IAAAA;EAAAA,CAAAA,EAToBS,oBASpBT,CAAAA,EAT2CW,OAS3CX,CAAAA,IAAAA,CAAAA;EAAmB,mBAAUS,CAAAA,CAAAA,EAR3CE,OAQ2CF,CAAAA,IAAAA,CAAAA;EAAoB,cAAWC,CAAAA,CAAAA,EAP/EC,OAO+ED,CAAAA,IAAAA,CAAAA;EAAgB,KAAxBC,CAAAA,CAAAA,EANhFA,OAMgFA,CAAAA,IAAAA,CAAAA;EAAO,UAC9EA,CAAAA,CAAAA,EANJA,OAMIA,CAAAA,IAAAA,CAAAA;EAAO,KACAA,CAAAA,KAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAAAA,EANKR,GAMLQ,CAAAA,EANWA,OAMXA,CANmBR,GAMnBQ,EAAAA,CAAAA;EAAO,OACyBA,SAAAA,CAAAA,KAAAA,EAAAA,MAAAA,EAAAA,EAAAA,SAAAA,EANZR,GAMYQ,EAAAA,UAAAA,EANKX,mBAMLW,EAAAA,MAAAA,EANkCF,oBAMlCE,CAAAA,EANyDA,OAMzDA,CANiED,gBAMjEC,CAAAA;EAAO,OACVA,aAAAA,CAAAA,IAAAA,EAN3BT,QAM2BS,EAAAA,EAAAA,UAAAA,EANHX,mBAMGW,EAAAA,MAAAA,EAN0BF,oBAM1BE,CAAAA,EANiDA,OAMjDA,CANyDD,gBAMzDC,CAAAA;EAAO,OAE1CR,iBAAAA,CAAAA,UAAAA,EAPkBH,mBAOlBG,EAAAA,MAAAA,EAP+CM,oBAO/CN,CAAAA,EAPsEQ,OAOtER,CAP8EO,gBAO9EP,CAAAA;EAAG,OADEa,iBAAAA,CAAAA,UAAAA,EALahB,mBAKbgB,EAAAA,MAAAA,EAL0CP,oBAK1CO,CAAAA,EALiEL,OAKjEK,CALyEN,gBAKzEM,CAAAA;EAAK,cAGVb,CAAAA,CAAAA,EAPDQ,OAOCR,CAAAA,IAAAA,CAAAA;EAAG,qBADEa,CAAAA,CAAAA,EALCL,OAKDK,CAAAA,MAAAA,GAAAA,IAAAA,CAAAA;EAAK,wBAGcd,CAAAA,kBAAAA,CAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EAPcS,OAOdT,CAAAA,MAAAA,GAAAA,IAAAA,CAAAA;EAAQ,qBAA+BC,CAAAA,kBAAAA,CAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EAN5BQ,OAM4BR,CAAAA,IAAAA,CAAAA;EAAG,eAAlBK,CAAAA,MAAAA,EAL3CQ,KAK2CR,CAAAA;IAAwCG,CAAAA,GAAAA,EAAAA,MAAAA,CAAAA,EAJxFR,GAIwFQ;EAAO,CAAA,CAAA,EAC1FT,SAAAA,EAAAA,MAAAA,CAAAA,EAJAc,KAIAd,CAAAA;IAAaS,CAAAA,GAAAA,EAAAA,MAAAA,CAAAA,EAHlBR,GAGkBQ;EAAO,CAAA,CAAA;EAC2B,UAAlBH,CAAAA,OAAAA,EAAAA,MAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAFVN,QAEUM,EAAAA,EAAAA,SAAAA,CAAAA,EAFcA,MAEdA,CAAAA,MAAAA,EAF6BL,GAE7BK,CAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EAFsDG,OAEtDH,CAAAA,MAAAA,EAAAA,CAAAA;EAAM,YAAwBN,CAAAA,SAAAA,EAD3DA,QAC2DA,EAAAA,CAAAA,EAD9CS,OAC8CT,CAAAA,MAAAA,EAAAA,CAAAA;EAAQ,gBAAhBS,CAAAA,KAAAA,EAAAA,MAAAA,EAAAA,CAAAA,CAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAAAA,EAAtBH,MAAsBG,CAAAA,MAAAA,EAAPR,GAAOQ,CAAAA,CAAAA,EAAAA,OAAAA,CAAQT,QAARS,EAAAA,CAAAA;EAAO,yBACLR,CAAAA,KAAAA,EAAAA,MAAAA,EAAAA,CAAAA,CAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAAAA,EAAfK,MAAeL,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAOQ,OAAPR,CAAAA,CAAgBD,QAAhBC,EAAAA,MAAAA,CAAAA,EAAAA,CAAAA;EAAG,+BAAlBK,CAAAA,MAAAA,EAAAA,MAAAA,EAAAA,EAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAAAA,EACuBA,MADvBA,CAAAA,MAAAA,EACsCL,GADtCK,CAAAA,CAAAA,EAC6CG,OAD7CH,CAAAA,CACsDN,QADtDM,EAAAA,MAAAA,CAAAA,EAAAA,CAAAA"}