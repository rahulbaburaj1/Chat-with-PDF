{"version":3,"file":"viewtypes.cjs","names":["DesignDocumentNamespace","ViewScanConsistency","ViewOrdering","ViewErrorMode"],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/viewtypes.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ViewErrorMode = exports.ViewOrdering = exports.ViewScanConsistency = exports.DesignDocumentNamespace = exports.ViewRow = exports.ViewMetaData = exports.ViewResult = void 0;\n/**\n * Contains the results of a view query.\n *\n * @category Views\n */\nclass ViewResult {\n    /**\n     * @internal\n     */\n    constructor(data) {\n        this.rows = data.rows;\n        this.meta = data.meta;\n    }\n}\nexports.ViewResult = ViewResult;\n/**\n * Contains the meta-data that is returend from a view query.\n *\n * @category Views\n */\nclass ViewMetaData {\n    /**\n     * @internal\n     */\n    constructor(data) {\n        this.totalRows = data.totalRows;\n        this.debug = data.debug;\n    }\n    /**\n     * Same as {@link ViewMetaData.totalRows}, but represented as\n     * the raw server-side value.\n     *\n     * @deprecated Use {@link ViewMetaData.totalRows} instead.\n     */\n    get total_rows() {\n        return this.totalRows;\n    }\n}\nexports.ViewMetaData = ViewMetaData;\n/**\n * Contains the contents of a single row returned by a view query.\n *\n * @category Views\n */\nclass ViewRow {\n    /**\n     * @internal\n     */\n    constructor(data) {\n        this.value = data.value;\n        this.key = data.key;\n        this.id = data.id;\n    }\n}\nexports.ViewRow = ViewRow;\n/**\n * Specifies the namespace for the associated Design Document.\n *\n * @category Views\n */\nvar DesignDocumentNamespace;\n(function (DesignDocumentNamespace) {\n    /**\n     * Indicates that the Design Document namespace is within the development environment.\n     */\n    DesignDocumentNamespace[\"Development\"] = \"development\";\n    /**\n     * Indicates that the Design Document namespace is within the producion environment.\n     */\n    DesignDocumentNamespace[\"Production\"] = \"production\";\n})(DesignDocumentNamespace || (exports.DesignDocumentNamespace = DesignDocumentNamespace = {}));\n/**\n * Represents the various scan consistency options that are available when\n * querying against the views service.\n *\n * @category Views\n */\nvar ViewScanConsistency;\n(function (ViewScanConsistency) {\n    /**\n     * Indicates that no specific consistency is required, this is the fastest\n     * options, but results may not include the most recent operations which have\n     * been performed.\n     */\n    ViewScanConsistency[\"NotBounded\"] = \"ok\";\n    /**\n     * Indicates that the results to the query should include all operations that\n     * have occurred up until the query was started.  This incurs a performance\n     * penalty of waiting for the index to catch up to the most recent operations,\n     * but provides the highest level of consistency.\n     */\n    ViewScanConsistency[\"RequestPlus\"] = \"false\";\n    /**\n     * Indicates that the results of the query should behave according to similar\n     * semantics as NotBounded, but following the execution of the query the index\n     * should begin updating such that following queries will likely include up\n     * to date data.\n     */\n    ViewScanConsistency[\"UpdateAfter\"] = \"update_after\";\n})(ViewScanConsistency || (exports.ViewScanConsistency = ViewScanConsistency = {}));\n/**\n * Specifies the ordering mode of a view query.\n *\n * @category Views\n */\nvar ViewOrdering;\n(function (ViewOrdering) {\n    /**\n     * Indicates that results should be returned in ascending order.\n     */\n    ViewOrdering[\"Ascending\"] = \"false\";\n    /**\n     * Indicates that results should be returned in descending order.\n     */\n    ViewOrdering[\"Descending\"] = \"true\";\n})(ViewOrdering || (exports.ViewOrdering = ViewOrdering = {}));\n/**\n * Specifies the error handling mode for a view query.\n *\n * @category Views\n */\nvar ViewErrorMode;\n(function (ViewErrorMode) {\n    /**\n     * Indicates that if an error occurs during the execution of the view query,\n     * the query should continue to process and include any available results.\n     */\n    ViewErrorMode[\"Continue\"] = \"continue\";\n    /**\n     * Indicates that if an error occurs during the execution of the view query,\n     * the query should be aborted immediately rather than attempting to continue.\n     */\n    ViewErrorMode[\"Stop\"] = \"stop\";\n})(ViewErrorMode || (exports.ViewErrorMode = ViewErrorMode = {}));\n"],"x_google_ignoreList":[0],"mappings":";;;;;;;CACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAM,EAAC;CAC7D,QAAQ,gBAAgB,QAAQ,eAAe,QAAQ,sBAAsB,QAAQ,0BAA0B,QAAQ,UAAU,QAAQ,eAAe,QAAQ,aAAa,KAAK;;;;;;CAMlL,IAAM,aAAN,MAAiB;;;;EAIb,YAAY,MAAM;GACd,KAAK,OAAO,KAAK;GACjB,KAAK,OAAO,KAAK;EACpB;CACJ;CACD,QAAQ,aAAa;;;;;;CAMrB,IAAM,eAAN,MAAmB;;;;EAIf,YAAY,MAAM;GACd,KAAK,YAAY,KAAK;GACtB,KAAK,QAAQ,KAAK;EACrB;;;;;;;EAOD,IAAI,aAAa;AACb,UAAO,KAAK;EACf;CACJ;CACD,QAAQ,eAAe;;;;;;CAMvB,IAAM,UAAN,MAAc;;;;EAIV,YAAY,MAAM;GACd,KAAK,QAAQ,KAAK;GAClB,KAAK,MAAM,KAAK;GAChB,KAAK,KAAK,KAAK;EAClB;CACJ;CACD,QAAQ,UAAU;;;;;;CAMlB,IAAI;EACH,SAAUA,2BAAyB;;;;EAIhCA,0BAAwB,iBAAiB;;;;EAIzCA,0BAAwB,gBAAgB;CAC3C,GAAE,4BAA4B,QAAQ,0BAA0B,0BAA0B,CAAE,GAAE;;;;;;;CAO/F,IAAI;EACH,SAAUC,uBAAqB;;;;;;EAM5BA,sBAAoB,gBAAgB;;;;;;;EAOpCA,sBAAoB,iBAAiB;;;;;;;EAOrCA,sBAAoB,iBAAiB;CACxC,GAAE,wBAAwB,QAAQ,sBAAsB,sBAAsB,CAAE,GAAE;;;;;;CAMnF,IAAI;EACH,SAAUC,gBAAc;;;;EAIrBA,eAAa,eAAe;;;;EAI5BA,eAAa,gBAAgB;CAChC,GAAE,iBAAiB,QAAQ,eAAe,eAAe,CAAE,GAAE;;;;;;CAM9D,IAAI;EACH,SAAUC,iBAAe;;;;;EAKtBA,gBAAc,cAAc;;;;;EAK5BA,gBAAc,UAAU;CAC3B,GAAE,kBAAkB,QAAQ,gBAAgB,gBAAgB,CAAE,GAAE"}