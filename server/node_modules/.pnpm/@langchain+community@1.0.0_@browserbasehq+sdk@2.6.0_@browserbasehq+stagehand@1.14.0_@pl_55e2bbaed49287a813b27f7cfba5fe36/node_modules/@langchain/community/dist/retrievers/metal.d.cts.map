{"version":3,"file":"metal.d.cts","names":["Client","Metal","BaseRetriever","BaseRetrieverInput","Document","MetalRetrieverFields","MetalRetriever","Promise"],"sources":["../../src/retrievers/metal.d.ts"],"sourcesContent":["import type { Client as Metal } from \"@getmetal/metal-sdk\";\nimport { BaseRetriever, BaseRetrieverInput } from \"@langchain/core/retrievers\";\nimport { Document } from \"@langchain/core/documents\";\n/**\n * Interface for the fields required during the initialization of a\n * `MetalRetriever` instance. It extends the `BaseRetrieverInput`\n * interface and adds a `client` field of type `Metal`.\n */\nexport interface MetalRetrieverFields extends BaseRetrieverInput {\n    client: Metal;\n}\n/**\n * Class used to interact with the Metal service, a managed retrieval &\n * memory platform. It allows you to index your data into Metal and run\n * semantic search and retrieval on it. It extends the `BaseRetriever`\n * class and requires a `Metal` instance and a dictionary of parameters to\n * pass to the Metal API during its initialization.\n * @example\n * ```typescript\n * const retriever = new MetalRetriever({\n *   client: new Metal(\n *     process.env.METAL_API_KEY,\n *     process.env.METAL_CLIENT_ID,\n *     process.env.METAL_INDEX_ID,\n *   ),\n * });\n * const docs = await retriever.getRelevantDocuments(\"hello\");\n * ```\n */\nexport declare class MetalRetriever extends BaseRetriever {\n    static lc_name(): string;\n    lc_namespace: string[];\n    private client;\n    constructor(fields: MetalRetrieverFields);\n    _getRelevantDocuments(query: string): Promise<Document[]>;\n}\n"],"mappings":";;;;;;;;;;;;;UAQiBK,oBAAAA,SAA6BF;UAClCF;;AADZ;;;;AAAgE;AAqBhE;;;;;;AAAyD;;;;;;;cAApCK,cAAAA,SAAuBJ,aAAAA;;;;sBAIpBG;wCACkBE,QAAQH"}