{"version":3,"file":"confluence.d.ts","names":["Document","BaseDocumentLoader","ConfluencePagesLoaderParams","ConfluencePage","ConfluenceAPIResponse","ConfluencePagesLoader","baseUrl","spaceKey","username","accessToken","limit","expand","personalAccessToken","maxRetries","Promise"],"sources":["../../../src/document_loaders/web/confluence.d.ts"],"sourcesContent":["import { Document } from \"@langchain/core/documents\";\nimport { BaseDocumentLoader } from \"@langchain/core/document_loaders/base\";\n/**\n * Interface representing the parameters for configuring the\n * ConfluencePagesLoader.\n */\nexport interface ConfluencePagesLoaderParams {\n    baseUrl: string;\n    spaceKey: string;\n    username?: string;\n    accessToken?: string;\n    personalAccessToken?: string;\n    limit?: number;\n    expand?: string;\n    maxRetries?: number;\n}\n/**\n * Interface representing a Confluence page.\n */\nexport interface ConfluencePage {\n    id: string;\n    title: string;\n    type: string;\n    body: {\n        storage: {\n            value: string;\n        };\n    };\n    status: string;\n    version?: {\n        number: number;\n        when: string;\n        by: {\n            displayName: string;\n        };\n    };\n}\n/**\n * Interface representing the response from the Confluence API.\n */\nexport interface ConfluenceAPIResponse {\n    size: number;\n    results: ConfluencePage[];\n}\n/**\n * Class representing a document loader for loading pages from Confluence.\n * @example\n * ```typescript\n * const loader = new ConfluencePagesLoader({\n *   baseUrl: \"https:\n *   spaceKey: \"~EXAMPLE362906de5d343d49dcdbae5dEXAMPLE\",\n *   username: \"your-username\",\n *   accessToken: \"your-access-token\",\n * });\n * const documents = await loader.load();\n * console.log(documents);\n * ```\n */\nexport declare class ConfluencePagesLoader extends BaseDocumentLoader {\n    readonly baseUrl: string;\n    readonly spaceKey: string;\n    readonly username?: string;\n    readonly accessToken?: string;\n    readonly limit: number;\n    readonly maxRetries: number;\n    /**\n     * expand parameter for confluence rest api\n     * description can be found at https://developer.atlassian.com/server/confluence/expansions-in-the-rest-api/\n     */\n    readonly expand?: string;\n    readonly personalAccessToken?: string;\n    constructor({ baseUrl, spaceKey, username, accessToken, limit, expand, personalAccessToken, maxRetries }: ConfluencePagesLoaderParams);\n    /**\n     * Returns the authorization header for the request.\n     * @returns The authorization header as a string, or undefined if no credentials were provided.\n     */\n    private get authorizationHeader();\n    /**\n     * Fetches all the pages in the specified space and converts each page to\n     * a Document instance.\n     * @param options the extra options of the load function\n     * @param options.limit The limit parameter to overwrite the size to fetch pages.\n     * @param options.start The start parameter to set inital offset to fetch pages.\n     * @returns Promise resolving to an array of Document instances.\n     */\n    load(options?: {\n        start?: number;\n        limit?: number;\n    }): Promise<Document[]>;\n    /**\n     * Fetches data from the Confluence API using the provided URL.\n     * @param url The URL to fetch data from.\n     * @returns Promise resolving to the JSON response from the API.\n     */\n    protected fetchConfluenceData(url: string): Promise<ConfluenceAPIResponse>;\n    private fetchAllPagesInSpace;\n    /**\n     * Creates a Document instance from a ConfluencePage object.\n     * @param page The ConfluencePage object to convert.\n     * @returns A Document instance.\n     */\n    private createDocumentFromPage;\n}\n"],"mappings":";;;;;;;;;;;UAMiBE,2BAAAA;;;;;;EAAAA,KAAAA,CAAAA,EAAAA,MAAAA;EAaAC,MAAAA,CAAAA,EAAAA,MAAAA;EAqBAC,UAAAA,CAAAA,EAAAA,MAAAA;AAkBjB;;;;AAaqCI,UApDpBL,cAAAA,CAoDoBK;EAAQ,EAAA,EAAEC,MAAAA;EAAW,KAAEC,EAAAA,MAAAA;EAAK,IAAEC,EAAAA,MAAAA;EAAM,IAAEC,EAAAA;IAAqBC,OAAAA,EAAAA;MAAcX,KAAAA,EAAAA,MAAAA;IAiB9FF,CAAAA;EAAQ,CAAA;EAAT,MAMyCI,EAAAA,MAAAA;EAAqB,OAA7BU,CAAAA,EAAAA;IApCGb,MAAAA,EAAAA,MAAAA;IAAkB,IAAA,EAAA,MAAA;;;;;;;;;UAlBpDG,qBAAAA;;WAEJD;;;;;;;;;;;;;;;;cAgBQE,qBAAAA,SAA8BJ,kBAAAA;;;;;;;;;;;;;;;;;;;;;;KAa2DC;;;;;;;;;;;;;;;;;MAiBtGY,QAAQd;;;;;;8CAMgCc,QAAQV"}