{"version":3,"file":"search.d.cts","names":["gmail_v1","z","InferInteropZodOutput","GmailBaseTool","GmailBaseToolParams","searchSchema","ZodString","ZodNumber","ZodOptional","ZodEnum","ZodTypeAny","ZodObject","SearchSchema","infer","GmailSearch","Promise","Gmail","Schema$Message","Schema$Thread"],"sources":["../../../src/tools/gmail/search.d.ts"],"sourcesContent":["import { gmail_v1 } from \"googleapis\";\nimport { z } from \"zod/v3\";\nimport { InferInteropZodOutput } from \"@langchain/core/utils/types\";\nimport { GmailBaseTool, GmailBaseToolParams } from \"./base.js\";\ndeclare const searchSchema: z.ZodObject<{\n    query: z.ZodString;\n    maxResults: z.ZodOptional<z.ZodNumber>;\n    resource: z.ZodOptional<z.ZodEnum<[\"messages\", \"threads\"]>>;\n}, \"strip\", z.ZodTypeAny, {\n    query: string;\n    maxResults?: number | undefined;\n    resource?: \"messages\" | \"threads\" | undefined;\n}, {\n    query: string;\n    maxResults?: number | undefined;\n    resource?: \"messages\" | \"threads\" | undefined;\n}>;\nexport type SearchSchema = z.infer<typeof searchSchema>;\nexport declare class GmailSearch extends GmailBaseTool {\n    name: string;\n    schema: z.ZodObject<{\n        query: z.ZodString;\n        maxResults: z.ZodOptional<z.ZodNumber>;\n        resource: z.ZodOptional<z.ZodEnum<[\"messages\", \"threads\"]>>;\n    }, \"strip\", z.ZodTypeAny, {\n        query: string;\n        maxResults?: number | undefined;\n        resource?: \"messages\" | \"threads\" | undefined;\n    }, {\n        query: string;\n        maxResults?: number | undefined;\n        resource?: \"messages\" | \"threads\" | undefined;\n    }>;\n    description: string;\n    constructor(fields?: GmailBaseToolParams);\n    _call(arg: InferInteropZodOutput<SearchSchema>): Promise<string>;\n    parseMessages(gmail: gmail_v1.Gmail, messages: gmail_v1.Schema$Message[]): Promise<gmail_v1.Schema$Message[]>;\n    parseThreads(gmail: gmail_v1.Gmail, messages: gmail_v1.Schema$Message[]): Promise<gmail_v1.Schema$Thread[]>;\n}\nexport {};\n"],"mappings":";;;;;;cAIcK,cAAcJ,CAAAA,CAAEU;SACnBV,CAAAA,CAAEK;EADCD,UAAAA,EAEEJ,CAAAA,CAAEO,WAUhB,CAV4BP,CAAAA,CAAEM,SAU9B,CAAA;EAAA,QAAA,EATYN,CAAAA,CAAEO,WASd,CAT0BP,CAAAA,CAAEQ,OAS5B,CAAA,CAAA,UAAA,EAAA,SAAA,CAAA,CAAA,CAAA;CAAA,EAAA,OAXWH,EAGDL,CAAAA,CAAES,UAHDJ,EAAAA;EAAS,KACUC,EAAAA,MAAAA;EAAS,UAAvBC,CAAAA,EAAAA,MAAAA,GAAAA,SAAAA;EAAW,QACCC,CAAAA,EAAAA,UAAAA,GAAAA,SAAAA,GAAAA,SAAAA;CAAO,EAAA;EAAV,KACbC,EAAAA,MAAAA;EAAU,UAJMC,CAAAA,EAAAA,MAAAA,GAAAA,SAAAA;EAAS,QAAA,CAAA,EAAA,UAAA,GAAA,SAAA,GAAA,SAAA;AAavC,CAAA,CAAA;AAAwB,KAAZC,YAAAA,GAAeX,CAAAA,CAAEY,KAAL,CAAA,OAAkBR,YAAlB,CAAA;AAAkBA,cACrBS,WAAAA,SAAoBX,aAAAA,CADCE;EAAY,IAA3BJ,EAAEY,MAAAA;EAAK,MAAA,EAGtBZ,CAAAA,CAAEU,SAHoB,CAAA;IACbG,KAAAA,EAGNb,CAAAA,CAAEK,SAHe;IAAA,UAAA,EAIZL,CAAAA,CAAEO,WAJU,CAIEP,CAAAA,CAAEM,SAJJ,CAAA;IAGjBN,QAAEK,EAECL,CAAAA,CAAEO,WAFHF,CAEeL,CAAAA,CAAEQ,OAFjBH,CAAAA,CAAAA,UAAAA,EAAAA,SAAAA,CAAAA,CAAAA,CAAAA;EAAS,CAAA,EACQL,OAAEM,EAEpBN,CAAAA,CAAES,UAFkBH,EAAAA;IAAhBN,KAAEO,EAAAA,MAAAA;IACUP,UAAEQ,CAAAA,EAAAA,MAAAA,GAAAA,SAAAA;IAAhBR,QAAEO,CAAAA,EAAAA,UAAAA,GAAAA,SAAAA,GAAAA,SAAAA;EAAW,CAAA,EACfP;IAJJA,KAAEU,EAAAA,MAAAA;IAcWP,UAAAA,CAAAA,EAAAA,MAAAA,GAAAA,SAAAA;IACYQ,QAAAA,CAAAA,EAAAA,UAAAA,GAAAA,SAAAA,GAAAA,SAAAA;EAAY,CAAA,CAAA;EAAb,WAAiBG,EAAAA,MAAAA;EAAO,WACnCf,CAASgB,MAAAA,CAAAA,EAFTZ,mBAESY;EAAK,KAAYhB,CAAAA,GAAAA,EADpCE,qBAC6Ce,CADvBL,YACuBK,CAAAA,CAAAA,EADPF,OACOE,CAAAA,MAAAA,CAAAA;EAAc,aAAsBA,CAAAA,KAAAA,EAAvEjB,QAAAA,CAASgB,KAA8DC,EAAAA,QAAAA,EAA7CjB,QAAAA,CAASiB,cAAoCA,EAAAA,CAAAA,EAAjBF,OAAiBE,CAATjB,QAAAA,CAASiB,cAAAA,EAAAA,CAAAA;EAAc,YAA/BF,CAAAA,KAAAA,EACvDf,QAAAA,CAASgB,KAD8CD,EAAAA,QAAAA,EAC7Bf,QAAAA,CAASiB,cADoBF,EAAAA,CAAAA,EACDA,OADCA,CACOf,QAAAA,CAASkB,aADhBH,EAAAA,CAAAA"}