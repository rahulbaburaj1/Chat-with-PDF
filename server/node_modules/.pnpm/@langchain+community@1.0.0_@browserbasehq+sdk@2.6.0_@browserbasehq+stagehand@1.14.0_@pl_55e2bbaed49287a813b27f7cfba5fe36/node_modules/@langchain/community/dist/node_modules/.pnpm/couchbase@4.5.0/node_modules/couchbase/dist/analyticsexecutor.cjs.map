{"version":3,"file":"analyticsexecutor.cjs","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/analyticsexecutor.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnalyticsExecutor = void 0;\n/* eslint jsdoc/require-jsdoc: off */\nconst analyticstypes_1 = require(\"./analyticstypes\");\nconst bindingutilities_1 = require(\"./bindingutilities\");\nconst streamablepromises_1 = require(\"./streamablepromises\");\n/**\n * @internal\n */\nclass AnalyticsExecutor {\n    /**\n     * @internal\n     */\n    constructor(cluster) {\n        this._cluster = cluster;\n    }\n    /**\n     * @internal\n     */\n    query(query, options) {\n        const emitter = new streamablepromises_1.StreamableRowPromise((rows, meta) => {\n            return new analyticstypes_1.AnalyticsResult({\n                rows: rows,\n                meta: meta,\n            });\n        });\n        const timeout = options.timeout || this._cluster.analyticsTimeout;\n        this._cluster.conn.analytics({\n            statement: query,\n            timeout,\n            client_context_id: options.clientContextId,\n            readonly: options.readOnly || false,\n            priority: options.priority || false,\n            scope_qualifier: options.queryContext,\n            scan_consistency: (0, bindingutilities_1.analyticsScanConsistencyToCpp)(options.scanConsistency),\n            raw: options.raw\n                ? Object.fromEntries(Object.entries(options.raw)\n                    .filter(([, v]) => v !== undefined)\n                    .map(([k, v]) => [k, JSON.stringify(v)]))\n                : {},\n            positional_parameters: options.parameters && Array.isArray(options.parameters)\n                ? options.parameters.map((v) => JSON.stringify(v !== null && v !== void 0 ? v : null))\n                : [],\n            named_parameters: options.parameters && !Array.isArray(options.parameters)\n                ? Object.fromEntries(Object.entries(options.parameters)\n                    .filter(([, v]) => v !== undefined)\n                    .map(([k, v]) => [k, JSON.stringify(v)]))\n                : {},\n            body_str: '',\n        }, (cppErr, resp) => {\n            const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n            if (err) {\n                emitter.emit('error', err);\n                emitter.emit('end');\n                return;\n            }\n            resp.rows.forEach((row) => {\n                emitter.emit('row', JSON.parse(row));\n            });\n            {\n                const metaData = resp.meta;\n                let warnings;\n                if (metaData.warnings) {\n                    warnings = metaData.warnings.map((warningData) => new analyticstypes_1.AnalyticsWarning({\n                        code: warningData.code,\n                        message: warningData.message,\n                    }));\n                }\n                else {\n                    warnings = [];\n                }\n                const metricsData = metaData.metrics;\n                const metrics = new analyticstypes_1.AnalyticsMetrics({\n                    elapsedTime: metricsData.elapsed_time,\n                    executionTime: metricsData.execution_time,\n                    resultCount: metricsData.result_count,\n                    resultSize: metricsData.result_size,\n                    errorCount: metricsData.error_count,\n                    processedObjects: metricsData.processed_objects,\n                    warningCount: metricsData.warning_count,\n                });\n                const meta = new analyticstypes_1.AnalyticsMetaData({\n                    requestId: metaData.request_id,\n                    clientContextId: metaData.client_context_id,\n                    status: (0, bindingutilities_1.analyticsStatusFromCpp)(metaData.status),\n                    signature: metaData.signature\n                        ? JSON.parse(metaData.signature)\n                        : undefined,\n                    warnings: warnings,\n                    metrics: metrics,\n                });\n                emitter.emit('meta', meta);\n            }\n            emitter.emit('end');\n            return;\n        });\n        return emitter;\n    }\n}\nexports.AnalyticsExecutor = AnalyticsExecutor;\n"],"x_google_ignoreList":[0],"mappings":";;;;;;;;;;CACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAM,EAAC;CAC7D,QAAQ,oBAAoB,KAAK;CAEjC,MAAM;CACN,MAAM;CACN,MAAM;;;;CAIN,IAAM,oBAAN,MAAwB;;;;EAIpB,YAAY,SAAS;GACjB,KAAK,WAAW;EACnB;;;;EAID,MAAM,OAAO,SAAS;GAClB,MAAM,UAAU,IAAI,qBAAqB,qBAAqB,CAAC,MAAM,SAAS;AAC1E,WAAO,IAAI,iBAAiB,gBAAgB;KAClC;KACA;IACT;GACJ;GACD,MAAM,UAAU,QAAQ,WAAW,KAAK,SAAS;GACjD,KAAK,SAAS,KAAK,UAAU;IACzB,WAAW;IACX;IACA,mBAAmB,QAAQ;IAC3B,UAAU,QAAQ,YAAY;IAC9B,UAAU,QAAQ,YAAY;IAC9B,iBAAiB,QAAQ;IACzB,mBAAmB,GAAG,mBAAmB,+BAA+B,QAAQ,gBAAgB;IAChG,KAAK,QAAQ,MACP,OAAO,YAAY,OAAO,QAAQ,QAAQ,IAAI,CAC3C,OAAO,CAAC,GAAG,EAAE,KAAK,MAAM,OAAU,CAClC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,KAAK,UAAU,EAAE,AAAC,EAAC,CAAC,GAC3C,CAAE;IACR,uBAAuB,QAAQ,cAAc,MAAM,QAAQ,QAAQ,WAAW,GACxE,QAAQ,WAAW,IAAI,CAAC,MAAM,KAAK,UAAU,MAAM,QAAQ,MAAM,KAAK,IAAI,IAAI,KAAK,CAAC,GACpF,CAAE;IACR,kBAAkB,QAAQ,cAAc,CAAC,MAAM,QAAQ,QAAQ,WAAW,GACpE,OAAO,YAAY,OAAO,QAAQ,QAAQ,WAAW,CAClD,OAAO,CAAC,GAAG,EAAE,KAAK,MAAM,OAAU,CAClC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,KAAK,UAAU,EAAE,AAAC,EAAC,CAAC,GAC3C,CAAE;IACR,UAAU;GACb,GAAE,CAAC,QAAQ,SAAS;IACjB,MAAM,OAAO,GAAG,mBAAmB,cAAc,OAAO;AACxD,QAAI,KAAK;KACL,QAAQ,KAAK,SAAS,IAAI;KAC1B,QAAQ,KAAK,MAAM;AACnB;IACH;IACD,KAAK,KAAK,QAAQ,CAAC,QAAQ;KACvB,QAAQ,KAAK,OAAO,KAAK,MAAM,IAAI,CAAC;IACvC,EAAC;IACF;KACI,MAAM,WAAW,KAAK;KACtB,IAAI;AACJ,SAAI,SAAS,UACT,WAAW,SAAS,SAAS,IAAI,CAAC,gBAAgB,IAAI,iBAAiB,iBAAiB;MACpF,MAAM,YAAY;MAClB,SAAS,YAAY;KACxB,GAAE;UAGH,WAAW,CAAE;KAEjB,MAAM,cAAc,SAAS;KAC7B,MAAM,UAAU,IAAI,iBAAiB,iBAAiB;MAClD,aAAa,YAAY;MACzB,eAAe,YAAY;MAC3B,aAAa,YAAY;MACzB,YAAY,YAAY;MACxB,YAAY,YAAY;MACxB,kBAAkB,YAAY;MAC9B,cAAc,YAAY;KAC7B;KACD,MAAM,OAAO,IAAI,iBAAiB,kBAAkB;MAChD,WAAW,SAAS;MACpB,iBAAiB,SAAS;MAC1B,SAAS,GAAG,mBAAmB,wBAAwB,SAAS,OAAO;MACvE,WAAW,SAAS,YACd,KAAK,MAAM,SAAS,UAAU,GAC9B;MACI;MACD;KACZ;KACD,QAAQ,KAAK,QAAQ,KAAK;IAC7B;IACD,QAAQ,KAAK,MAAM;GAEtB,EAAC;AACF,UAAO;EACV;CACJ;CACD,QAAQ,oBAAoB"}