{"version":3,"file":"searchtypes.js","names":["HighlightStyle","SearchScanConsistency"],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/searchtypes.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SearchRequest = exports.SearchScanConsistency = exports.HighlightStyle = exports.SearchResult = exports.SearchRow = exports.SearchMetaData = void 0;\nconst errors_1 = require(\"./errors\");\nconst searchquery_1 = require(\"./searchquery\");\nconst vectorsearch_1 = require(\"./vectorsearch\");\n/**\n * SearchMetaData represents the meta-data available from a search query.\n * This class is currently incomplete and must be casted to `any` in\n * TypeScript to be used.\n *\n * @category Full Text Search\n */\nclass SearchMetaData {\n}\nexports.SearchMetaData = SearchMetaData;\n/**\n * SearchRow represents the data available from a row of a search query.\n * This class is currently incomplete and must be casted to `any` in\n * TypeScript to be used.\n *\n * @category Full Text Search\n */\nclass SearchRow {\n}\nexports.SearchRow = SearchRow;\n/**\n * Contains the results of a search query.\n *\n * @category Full Text Search\n */\nclass SearchResult {\n    /**\n     * @internal\n     */\n    constructor(data) {\n        this.rows = data.rows;\n        this.meta = data.meta;\n    }\n}\nexports.SearchResult = SearchResult;\n/**\n * Specifies the highlight style that should be used for matches in the results.\n *\n * @category Full Text Search\n */\nvar HighlightStyle;\n(function (HighlightStyle) {\n    /**\n     * Indicates that matches should be highlighted using HTML tags in the result text.\n     */\n    HighlightStyle[\"HTML\"] = \"html\";\n    /**\n     * Indicates that matches should be highlighted using ASCII coding in the result test.\n     */\n    HighlightStyle[\"ANSI\"] = \"ansi\";\n})(HighlightStyle || (exports.HighlightStyle = HighlightStyle = {}));\n/**\n * Represents the various scan consistency options that are available when\n * querying against the query service.\n *\n * @category Full Text Search\n */\nvar SearchScanConsistency;\n(function (SearchScanConsistency) {\n    /**\n     * Indicates that no specific consistency is required, this is the fastest\n     * options, but results may not include the most recent operations which have\n     * been performed.\n     */\n    SearchScanConsistency[\"NotBounded\"] = \"not_bounded\";\n})(SearchScanConsistency || (exports.SearchScanConsistency = SearchScanConsistency = {}));\n/**\n *  Represents a search query and/or vector search to execute via the Couchbase Full Text Search (FTS) service.\n *\n * @category Full Text Search\n */\nclass SearchRequest {\n    constructor(query) {\n        if (query instanceof searchquery_1.SearchQuery) {\n            this._searchQuery = query;\n        }\n        else if (query instanceof vectorsearch_1.VectorSearch) {\n            this._vectorSearch = query;\n        }\n        else {\n            throw new errors_1.InvalidArgumentError(new Error('Must provide either a SearchQuery or VectorSearch when creating SearchRequest.'));\n        }\n    }\n    /**\n     * @internal\n     */\n    get searchQuery() {\n        return this._searchQuery;\n    }\n    /**\n     * @internal\n     */\n    get vectorSearch() {\n        return this._vectorSearch;\n    }\n    /**\n     * Adds a search query to the request if the request does not already have a search query.\n     *\n     * @param query A SearchQuery to add to the request.\n     */\n    withSearchQuery(query) {\n        if (!(query instanceof searchquery_1.SearchQuery)) {\n            throw new errors_1.InvalidArgumentError(new Error('Must provide a SearchQuery.'));\n        }\n        if (this._searchQuery) {\n            throw new errors_1.InvalidArgumentError(new Error('Request already has a SearchQuery.'));\n        }\n        this._searchQuery = query;\n        return this;\n    }\n    /**\n     * Adds a vector search to the request if the request does not already have a vector search.\n     *\n     * @param search A VectorSearch to add to the request.\n     */\n    withVectorSearch(search) {\n        if (!(search instanceof vectorsearch_1.VectorSearch)) {\n            throw new errors_1.InvalidArgumentError(new Error('Must provide a VectorSearch.'));\n        }\n        if (this._vectorSearch) {\n            throw new errors_1.InvalidArgumentError(new Error('Request already has a VectorSearch.'));\n        }\n        this._vectorSearch = search;\n        return this;\n    }\n    /**\n     * Creates a search request.\n     *\n     * @param query Either a SearchQuery or VectorSearch to add to the search request.\n     */\n    static create(query) {\n        return new SearchRequest(query);\n    }\n}\nexports.SearchRequest = SearchRequest;\n"],"x_google_ignoreList":[0],"mappings":";;;;;;;;;CACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAM,EAAC;CAC7D,QAAQ,gBAAgB,QAAQ,wBAAwB,QAAQ,iBAAiB,QAAQ,eAAe,QAAQ,YAAY,QAAQ,iBAAiB,KAAK;CAC1J,MAAM;CACN,MAAM;CACN,MAAM;;;;;;;;CAQN,IAAM,iBAAN,MAAqB,CACpB;CACD,QAAQ,iBAAiB;;;;;;;;CAQzB,IAAM,YAAN,MAAgB,CACf;CACD,QAAQ,YAAY;;;;;;CAMpB,IAAM,eAAN,MAAmB;;;;EAIf,YAAY,MAAM;GACd,KAAK,OAAO,KAAK;GACjB,KAAK,OAAO,KAAK;EACpB;CACJ;CACD,QAAQ,eAAe;;;;;;CAMvB,IAAI;EACH,SAAUA,kBAAgB;;;;EAIvBA,iBAAe,UAAU;;;;EAIzBA,iBAAe,UAAU;CAC5B,GAAE,mBAAmB,QAAQ,iBAAiB,iBAAiB,CAAE,GAAE;;;;;;;CAOpE,IAAI;EACH,SAAUC,yBAAuB;;;;;;EAM9BA,wBAAsB,gBAAgB;CACzC,GAAE,0BAA0B,QAAQ,wBAAwB,wBAAwB,CAAE,GAAE;;;;;;CAMzF,IAAM,gBAAN,MAAM,cAAc;EAChB,YAAY,OAAO;AACf,OAAI,iBAAiB,cAAc,aAC/B,KAAK,eAAe;YAEf,iBAAiB,eAAe,cACrC,KAAK,gBAAgB;OAGrB,OAAM,IAAI,SAAS,qCAAqB,IAAI,MAAM;EAEzD;;;;EAID,IAAI,cAAc;AACd,UAAO,KAAK;EACf;;;;EAID,IAAI,eAAe;AACf,UAAO,KAAK;EACf;;;;;;EAMD,gBAAgB,OAAO;AACnB,OAAI,EAAE,iBAAiB,cAAc,aACjC,OAAM,IAAI,SAAS,qCAAqB,IAAI,MAAM;AAEtD,OAAI,KAAK,aACL,OAAM,IAAI,SAAS,qCAAqB,IAAI,MAAM;GAEtD,KAAK,eAAe;AACpB,UAAO;EACV;;;;;;EAMD,iBAAiB,QAAQ;AACrB,OAAI,EAAE,kBAAkB,eAAe,cACnC,OAAM,IAAI,SAAS,qCAAqB,IAAI,MAAM;AAEtD,OAAI,KAAK,cACL,OAAM,IAAI,SAAS,qCAAqB,IAAI,MAAM;GAEtD,KAAK,gBAAgB;AACrB,UAAO;EACV;;;;;;EAMD,OAAO,OAAO,OAAO;AACjB,UAAO,IAAI,cAAc;EAC5B;CACJ;CACD,QAAQ,gBAAgB"}