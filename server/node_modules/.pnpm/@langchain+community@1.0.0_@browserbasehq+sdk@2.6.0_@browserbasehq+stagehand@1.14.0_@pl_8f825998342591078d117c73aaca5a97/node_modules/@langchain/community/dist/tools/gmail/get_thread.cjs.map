{"version":3,"file":"get_thread.cjs","names":["z","GmailBaseTool","GET_THREAD_DESCRIPTION","fields?: GmailBaseToolParams","arg: InferInteropZodOutput<GetThreadSchema>"],"sources":["../../../src/tools/gmail/get_thread.ts"],"sourcesContent":["import { z } from \"zod/v3\";\nimport { InferInteropZodOutput } from \"@langchain/core/utils/types\";\nimport { GmailBaseTool, GmailBaseToolParams } from \"./base.js\";\nimport { GET_THREAD_DESCRIPTION } from \"./descriptions.js\";\n\nconst getThreadSchema = z.object({\n  threadId: z.string(),\n});\nexport type GetThreadSchema = z.infer<typeof getThreadSchema>;\n\nexport class GmailGetThread extends GmailBaseTool {\n  name = \"gmail_get_thread\";\n\n  schema = getThreadSchema;\n\n  description = GET_THREAD_DESCRIPTION;\n\n  constructor(fields?: GmailBaseToolParams) {\n    super(fields);\n  }\n\n  async _call(arg: InferInteropZodOutput<GetThreadSchema>) {\n    const { threadId } = arg;\n\n    const gmail = await this.getGmailClient();\n\n    const { data } = await gmail.users.threads.get({\n      userId: \"me\",\n      format: \"full\",\n\n      id: threadId,\n    });\n\n    if (!data) {\n      throw new Error(\"No data returned from Gmail\");\n    }\n\n    const { messages } = data;\n\n    if (!messages) {\n      throw new Error(\"No messages returned from Gmail\");\n    }\n\n    return `Result for the prompt ${threadId} \\n${JSON.stringify(\n      messages.map((message) => {\n        const { payload } = message;\n\n        if (!payload) {\n          throw new Error(\"No payload returned from Gmail\");\n        }\n\n        const { headers } = payload;\n\n        if (!headers) {\n          throw new Error(\"No headers returned from Gmail\");\n        }\n\n        const { subject, sender, body } = this.parseHeaderAndBody(payload);\n\n        if (!subject) {\n          throw new Error(\"No subject returned from Gmail\");\n        }\n\n        if (!body) {\n          throw new Error(\"No body returned from Gmail\");\n        }\n\n        if (!sender) {\n          throw new Error(\"No from returned from Gmail\");\n        }\n\n        const to = headers.find((header) => header.name === \"To\");\n\n        if (!to) {\n          throw new Error(\"No to returned from Gmail\");\n        }\n\n        const date = headers.find((header) => header.name === \"Date\");\n\n        if (!date) {\n          throw new Error(\"No date returned from Gmail\");\n        }\n\n        const messageIdHeader = headers.find(\n          (header) => header.name === \"Message-ID\"\n        );\n\n        if (!messageIdHeader) {\n          throw new Error(\"No message id returned from Gmail\");\n        }\n\n        return {\n          subject: subject.value,\n          body,\n          from: sender.value,\n          to: to.value,\n          date: date.value,\n          messageId: messageIdHeader.value,\n        };\n      })\n    )}`;\n  }\n}\n"],"mappings":";;;;;;AAKA,MAAM,kBAAkBA,SAAE,OAAO,EAC/B,UAAUA,SAAE,QAAQ,CACrB,EAAC;AAGF,IAAa,iBAAb,cAAoCC,2BAAc;CAChD,OAAO;CAEP,SAAS;CAET,cAAcC;CAEd,YAAYC,QAA8B;EACxC,MAAM,OAAO;CACd;CAED,MAAM,MAAMC,KAA6C;EACvD,MAAM,EAAE,UAAU,GAAG;EAErB,MAAM,QAAQ,MAAM,KAAK,gBAAgB;EAEzC,MAAM,EAAE,MAAM,GAAG,MAAM,MAAM,MAAM,QAAQ,IAAI;GAC7C,QAAQ;GACR,QAAQ;GAER,IAAI;EACL,EAAC;AAEF,MAAI,CAAC,KACH,OAAM,IAAI,MAAM;EAGlB,MAAM,EAAE,UAAU,GAAG;AAErB,MAAI,CAAC,SACH,OAAM,IAAI,MAAM;AAGlB,SAAO,CAAC,sBAAsB,EAAE,SAAS,GAAG,EAAE,KAAK,UACjD,SAAS,IAAI,CAAC,YAAY;GACxB,MAAM,EAAE,SAAS,GAAG;AAEpB,OAAI,CAAC,QACH,OAAM,IAAI,MAAM;GAGlB,MAAM,EAAE,SAAS,GAAG;AAEpB,OAAI,CAAC,QACH,OAAM,IAAI,MAAM;GAGlB,MAAM,EAAE,SAAS,QAAQ,MAAM,GAAG,KAAK,mBAAmB,QAAQ;AAElE,OAAI,CAAC,QACH,OAAM,IAAI,MAAM;AAGlB,OAAI,CAAC,KACH,OAAM,IAAI,MAAM;AAGlB,OAAI,CAAC,OACH,OAAM,IAAI,MAAM;GAGlB,MAAM,KAAK,QAAQ,KAAK,CAAC,WAAW,OAAO,SAAS,KAAK;AAEzD,OAAI,CAAC,GACH,OAAM,IAAI,MAAM;GAGlB,MAAM,OAAO,QAAQ,KAAK,CAAC,WAAW,OAAO,SAAS,OAAO;AAE7D,OAAI,CAAC,KACH,OAAM,IAAI,MAAM;GAGlB,MAAM,kBAAkB,QAAQ,KAC9B,CAAC,WAAW,OAAO,SAAS,aAC7B;AAED,OAAI,CAAC,gBACH,OAAM,IAAI,MAAM;AAGlB,UAAO;IACL,SAAS,QAAQ;IACjB;IACA,MAAM,OAAO;IACb,IAAI,GAAG;IACP,MAAM,KAAK;IACX,WAAW,gBAAgB;GAC5B;EACF,EAAC,CACH,EAAE;CACJ;AACF"}