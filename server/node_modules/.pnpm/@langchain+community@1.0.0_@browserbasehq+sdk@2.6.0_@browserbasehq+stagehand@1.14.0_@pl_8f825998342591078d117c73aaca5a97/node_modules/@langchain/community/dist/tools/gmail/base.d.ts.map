{"version":3,"file":"base.d.ts","names":["gmail_v1","StructuredTool","GmailBaseToolParams","Promise","GmailBaseTool","Gmail","credentials","scopes","Schema$MessagePart","Schema$MessagePartHeader"],"sources":["../../../src/tools/gmail/base.d.ts"],"sourcesContent":["import { gmail_v1 } from \"googleapis\";\nimport { StructuredTool } from \"@langchain/core/tools\";\nexport interface GmailBaseToolParams {\n    credentials?: {\n        clientEmail?: string;\n        privateKey?: string;\n        keyfile?: string;\n        subject?: string;\n        // support string and async function to handle token validation and expiration\n        accessToken?: string | (() => Promise<string>);\n    };\n    scopes?: string[];\n}\nexport declare abstract class GmailBaseTool extends StructuredTool {\n    name: string;\n    description: string;\n    protected params: GmailBaseToolParams;\n    protected gmail?: gmail_v1.Gmail;\n    constructor({ credentials, scopes }?: GmailBaseToolParams);\n    getGmailClient(): Promise<gmail_v1.Gmail>;\n    parseHeaderAndBody(payload: gmail_v1.Schema$MessagePart | undefined): {\n        body: string;\n        subject?: undefined;\n        sender?: undefined;\n    } | {\n        subject: gmail_v1.Schema$MessagePartHeader | undefined;\n        sender: gmail_v1.Schema$MessagePartHeader | undefined;\n        body: string;\n    };\n    decodeBody(body: string): string;\n}\n"],"mappings":";;;;UAEiBE,mBAAAA;;IAAAA,WAAAA,CAAAA,EAAAA,MAAmB;IAWNE,UAAAA,CAAAA,EAAa,MAAA;IAAA,OAAA,CAAA,EAAA,MAAA;IAGrBF,OAAAA,CAAAA,EAAAA,MAAAA;IACAF;IACJM,WAAAA,CAAAA,EAAAA,MAAAA,GAAAA,CAAAA,GAAAA,GAToBH,OASpBG,CAAAA,MAAAA,CAAAA,CAAAA;EAAW,CAAA;EAAQ,MAAKJ,CAAAA,EAAAA,MAAAA,EAAAA;;AACpBC,uBANQC,aAAAA,SAAsBH,cAAAA,CAM9BE;EAAO,IACGH,EAAAA,MAASQ;EAAkB,WAK1CR,EAASS,MAAAA;EAAwB,UAClCT,MAASS,EAVHP,mBAUGO;EAAwB,UAbGR,KAAAA,CAAAA,EAI9BD,QAAAA,CAASK,KAJqBJ;EAAc,WAAA,CAAA;IAAA,WAAA;IAAA;EAAA,CAAA,CAAA,EAKxBC,mBALwB;oBAM5CC,QAAQH,QAAAA,CAASK;8BACPL,QAAAA,CAASQ;;;;;aAKxBR,QAAAA,CAASS;YACVT,QAAAA,CAASS"}