{"version":3,"file":"bm25.d.ts","names":["BaseRetriever","BaseRetrieverInput","Document","BM25RetrieverOptions","BM25Retriever","Omit","Record","Promise"],"sources":["../../src/retrievers/bm25.d.ts"],"sourcesContent":["import { BaseRetriever, BaseRetrieverInput } from \"@langchain/core/retrievers\";\nimport { Document } from \"@langchain/core/documents\";\nexport type BM25RetrieverOptions = {\n    docs: Document[];\n    k: number;\n    includeScore?: boolean;\n} & BaseRetrieverInput;\n/**\n * A retriever that uses the BM25 algorithm to rank documents based on their\n * similarity to a query. It uses the \"okapibm25\" package for BM25 scoring.\n * The k parameter determines the number of documents to return for each query.\n */\nexport declare class BM25Retriever extends BaseRetriever {\n    includeScore: boolean;\n    static lc_name(): string;\n    lc_namespace: string[];\n    static fromDocuments(documents: Document[], options: Omit<BM25RetrieverOptions, \"docs\">): BM25Retriever;\n    docs: Document[];\n    k: number;\n    constructor(options: BM25RetrieverOptions);\n    private preprocessFunc;\n    _getRelevantDocuments(query: string): Promise<(Document<Record<string, any>> | Document<{\n        bm25Score: number;\n    }>)[]>;\n}\n"],"mappings":";;;;;;;KAEYG,oBAAAA;QACFD;;;IAGND;;;;AAJJ;;AACUC,cASWE,aAAAA,SAAsBJ,aAAAA,CATjCE;EAAQ,YAGdD,EAAAA,OAAAA;EAAkB,OAAA,OAAA,CAAA,CAAA,EAAA,MAAA;EAMDG,YAAAA,EAAAA,MAAa,EAAA;EAAA,OAAA,aAAA,CAAA,SAAA,EAIEF,QAJF,EAAA,EAAA,OAAA,EAIuBG,IAJvB,CAI4BF,oBAJ5B,EAAA,MAAA,CAAA,CAAA,EAI4DC,aAJ5D;EAAA,IAIEF,EAC1BA,QAD0BA,EAAAA;EAAQ,CAAA,EAAkBC,MAAAA;EAAoB,WAAzBE,CAAAA,OAAAA,EAGhCF,oBAHgCE;EAAI,QAAiCD,cAAAA;EAAa,qBACjGF,CAAAA,KAAAA,EAAAA,MAAAA,CAAAA,EAIgCK,OAJhCL,CAAAA,CAIyCA,QAJzCA,CAIkDI,MAJlDJ,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA,CAAAA,GAIyEA,QAJzEA,CAAAA;IAEeC,SAAAA,EAAAA,MAAAA;EAAoB,CAAA,CAAA,CAEeG,EAAAA,CAAAA"}