{"version":3,"file":"authenticators.cjs","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/authenticators.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CertificateAuthenticator = exports.PasswordAuthenticator = void 0;\n/**\n * PasswordAuthenticator implements a simple IPasswordAuthenticator.\n *\n * @category Authentication\n */\nclass PasswordAuthenticator {\n    /**\n     * Constructs this PasswordAuthenticator with the passed username and password.\n     *\n     * @param username The username to initialize this authenticator with.\n     * @param password The password to initialize this authenticator with.\n     */\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    /**\n     * Creates a LDAP compatible password authenticator which is INSECURE if not used with TLS.\n     *\n     * Please note that this is INSECURE and will leak user credentials on the wire to eavesdroppers.\n     * This should only be enabled in trusted environments.\n     *\n     * @param username The username to initialize this authenticator with.\n     * @param password The password to initialize this authenticator with.\n     */\n    static ldapCompatible(username, password) {\n        const auth = new PasswordAuthenticator(username, password);\n        auth.allowed_sasl_mechanisms = ['PLAIN'];\n        return auth;\n    }\n}\nexports.PasswordAuthenticator = PasswordAuthenticator;\n/**\n * CertificateAuthenticator implements a simple ICertificateAuthenticator.\n *\n * @category Authentication\n */\nclass CertificateAuthenticator {\n    /**\n     * Constructs this CertificateAuthenticator with the passed certificate and key paths.\n     *\n     * @param certificatePath The certificate path to initialize this authenticator with.\n     * @param keyPath The key path to initialize this authenticator with.\n     */\n    constructor(certificatePath, keyPath) {\n        this.certificatePath = certificatePath;\n        this.keyPath = keyPath;\n    }\n}\nexports.CertificateAuthenticator = CertificateAuthenticator;\n"],"x_google_ignoreList":[0],"mappings":";;;;;;;CACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAM,EAAC;CAC7D,QAAQ,2BAA2B,QAAQ,wBAAwB,KAAK;;;;;;CAMxE,IAAM,wBAAN,MAAM,sBAAsB;;;;;;;EAOxB,YAAY,UAAU,UAAU;GAC5B,KAAK,WAAW;GAChB,KAAK,WAAW;EACnB;;;;;;;;;;EAUD,OAAO,eAAe,UAAU,UAAU;GACtC,MAAM,OAAO,IAAI,sBAAsB,UAAU;GACjD,KAAK,0BAA0B,CAAC,OAAQ;AACxC,UAAO;EACV;CACJ;CACD,QAAQ,wBAAwB;;;;;;CAMhC,IAAM,2BAAN,MAA+B;;;;;;;EAO3B,YAAY,iBAAiB,SAAS;GAClC,KAAK,kBAAkB;GACvB,KAAK,UAAU;EAClB;CACJ;CACD,QAAQ,2BAA2B"}