{"version":3,"file":"stagehand.d.ts","names":["Tool","BaseToolkit","Toolkit","StructuredTool","StructuredToolInterface","Stagehand","z","StagehandToolBase","Promise","StagehandNavigateTool","StagehandActTool","StagehandExtractTool","ZodString","ZodAny","ZodRecord","ZodTypeAny","Record","ZodObject","AnyZodObject","StagehandObserveTool","StagehandToolkit"],"sources":["../../../src/agents/toolkits/stagehand.d.ts"],"sourcesContent":["import { Tool, BaseToolkit as Toolkit, StructuredTool, StructuredToolInterface } from \"@langchain/core/tools\";\nimport { Stagehand } from \"@browserbasehq/stagehand\";\nimport { z } from \"zod/v3\";\n//  Documentation is here:\n//  https://js.langchain.com/docs/integrations/tools/stagehand\ndeclare abstract class StagehandToolBase extends Tool {\n    protected stagehand?: Stagehand;\n    private localStagehand?;\n    constructor(stagehandInstance?: Stagehand);\n    protected getStagehand(): Promise<Stagehand>;\n}\nexport declare class StagehandNavigateTool extends StagehandToolBase {\n    name: string;\n    description: string;\n    _call(input: string): Promise<string>;\n}\nexport declare class StagehandActTool extends StagehandToolBase {\n    name: string;\n    description: string;\n    _call(input: string): Promise<string>;\n}\nexport declare class StagehandExtractTool extends StructuredTool {\n    name: string;\n    description: string;\n    // Define the input schema for the tool\n    schema: z.ZodObject<{\n        instruction: z.ZodString;\n        schema: z.ZodRecord<z.ZodString, z.ZodAny>;\n    }, \"strip\", z.ZodTypeAny, {\n        instruction: string;\n        schema: Record<string, any>;\n    }, {\n        instruction: string;\n        schema: Record<string, any>;\n    }>;\n    private stagehand?;\n    constructor(stagehandInstance?: Stagehand);\n    _call(input: {\n        instruction: string;\n        schema: z.AnyZodObject;\n    }): Promise<string>;\n    protected getStagehand(): Promise<Stagehand>;\n}\nexport declare class StagehandObserveTool extends StagehandToolBase {\n    name: string;\n    description: string;\n    _call(input: string): Promise<string>;\n}\nexport declare class StagehandToolkit extends Toolkit {\n    tools: StructuredToolInterface[];\n    stagehand?: Stagehand;\n    constructor(stagehand?: Stagehand);\n    private initializeTools;\n    static fromStagehand(stagehand: Stagehand): Promise<StagehandToolkit>;\n}\nexport {};\n"],"mappings":";;;;;;;;;;uBAKuBO,iBAAAA,SAA0BP,IAAAA;wBACvBK;;kCAEUA;4BACNG,QAAQH;;cAEjBI,qBAAAA,SAA8BF,iBAAAA;;;EAN5BA,KAAAA,CAAAA,KAAAA,EAAAA,MAAAA,CAAiB,EASdC,OATc,CAAA,MAAA,CAAA;;AACdH,cAULK,gBAAAA,SAAyBH,iBAAAA,CAVpBF;EAAS,IAECA,EAAAA,MAAAA;EAAS,WACPA,EAAAA,MAAAA;EAAS,KAAjBG,CAAAA,KAAAA,EAAAA,MAAAA,CAAAA,EAUJA,OAVIA,CAAAA,MAAAA,CAAAA;;AAJuB,cAgBhCG,oBAAAA,SAA6BR,cAAAA,CAhBG;EAMhCM,IAAAA,EAAAA,MAAAA;EAAqB,WAAA,EAAA,MAAA;EAAA;EAGT,MAHkBF,EAcvCD,CAAAA,CAAEW,SAdqCV,CAAAA;IAAiB,WAAA,EAe/CD,CAAAA,CAAEM,SAf6C;IAK/CF,MAAAA,EAWLJ,CAAAA,CAAEQ,SAXmB,CAWTR,CAAAA,CAAEM,SAXO,EAWIN,CAAAA,CAAEO,MAXN,CAAA;EAAA,CAAA,EAAA,OAAA,EAYrBP,CAAAA,CAAES,UAZmB,EAAA;IAGXP,WAAAA,EAAAA,MAAAA;IAHoBD,MAAAA,EAc9BS,MAd8BT,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA;EAAiB,CAAA,EAAA;IAK1CI,WAAAA,EAAAA,MAAoB;IAAA,MAAA,EAYzBK,MAZyB,CAAA,MAAA,EAAA,GAAA,CAAA;EAAA,CAAA,CAAA;EAKT,QACFJ,SAAAA;EAAS,WAAIC,CAAAA,iBAAAA,CAAAA,EASPR,SATOQ;EAAM,KAA/BC,CAAAA,KAAAA,EAAAA;IACFR,WAAES,EAAAA,MAAAA;IAEFC,MAAAA,EASAV,CAAAA,CAAEY,YATFF;EAAM,CAAA,CAAA,EAUdR,OAPQQ,CAAAA,MAAAA,CAAAA;EAAM,UARRC,YAAAA,CAAAA,CAAAA,EAgBgBT,OAhBhBS,CAgBwBZ,SAhBxBY,CAAAA;;AAcEX,cAIKa,oBAAAA,SAA6BZ,iBAAAA,CAJhCW;EAAY,IACtBV,EAAAA,MAAAA;EAAO,WACuBH,EAAAA,MAAAA;EAAS,KAAjBG,CAAAA,KAAAA,EAAAA,MAAAA,CAAAA,EAKJA,OALIA,CAAAA,MAAAA,CAAAA;;AApBkC,cA2B3CY,gBAAAA,SAAyBlB,WAAAA,CA3BkB;EAsB3CiB,KAAAA,EAMVf,uBAN8B,EAAA;EAAA,SAAA,CAAA,EAOzBC,SAPyB;EAAA,WAGfG,CAAAA,SAAAA,CAAAA,EAKEH,SALFG;EAAO,QAHiBD,eAAAA;EAAiB,OAAA,aAAA,CAAA,SAAA,EAU/BF,SAV+B,CAAA,EAUnBG,OAVmB,CAUXY,gBAVW,CAAA;AAKnE"}