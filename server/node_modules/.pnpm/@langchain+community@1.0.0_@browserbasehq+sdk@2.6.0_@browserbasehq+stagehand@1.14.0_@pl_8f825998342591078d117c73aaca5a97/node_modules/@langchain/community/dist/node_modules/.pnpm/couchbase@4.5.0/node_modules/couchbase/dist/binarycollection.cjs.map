{"version":3,"file":"binarycollection.cjs","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/binarycollection.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinaryCollection = void 0;\n/**\n * Exposes a number of binary-level operations against a collection.\n * These operations do not adhere to the standard JSON-centric\n * behaviour of the SDK.\n *\n * @category Core\n */\nclass BinaryCollection {\n    /**\n     * @internal\n     */\n    constructor(parent) {\n        this._coll = parent;\n    }\n    /**\n     * Increments the ASCII value of the specified key by the amount\n     * indicated in the delta parameter.\n     *\n     * @param key The key to increment.\n     * @param delta The amount to increment the key.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    increment(key, delta, options, callback) {\n        return this._coll._binaryIncrement(key, delta, options, callback);\n    }\n    /**\n     * Decrements the ASCII value of the specified key by the amount\n     * indicated in the delta parameter.\n     *\n     * @param key The key to increment.\n     * @param delta The amount to increment the key.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    decrement(key, delta, options, callback) {\n        return this._coll._binaryDecrement(key, delta, options, callback);\n    }\n    /**\n     * Appends the specified value to the end of the specified key.\n     *\n     * @param key The key to append to.\n     * @param value The value to adjoin to the end of the document.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    append(key, value, options, callback) {\n        return this._coll._binaryAppend(key, value, options, callback);\n    }\n    /**\n     * Prepends the specified value to the beginning of the specified key.\n     *\n     * @param key The key to prepend to.\n     * @param value The value to adjoin to the beginning of the document.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    prepend(key, value, options, callback) {\n        return this._coll._binaryPrepend(key, value, options, callback);\n    }\n}\nexports.BinaryCollection = BinaryCollection;\n"],"x_google_ignoreList":[0],"mappings":";;;;;;;CACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAM,EAAC;CAC7D,QAAQ,mBAAmB,KAAK;;;;;;;;CAQhC,IAAM,mBAAN,MAAuB;;;;EAInB,YAAY,QAAQ;GAChB,KAAK,QAAQ;EAChB;;;;;;;;;;EAUD,UAAU,KAAK,OAAO,SAAS,UAAU;AACrC,UAAO,KAAK,MAAM,iBAAiB,KAAK,OAAO,SAAS,SAAS;EACpE;;;;;;;;;;EAUD,UAAU,KAAK,OAAO,SAAS,UAAU;AACrC,UAAO,KAAK,MAAM,iBAAiB,KAAK,OAAO,SAAS,SAAS;EACpE;;;;;;;;;EASD,OAAO,KAAK,OAAO,SAAS,UAAU;AAClC,UAAO,KAAK,MAAM,cAAc,KAAK,OAAO,SAAS,SAAS;EACjE;;;;;;;;;EASD,QAAQ,KAAK,OAAO,SAAS,UAAU;AACnC,UAAO,KAAK,MAAM,eAAe,KAAK,OAAO,SAAS,SAAS;EAClE;CACJ;CACD,QAAQ,mBAAmB"}