{"version":3,"file":"streamablepromises.js","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/streamablepromises.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamableScanPromise = exports.StreamableReplicasPromise = exports.StreamableRowPromise = exports.StreamablePromise = void 0;\n/* eslint jsdoc/require-jsdoc: off */\nconst events_1 = __importDefault(require(\"events\"));\n/**\n * @internal\n */\nclass StreamablePromise extends events_1.default {\n    /**\n     * @internal\n     */\n    constructor(promisefyFn) {\n        super();\n        this._promise = null;\n        this._promiseOns = [];\n        this._promise = new Promise((resolve, reject) => {\n            promisefyFn({\n                on: (eventName, listener) => {\n                    this._promiseOns.push([eventName, listener]);\n                    super.on(eventName, listener);\n                },\n            }, resolve, reject);\n        });\n    }\n    get promise() {\n        if (!this._promise) {\n            throw new Error('Cannot await a promise that is already registered for events');\n        }\n        return this._promise;\n    }\n    _depromisify() {\n        this._promiseOns.forEach((e) => this.off(...e));\n        this._promise = null;\n    }\n    then(onfulfilled, onrejected) {\n        return this.promise.then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.promise.catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.promise.finally(onfinally);\n    }\n    addListener(eventName, listener) {\n        this._depromisify();\n        return super.on(eventName, listener);\n    }\n    on(eventName, listener) {\n        this._depromisify();\n        return super.on(eventName, listener);\n    }\n    /**\n     * @internal\n     */\n    get [Symbol.toStringTag]() {\n        return Promise[Symbol.toStringTag];\n    }\n}\nexports.StreamablePromise = StreamablePromise;\n/**\n * Provides the ability to be used as either a promise or an event emitter.  Enabling\n * an application to easily retrieve all results using async/await or enabling\n * streaming of results by listening for the row and meta events.\n */\nclass StreamableRowPromise extends StreamablePromise {\n    constructor(fn) {\n        super((emitter, resolve, reject) => {\n            let err;\n            const rows = [];\n            let meta;\n            emitter.on('row', (r) => rows.push(r));\n            emitter.on('meta', (m) => (meta = m));\n            emitter.on('error', (e) => (err = e));\n            emitter.on('end', () => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(fn(rows, meta));\n            });\n        });\n    }\n}\nexports.StreamableRowPromise = StreamableRowPromise;\n/**\n * Provides the ability to be used as either a promise or an event emitter.  Enabling\n * an application to easily retrieve all replicas using async/await or enabling\n * streaming of replicas by listening for the replica event.\n */\nclass StreamableReplicasPromise extends StreamablePromise {\n    constructor(fn) {\n        super((emitter, resolve, reject) => {\n            let err;\n            const replicas = [];\n            emitter.on('replica', (r) => replicas.push(r));\n            emitter.on('error', (e) => (err = e));\n            emitter.on('end', () => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(fn(replicas));\n            });\n        });\n    }\n}\nexports.StreamableReplicasPromise = StreamableReplicasPromise;\n/**\n * Provides the ability to be used as either a promise or an event emitter.  Enabling\n * an application to easily retrieve all scan results using async/await or enabling\n * streaming of scan results by listening for the result event.\n */\nclass StreamableScanPromise extends StreamablePromise {\n    constructor(fn) {\n        super((emitter, resolve, reject) => {\n            let err;\n            const results = [];\n            emitter.on('result', (r) => results.push(r));\n            emitter.on('error', (e) => (err = e));\n            emitter.on('end', () => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(fn(results));\n            });\n        });\n        this._cancelRequested = false;\n    }\n    get cancelRequested() {\n        return this._cancelRequested;\n    }\n    cancelStreaming() {\n        this._cancelRequested = true;\n    }\n}\nexports.StreamableScanPromise = StreamableScanPromise;\n"],"x_google_ignoreList":[0],"mappings":"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"}