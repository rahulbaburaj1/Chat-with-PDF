{"version":3,"file":"text_splitter.d.cts","names":["tiktoken","Document","BaseDocumentTransformer","TextSplitterParams","Promise","TextSplitterChunkHeaderOptions","TextSplitter","Partial","Record","CharacterTextSplitterParams","CharacterTextSplitter","RecursiveCharacterTextSplitterParams","SupportedTextSplitterLanguages","SupportedTextSplitterLanguage","RecursiveCharacterTextSplitter","TokenTextSplitterParams","TiktokenEncoding","Array","TokenTextSplitter","MarkdownTextSplitterParams","MarkdownTextSplitter","LatexTextSplitterParams","LatexTextSplitter"],"sources":["../src/text_splitter.d.ts"],"sourcesContent":["import type * as tiktoken from \"js-tiktoken\";\nimport { Document, BaseDocumentTransformer } from \"@langchain/core/documents\";\nexport interface TextSplitterParams {\n    chunkSize: number;\n    chunkOverlap: number;\n    keepSeparator: boolean;\n    lengthFunction?: ((text: string) => number) | ((text: string) => Promise<number>);\n}\nexport type TextSplitterChunkHeaderOptions = {\n    chunkHeader?: string;\n    chunkOverlapHeader?: string;\n    appendChunkOverlapHeader?: boolean;\n};\nexport declare abstract class TextSplitter extends BaseDocumentTransformer implements TextSplitterParams {\n    lc_namespace: string[];\n    chunkSize: number;\n    chunkOverlap: number;\n    keepSeparator: boolean;\n    lengthFunction: ((text: string) => number) | ((text: string) => Promise<number>);\n    constructor(fields?: Partial<TextSplitterParams>);\n    transformDocuments(documents: Document[], chunkHeaderOptions?: TextSplitterChunkHeaderOptions): Promise<Document[]>;\n    abstract splitText(text: string): Promise<string[]>;\n    protected splitOnSeparator(text: string, separator: string): string[];\n    createDocuments(texts: string[], \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadatas?: Record<string, any>[], chunkHeaderOptions?: TextSplitterChunkHeaderOptions): Promise<Document[]>;\n    private numberOfNewLines;\n    splitDocuments(documents: Document[], chunkHeaderOptions?: TextSplitterChunkHeaderOptions): Promise<Document[]>;\n    private joinDocs;\n    mergeSplits(splits: string[], separator: string): Promise<string[]>;\n}\nexport interface CharacterTextSplitterParams extends TextSplitterParams {\n    separator: string;\n}\nexport declare class CharacterTextSplitter extends TextSplitter implements CharacterTextSplitterParams {\n    static lc_name(): string;\n    separator: string;\n    constructor(fields?: Partial<CharacterTextSplitterParams>);\n    splitText(text: string): Promise<string[]>;\n}\nexport interface RecursiveCharacterTextSplitterParams extends TextSplitterParams {\n    separators: string[];\n}\nexport declare const SupportedTextSplitterLanguages: readonly [\"cpp\", \"go\", \"java\", \"js\", \"php\", \"proto\", \"python\", \"rst\", \"ruby\", \"rust\", \"scala\", \"swift\", \"markdown\", \"latex\", \"html\", \"sol\"];\nexport type SupportedTextSplitterLanguage = (typeof SupportedTextSplitterLanguages)[number];\nexport declare class RecursiveCharacterTextSplitter extends TextSplitter implements RecursiveCharacterTextSplitterParams {\n    static lc_name(): string;\n    separators: string[];\n    constructor(fields?: Partial<RecursiveCharacterTextSplitterParams>);\n    private _splitText;\n    splitText(text: string): Promise<string[]>;\n    static fromLanguage(language: SupportedTextSplitterLanguage, options?: Partial<RecursiveCharacterTextSplitterParams>): RecursiveCharacterTextSplitter;\n    static getSeparatorsForLanguage(language: SupportedTextSplitterLanguage): string[];\n}\nexport interface TokenTextSplitterParams extends TextSplitterParams {\n    encodingName: tiktoken.TiktokenEncoding;\n    allowedSpecial: \"all\" | Array<string>;\n    disallowedSpecial: \"all\" | Array<string>;\n}\n/**\n * Implementation of splitter which looks at tokens.\n */\nexport declare class TokenTextSplitter extends TextSplitter implements TokenTextSplitterParams {\n    static lc_name(): string;\n    encodingName: tiktoken.TiktokenEncoding;\n    allowedSpecial: \"all\" | Array<string>;\n    disallowedSpecial: \"all\" | Array<string>;\n    private tokenizer;\n    constructor(fields?: Partial<TokenTextSplitterParams>);\n    splitText(text: string): Promise<string[]>;\n}\nexport type MarkdownTextSplitterParams = TextSplitterParams;\nexport declare class MarkdownTextSplitter extends RecursiveCharacterTextSplitter implements MarkdownTextSplitterParams {\n    constructor(fields?: Partial<MarkdownTextSplitterParams>);\n}\nexport type LatexTextSplitterParams = TextSplitterParams;\nexport declare class LatexTextSplitter extends RecursiveCharacterTextSplitter implements LatexTextSplitterParams {\n    constructor(fields?: Partial<LatexTextSplitterParams>);\n}\n"],"mappings":"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"}