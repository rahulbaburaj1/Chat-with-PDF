{"version":3,"file":"xata.d.cts","names":["BaseClient","BaseClientOptions","BaseListChatMessageHistory","BaseMessage","XataChatMessageHistoryInput","XataClient","XataChatMessageHistory","Promise"],"sources":["../../../src/stores/message/xata.d.ts"],"sourcesContent":["import { BaseClient, BaseClientOptions } from \"@xata.io/client\";\nimport { BaseListChatMessageHistory } from \"@langchain/core/chat_history\";\nimport { BaseMessage } from \"@langchain/core/messages\";\n/**\n * An object type that represents the input for the XataChatMessageHistory\n * class.\n */\nexport type XataChatMessageHistoryInput<XataClient> = {\n    sessionId: string;\n    config?: BaseClientOptions;\n    client?: XataClient;\n    table?: string;\n    createTable?: boolean;\n    apiKey?: string;\n};\n/**\n * A class for managing chat message history using Xata.io client. It\n * extends the BaseListChatMessageHistory class and provides methods to\n * get, add, and clear messages. It also ensures the existence of a table\n * where the chat messages are stored.\n * @example\n * ```typescript\n * const chatHistory = new XataChatMessageHistory({\n *   table: \"messages\",\n *   sessionId: new Date().toISOString(),\n *   client: new BaseClient({\n *     databaseURL: process.env.XATA_DB_URL,\n *     apiKey: process.env.XATA_API_KEY,\n *     branch: \"main\",\n *   }),\n *   apiKey: process.env.XATA_API_KEY,\n * });\n *\n * const chain = new ConversationChain({\n *   llm: new ChatOpenAI({ model: \"gpt-4o-mini\" }),\n *   memory: new BufferMemory({ chatHistory }),\n * });\n *\n * const response = await chain.invoke({\n *   input: \"What did I just say my name was?\",\n * });\n * console.log({ response });\n * ```\n */\nexport declare class XataChatMessageHistory<XataClient extends BaseClient> extends BaseListChatMessageHistory {\n    lc_namespace: string[];\n    client: XataClient;\n    private sessionId;\n    private table;\n    private tableInitialized;\n    private createTable;\n    private apiClient;\n    constructor(fields: XataChatMessageHistoryInput<XataClient>);\n    /**\n     * Retrieves all messages associated with the session ID, ordered by\n     * creation time.\n     * @returns A promise that resolves to an array of BaseMessage instances.\n     */\n    getMessages(): Promise<BaseMessage[]>;\n    /**\n     * Adds a new message to the database.\n     * @param message The BaseMessage instance to be added.\n     * @returns A promise that resolves when the message has been added.\n     */\n    addMessage(message: BaseMessage): Promise<void>;\n    /**\n     * Deletes all messages associated with the session ID.\n     * @returns A promise that resolves when the messages have been deleted.\n     */\n    clear(): Promise<void>;\n    private ensureTable;\n}\n"],"mappings":";;;;;;;;;;;;KAOYI;;WAECH;WACAI;EAHDD,KAAAA,CAAAA,EAAAA,MAAAA;EAA2B,WAAA,CAAA,EAAA,OAAA;EAAA,MAE1BH,CAAAA,EAAAA,MAAAA;CAAiB;AACP;AAkCvB;;;;;;;;;;;;AAA6G;;;;;;;;;;;;;;;;cAAxFK,0CAA0CN,oBAAoBE,0BAAAA;;UAEvEG;;;;;;sBAMYD,4BAA4BC;;;;;;iBAMjCE,QAAQJ;;;;;;sBAMHA,cAAcI;;;;;WAKzBA"}