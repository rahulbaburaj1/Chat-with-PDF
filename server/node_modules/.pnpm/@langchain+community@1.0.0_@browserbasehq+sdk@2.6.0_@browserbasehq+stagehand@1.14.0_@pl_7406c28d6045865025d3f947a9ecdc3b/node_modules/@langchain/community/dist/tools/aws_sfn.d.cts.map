{"version":3,"file":"aws_sfn.d.cts","names":["Tool","ToolParams","SfnConfig","StartExecutionAWSSfnTool","name","description","Promise","DescribeExecutionAWSSfnTool","Omit","SendTaskSuccessAWSSfnTool"],"sources":["../../src/tools/aws_sfn.d.ts"],"sourcesContent":["import { Tool, ToolParams } from \"@langchain/core/tools\";\n/**\n * Interface for AWS Step Functions configuration.\n */\nexport interface SfnConfig {\n    stateMachineArn: string;\n    region?: string;\n    accessKeyId?: string;\n    secretAccessKey?: string;\n}\n/**\n * Class for starting the execution of an AWS Step Function.\n */\nexport declare class StartExecutionAWSSfnTool extends Tool {\n    static lc_name(): string;\n    private sfnConfig;\n    name: string;\n    description: string;\n    constructor({ name, description, ...rest }: SfnConfig & {\n        name: string;\n        description: string;\n    });\n    /**\n     * Generates a formatted description for the StartExecutionAWSSfnTool.\n     * @param name Name of the state machine.\n     * @param description Description of the state machine.\n     * @returns A formatted description string.\n     */\n    static formatDescription(name: string, description: string): string;\n    /** @ignore */\n    _call(input: string): Promise<string>;\n}\n/**\n * Class for checking the status of an AWS Step Function execution.\n */\nexport declare class DescribeExecutionAWSSfnTool extends Tool {\n    static lc_name(): string;\n    name: string;\n    description: string;\n    sfnConfig: Omit<SfnConfig, \"stateMachineArn\">;\n    constructor(config: Omit<SfnConfig, \"stateMachineArn\"> & ToolParams);\n    /** @ignore */\n    _call(input: string): Promise<string>;\n}\n/**\n * Class for sending a task success signal to an AWS Step Function\n * execution.\n */\nexport declare class SendTaskSuccessAWSSfnTool extends Tool {\n    static lc_name(): string;\n    name: string;\n    description: string;\n    sfnConfig: Omit<SfnConfig, \"stateMachineArn\">;\n    constructor(config: Omit<SfnConfig, \"stateMachineArn\"> & ToolParams);\n    /** @ignore */\n    _call(input: string): Promise<string>;\n}\n"],"mappings":";;;;;;;;;UAIiBE,SAAAA;;;;;;;AAAjB;AASA;AAA6C,cAAxBC,wBAAAA,SAAiCH,IAAAA,CAAT;EAAA,OAK3BI,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAI,QAAEC,SAAAA;EAAW,IAAaH,EAAAA,MAAAA;EAAS,WAY/BI,EAAAA,MAAAA;EAAO,WAjBqBN,CAAAA;IAAAA,IAAAA;IAAAA,WAAAA;IAAAA,GAAAA;EAsBN,CAtBMA,EAKNE,SALMF,GAAAA;IAAI,IAAA,EAAA,MAAA;IAsBrCO,WAAAA,EAAAA,MAAAA;EAA2B,CAAA;EAAA;;;;;;EAOf,OAPwBP,iBAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,WAAAA,EAAAA,MAAAA,CAAAA,EAAAA,MAAAA;EAAI;EAaxCS,KAAAA,CAAAA,KAAAA,EAAAA,MAAAA,CAAAA,EAlBKH,OAkBoB,CAAA,MAAA,CAAA;;;;;AAKtBE,cAlBHD,2BAAAA,SAAoCP,IAAAA,CAkBjCQ;EAAI,OAAiCP,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAU,IAE7CK,EAAAA,MAAAA;EAAO,WAPsBN,EAAAA,MAAAA;EAAI,SAAA,EAT5CQ,IAS4C,CATvCN,SASuC,EAAA,iBAAA,CAAA;sBARnCM,KAAKN,gCAAgCD;;wBAEnCK;;;;;;cAMLG,yBAAAA,SAAkCT,IAAAA;;;;aAIxCQ,KAAKN;sBACIM,KAAKN,gCAAgCD;;wBAEnCK"}