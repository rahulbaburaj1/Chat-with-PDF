{"version":3,"file":"sdspecs.cjs","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/sdspecs.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MutateInSpec = exports.LookupInSpec = exports.MutateInMacro = exports.LookupInMacro = void 0;\nconst binding_1 = __importDefault(require(\"./binding\"));\n/**\n * Represents a macro that can be passed to a lookup-in operation to\n * fetch special values such as the expiry, cas, etc...\n *\n * @category Key-Value\n */\nclass LookupInMacro {\n    constructor(value) {\n        this._value = value;\n    }\n    /**\n     * A macro which references the entirety of the document meta-data.\n     */\n    static get Document() {\n        return new LookupInMacro('$document');\n    }\n    /**\n     * A macro which references the expiry of a document.\n     */\n    static get Expiry() {\n        return new LookupInMacro('$document.exptime');\n    }\n    /**\n     * A macro which references the cas of a document.\n     */\n    static get Cas() {\n        return new LookupInMacro('$document.CAS');\n    }\n    /**\n     * A macro which references the seqno of a document.\n     */\n    static get SeqNo() {\n        return new LookupInMacro('$document.seqno');\n    }\n    /**\n     * A macro which references the last modified time of a document.\n     */\n    static get LastModified() {\n        return new LookupInMacro('$document.last_modified');\n    }\n    /**\n     * A macro which references the deletion state of a document.  This\n     * only makes sense to use in concert with the internal AccessDeleted\n     * flags, which are internal.\n     */\n    static get IsDeleted() {\n        return new LookupInMacro('$document.deleted');\n    }\n    /**\n     * A macro which references the size of a document, expressed in bytes.\n     */\n    static get ValueSizeBytes() {\n        return new LookupInMacro('$document.value_bytes');\n    }\n    /**\n     * A macro which references the revision id of a document.\n     */\n    static get RevId() {\n        return new LookupInMacro('$document.revid');\n    }\n}\nexports.LookupInMacro = LookupInMacro;\n/**\n * Represents a macro that can be passed to a mutate-in operation to\n * write special values such as the expiry, cas, etc...\n *\n * @category Key-Value\n */\nclass MutateInMacro {\n    constructor(value) {\n        this._value = value;\n    }\n    /**\n     * A macro which references the cas of a document.\n     */\n    static get Cas() {\n        return new MutateInMacro('${Mutation.CAS}');\n    }\n    /**\n     * A macro which references the seqno of a document.\n     */\n    static get SeqNo() {\n        return new MutateInMacro('${Mutation.seqno}');\n    }\n    /**\n     * A macro which references the crc32 of the value of a document.\n     */\n    static get ValueCrc32c() {\n        return new MutateInMacro('${Mutation.value_crc32c}');\n    }\n}\nexports.MutateInMacro = MutateInMacro;\n/**\n * Represents a sub-operation to perform within a lookup-in operation.\n *\n * @category Key-Value\n */\nclass LookupInSpec {\n    /**\n     * BUG(JSCBC-756): Previously provided access to the expiry macro for a\n     * lookup-in operation.\n     *\n     * @deprecated Use {@link LookupInMacro.Expiry} instead.\n     */\n    static get Expiry() {\n        return LookupInMacro.Expiry;\n    }\n    constructor(op, path, flags) {\n        this._op = op;\n        this._path = path;\n        this._flags = flags;\n    }\n    static _create(op, path, options) {\n        if (!options) {\n            options = {};\n        }\n        let flags = 0;\n        if (path instanceof LookupInMacro) {\n            path = path._value;\n            flags |=\n                binding_1.default.protocol_lookup_in_request_body_lookup_in_specs_path_flag.xattr;\n        }\n        if (options.xattr) {\n            flags |=\n                binding_1.default.protocol_lookup_in_request_body_lookup_in_specs_path_flag.xattr;\n        }\n        return new LookupInSpec(op, path, flags);\n    }\n    /**\n     * Creates a LookupInSpec for fetching a field from the document.\n     *\n     * @param path The path to the field.\n     * @param options Optional parameters for this operation.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static get(path, options) {\n        if (!path) {\n            return this._create(binding_1.default.protocol_subdoc_opcode.get_doc, '', options);\n        }\n        return this._create(binding_1.default.protocol_subdoc_opcode.get, path, options);\n    }\n    /**\n     * Returns whether a specific field exists in the document.\n     *\n     * @param path The path to the field.\n     * @param options Optional parameters for this operation.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static exists(path, options) {\n        return this._create(binding_1.default.protocol_subdoc_opcode.exists, path, options);\n    }\n    /**\n     * Returns the number of elements in the array reference by the path.\n     *\n     * @param path The path to the field.\n     * @param options Optional parameters for this operation.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static count(path, options) {\n        return this._create(binding_1.default.protocol_subdoc_opcode.get_count, path, options);\n    }\n}\nexports.LookupInSpec = LookupInSpec;\n/**\n * Represents a sub-operation to perform within a mutate-in operation.\n *\n * @category Key-Value\n */\nclass MutateInSpec {\n    /**\n     * BUG(JSCBC-756): Previously provided access to the document cas mutate\n     * macro.\n     *\n     * @deprecated Use {@link MutateInMacro.Cas} instead.\n     */\n    static get CasPlaceholder() {\n        return MutateInMacro.Cas;\n    }\n    constructor(op, path, flags, data) {\n        this._op = op;\n        this._path = path;\n        this._flags = flags;\n        this._data = data;\n    }\n    static _create(op, path, value, options) {\n        if (!options) {\n            options = {};\n        }\n        let flags = 0;\n        if (options.createPath) {\n            flags |=\n                binding_1.default.protocol_mutate_in_request_body_mutate_in_specs_path_flag\n                    .create_parents;\n        }\n        if (value instanceof MutateInMacro) {\n            value = value._value;\n            flags |=\n                binding_1.default.protocol_mutate_in_request_body_mutate_in_specs_path_flag\n                    .expand_macros |\n                    binding_1.default.protocol_mutate_in_request_body_mutate_in_specs_path_flag.xattr;\n        }\n        else if (options.xattr) {\n            flags |=\n                binding_1.default.protocol_mutate_in_request_body_mutate_in_specs_path_flag.xattr;\n        }\n        if (value !== undefined) {\n            // BUG(JSCBC-755): As a solution to our oversight of not accepting arrays of\n            // values to various sub-document operations, we have exposed an option instead.\n            if (!options.multi) {\n                value = JSON.stringify(value);\n            }\n            else {\n                if (!Array.isArray(value)) {\n                    throw new Error('value must be an array for a multi operation');\n                }\n                value = JSON.stringify(value);\n                value = value.substr(1, value.length - 2);\n            }\n        }\n        return new MutateInSpec(op, path, flags, value);\n    }\n    /**\n     * Creates a MutateInSpec for inserting a field into the document.  Failing if\n     * the field already exists at the specified path.\n     *\n     * @param path The path to the field.\n     * @param value The value to insert.\n     * @param options Optional parameters for this operation.\n     * @param options.createPath\n     * Whether or not the path to the field should be created if it does not\n     * already exist.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static insert(path, value, options) {\n        return this._create(binding_1.default.protocol_subdoc_opcode.dict_add, path, value, options);\n    }\n    /**\n     * Creates a MutateInSpec for upserting a field on a document.  This updates\n     * the value of the specified field, or creates the field if it does not exits.\n     *\n     * @param path The path to the field.\n     * @param value The value to write.\n     * @param options Optional parameters for this operation.\n     * @param options.createPath\n     * Whether or not the path to the field should be created if it does not\n     * already exist.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static upsert(path, value, options) {\n        if (!path) {\n            return this._create(binding_1.default.protocol_subdoc_opcode.set_doc, '', value, options);\n        }\n        return this._create(binding_1.default.protocol_subdoc_opcode.dict_upsert, path, value, options);\n    }\n    /**\n     * Creates a MutateInSpec for replacing a field on a document.  This updates\n     * the value of the specified field, failing if the field does not exits.\n     *\n     * @param path The path to the field.\n     * @param value The value to write.\n     * @param options Optional parameters for this operation.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static replace(path, value, options) {\n        return this._create(binding_1.default.protocol_subdoc_opcode.replace, path, value, options);\n    }\n    /**\n     * Creates a MutateInSpec for remove a field from a document.\n     *\n     * @param path The path to the field.\n     * @param options Optional parameters for this operation.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static remove(path, options) {\n        if (!path) {\n            return this._create(binding_1.default.protocol_subdoc_opcode.remove_doc, '', undefined, options);\n        }\n        return this._create(binding_1.default.protocol_subdoc_opcode.remove, path, undefined, options);\n    }\n    /**\n     * Creates a MutateInSpec for adding a value to the end of an array in a document.\n     *\n     * @param path The path to the field.\n     * @param value The value to add.\n     * @param options Optional parameters for this operation.\n     * @param options.createPath\n     * Whether or not the path to the field should be created if it does not\n     * already exist.\n     * @param options.multi\n     * If set, this enables an array of values to be passed as value, and each\n     * element of the passed array is added to the array.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static arrayAppend(path, value, options) {\n        return this._create(binding_1.default.protocol_subdoc_opcode.array_push_last, path, value, options);\n    }\n    /**\n     * Creates a MutateInSpec for adding a value to the beginning of an array in a document.\n     *\n     * @param path The path to the field.\n     * @param value The value to add.\n     * @param options Optional parameters for this operation.\n     * @param options.createPath\n     * Whether or not the path to the field should be created if it does not\n     * already exist.\n     * @param options.multi\n     * If set, this enables an array of values to be passed as value, and each\n     * element of the passed array is added to the array.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static arrayPrepend(path, value, options) {\n        return this._create(binding_1.default.protocol_subdoc_opcode.array_push_first, path, value, options);\n    }\n    /**\n     * Creates a MutateInSpec for adding a value to a specified location in an array in a\n     * document.  The path should specify a specific index in the array and the new values\n     * are inserted at this location.\n     *\n     * @param path The path to an element of an array.\n     * @param value The value to add.\n     * @param options Optional parameters for this operation.\n     * @param options.createPath\n     * Whether or not the path to the field should be created if it does not\n     * already exist.\n     * @param options.multi\n     * If set, this enables an array of values to be passed as value, and each\n     * element of the passed array is added to the array.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static arrayInsert(path, value, options) {\n        return this._create(binding_1.default.protocol_subdoc_opcode.array_insert, path, value, options);\n    }\n    /**\n     * Creates a MutateInSpec for adding unique values to an array in a document.  This\n     * operation will only add values if they do not already exist elsewhere in the array.\n     *\n     * @param path The path to the field.\n     * @param value The value to add.\n     * @param options Optional parameters for this operation.\n     * @param options.createPath\n     * Whether or not the path to the field should be created if it does not\n     * already exist.\n     * @param options.multi\n     * If set, this enables an array of values to be passed as value, and each\n     * element of the passed array is added to the array.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static arrayAddUnique(path, value, options) {\n        return this._create(binding_1.default.protocol_subdoc_opcode.array_add_unique, path, value, options);\n    }\n    /**\n     * Creates a MutateInSpec for incrementing the value of a field in a document.\n     *\n     * @param path The path to the field.\n     * @param value The value to add.\n     * @param options Optional parameters for this operation.\n     * @param options.createPath\n     * Whether or not the path to the field should be created if it does not\n     * already exist.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static increment(path, value, options) {\n        return this._create(binding_1.default.protocol_subdoc_opcode.counter, path, +value, options);\n    }\n    /**\n     * Creates a MutateInSpec for decrementing the value of a field in a document.\n     *\n     * @param path The path to the field.\n     * @param value The value to subtract.\n     * @param options Optional parameters for this operation.\n     * @param options.createPath\n     * Whether or not the path to the field should be created if it does not\n     * already exist.\n     * @param options.xattr\n     * Whether this operation should reference the document body or the extended\n     * attributes data for the document.\n     */\n    static decrement(path, value, options) {\n        return this._create(binding_1.default.protocol_subdoc_opcode.counter, path, -1 * +value, options);\n    }\n}\nexports.MutateInSpec = MutateInSpec;\n"],"x_google_ignoreList":[0],"mappings":"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"}