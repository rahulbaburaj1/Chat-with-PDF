{"version":3,"file":"premai.d.cts","names":["BaseMessage","BaseLanguageModelCallOptions","CallbackManagerForLLMRun","BaseChatModelParams","BaseChatModel","Prem","ChatCompletionStreamingCompletionData","CreateChatCompletionRequest","CreateChatCompletionResponse","ChatGenerationChunk","ChatResult","RoleEnum","ChatPremInput","ChatCompletionCreateParamsNonStreaming","ChatCompletionCreateParamsStreaming","ChatCompletionCreateParams","messageToPremRole","ChatPrem","CallOptions","AsyncIterable","Promise","AsyncGenerator"],"sources":["../../src/chat_models/premai.d.ts"],"sourcesContent":["import { type BaseMessage } from \"@langchain/core/messages\";\nimport { type BaseLanguageModelCallOptions } from \"@langchain/core/language_models/base\";\nimport { CallbackManagerForLLMRun } from \"@langchain/core/callbacks/manager\";\nimport { type BaseChatModelParams, BaseChatModel } from \"@langchain/core/language_models/chat_models\";\nimport Prem, { ChatCompletionStreamingCompletionData, CreateChatCompletionRequest, CreateChatCompletionResponse } from \"@premai/prem-sdk\";\nimport { ChatGenerationChunk, ChatResult } from \"@langchain/core/outputs\";\nexport type RoleEnum = \"user\" | \"assistant\";\n/**\n * Input to chat model class.\n */\nexport interface ChatPremInput extends BaseChatModelParams {\n    project_id?: number | string;\n    session_id?: string;\n    messages?: {\n        role: \"user\" | \"assistant\";\n        content: string;\n        [k: string]: unknown;\n    }[];\n    model?: string;\n    system_prompt?: string;\n    frequency_penalty?: number;\n    logit_bias?: {\n        [k: string]: unknown;\n    };\n    max_tokens?: number;\n    n?: number;\n    presence_penalty?: number;\n    response_format?: {\n        [k: string]: unknown;\n    };\n    seed?: number;\n    stop?: string;\n    temperature?: number;\n    top_p?: number;\n    tools?: {\n        [k: string]: unknown;\n    }[];\n    user?: string;\n    /**\n     * The Prem API key to use for requests.\n     * @default process.env.PREM_API_KEY\n     */\n    apiKey?: string;\n    streaming?: boolean;\n}\nexport interface ChatCompletionCreateParamsNonStreaming extends CreateChatCompletionRequest {\n    stream?: false;\n}\nexport interface ChatCompletionCreateParamsStreaming extends CreateChatCompletionRequest {\n    stream: true;\n}\nexport type ChatCompletionCreateParams = ChatCompletionCreateParamsNonStreaming | ChatCompletionCreateParamsStreaming;\nexport declare function messageToPremRole(message: BaseMessage): RoleEnum;\n/**\n * Integration with a chat model.\n */\nexport declare class ChatPrem<CallOptions extends BaseLanguageModelCallOptions = BaseLanguageModelCallOptions> extends BaseChatModel<CallOptions> implements ChatPremInput {\n    client: Prem;\n    apiKey?: string;\n    project_id: number;\n    session_id?: string;\n    messages: {\n        [k: string]: unknown;\n        role: \"user\" | \"assistant\";\n        content: string;\n    }[];\n    model?: string;\n    system_prompt?: string;\n    frequency_penalty?: number;\n    logit_bias?: {\n        [k: string]: unknown;\n    };\n    max_tokens?: number;\n    n?: number;\n    presence_penalty?: number;\n    response_format?: {\n        [k: string]: unknown;\n    };\n    seed?: number;\n    stop?: string;\n    temperature?: number;\n    top_p?: number;\n    tools?: {\n        [k: string]: unknown;\n    }[];\n    user?: string;\n    streaming: boolean;\n    [k: string]: unknown;\n    // Used for tracing, replace with the same name as your class\n    static lc_name(): string;\n    lc_serializable: boolean;\n    /**\n     * Replace with any secrets this class passes to `super`.\n     * See {@link ../../langchain-cohere/src/chat_model.ts} for\n     * an example.\n     */\n    get lc_secrets(): {\n        [key: string]: string;\n    } | undefined;\n    get lc_aliases(): {\n        [key: string]: string;\n    } | undefined;\n    constructor(fields?: ChatPremInput);\n    // Replace\n    _llmType(): string;\n    completionWithRetry(request: ChatCompletionCreateParamsStreaming, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    options?: any): Promise<AsyncIterable<ChatCompletionStreamingCompletionData>>;\n    completionWithRetry(request: ChatCompletionCreateParams, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    options?: any): Promise<CreateChatCompletionResponse>;\n    invocationParams(options: this[\"ParsedCallOptions\"]): any;\n    /**\n     * Implement to support streaming.\n     * Should yield chunks iteratively.\n     */\n    _streamResponseChunks(messages: BaseMessage[], options: this[\"ParsedCallOptions\"], runManager?: CallbackManagerForLLMRun): AsyncGenerator<ChatGenerationChunk>;\n    /** @ignore */\n    _combineLLMOutput(): never[];\n    _generate(messages: BaseMessage[], options: this[\"ParsedCallOptions\"], runManager?: CallbackManagerForLLMRun): Promise<ChatResult>;\n}\n"],"mappings":";;;;;;;;;;;KAMYW,QAAAA;;;;UAIKC,aAAAA,SAAsBT;;;;;;;;;EAJ3BQ,aAAQ,CAAA,EAAA,MAAA;EAIHC,iBAAa,CAAA,EAAA,MAAA;EAmCbC,UAAAA,CAAAA,EAAAA;IAGAC,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,EAAAA,OAAAA;EAGLC,CAAAA;EAA0B,UAAA,CAAA,EAAA,MAAA;EAAA,CAAA,CAAA,EAAGF,MAAAA;EAAsC,gBAAGC,CAAAA,EAAAA,MAAAA;EAAmC,eAAA,CAAA,EAAA;IAC7FE,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,EAAAA,OAAiB;EAAA,CAAA;EAAA,IAAUhB,CAAAA,EAAAA,MAAAA;EAAW,IAAGW,CAAAA,EAAAA,MAAAA;EAAQ,WAAA,CAAA,EAAA,MAAA;EAIpDM,KAAAA,CAAAA,EAAAA,MAAQ;EAAA,KAAA,CAAA,EAAA;IAAqBhB,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,EAAAA,OAAAA;EAA4B,CAAA,EAAGA;EAA4B,IAAwBiB,CAAAA,EAAAA,MAAAA;EAAW;;;;EAmDjE,MAAnDC,CAAAA,EAAAA,MAAAA;EAAa,SAArBC,CAAAA,EAAAA,OAAAA;;AAGQZ,UAjEXK,sCAAAA,SAA+CN,2BAiEpCC,CAAAA;EAA4B,MAApCY,CAAAA,EAAAA,KAAAA;;AAMgFlB,UApEnFY,mCAAAA,SAA4CP,2BAoEuCL,CAAAA;EAAwB,MAAkBO,EAAAA,IAAAA;;AAGtHT,KApEZe,0BAAAA,GAA6BF,sCAoEjBb,GApE0Dc,mCAoE1Dd;AAAgEE,iBAnEhEc,iBAAAA,CAmEgEd,OAAAA,EAnErCF,WAmEqCE,CAAAA,EAnEvBS,QAmEuBT;;;;AA/DqEU,cAAxIK,QAAwIL,CAAAA,oBAA3GX,4BAA2GW,GAA5EX,4BAA4EW,CAAAA,SAAtCR,aAAsCQ,CAAxBM,WAAwBN,CAAAA,YAAAA,aAAAA,CAAAA;EAAa,MAAA,EAC9JP,IAD8J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBA8CjJO;;;+BAGQE;;kBAEbM,QAAQD,cAAcb;+BACTS;;kBAEbK,QAAQZ;;;;;;kCAMQR,gEAAgEE,2BAA2BmB,eAAeZ;;;sBAGtHT,gEAAgEE,2BAA2BkB,QAAQV"}