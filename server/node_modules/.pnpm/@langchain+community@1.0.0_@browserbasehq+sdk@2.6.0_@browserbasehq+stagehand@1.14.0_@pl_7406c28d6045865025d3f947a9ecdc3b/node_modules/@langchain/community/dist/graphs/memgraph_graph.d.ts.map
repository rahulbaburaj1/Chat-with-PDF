{"version":3,"file":"memgraph_graph.d.ts","names":["Neo4jGraph","MemgraphGraphConfig","MemgraphGraph","url","username","password","database","Promise"],"sources":["../../src/graphs/memgraph_graph.d.ts"],"sourcesContent":["import { Neo4jGraph } from \"./neo4j_graph.js\";\ninterface MemgraphGraphConfig {\n    url: string;\n    username: string;\n    password: string;\n    database?: string;\n}\n/**\n * @security *Security note*: Make sure that the database connection uses credentials\n * that are narrowly-scoped to only include necessary permissions.\n * Failure to do so may result in data corruption or loss, since the calling\n * code may attempt commands that would result in deletion, mutation\n * of data if appropriately prompted or reading sensitive data if such\n * data is present in the database.\n * The best way to guard against such negative outcomes is to (as appropriate)\n * limit the permissions granted to the credentials used with this tool.\n * For example, creating read only users for the database is a good way to\n * ensure that the calling code cannot mutate or delete data.\n *\n * @link See https://js.langchain.com/docs/security for more information.\n */\ndeclare class MemgraphGraph extends Neo4jGraph {\n    constructor({ url, username, password, database }: MemgraphGraphConfig);\n    static initialize(config: MemgraphGraphConfig): Promise<MemgraphGraph>;\n    refreshSchema(): Promise<void>;\n}\nexport { MemgraphGraph };\n"],"mappings":";;;;;;UACUC,mBAAAA;;;;;AADoC;AACjB;;;;;;;;;;;;AAoBiB;;cAAhCC,aAAAA,SAAsBF,UAAAA;;;;;;KACmBC;4BACzBA,sBAAsBM,QAAQL;mBACvCK"}