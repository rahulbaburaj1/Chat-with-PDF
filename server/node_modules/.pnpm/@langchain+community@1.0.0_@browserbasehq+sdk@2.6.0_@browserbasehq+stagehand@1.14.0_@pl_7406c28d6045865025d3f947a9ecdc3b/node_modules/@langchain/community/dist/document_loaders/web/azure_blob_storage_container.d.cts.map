{"version":3,"file":"azure_blob_storage_container.d.cts","names":["Document","BaseDocumentLoader","UnstructuredLoaderOptions","AzureBlobStorageContainerConfig","AzureBlobStorageContainerLoaderConfig","AzureBlobStorageContainerLoader","azureConfig","unstructuredConfig","Record","Promise"],"sources":["../../../src/document_loaders/web/azure_blob_storage_container.d.ts"],"sourcesContent":["import { Document } from \"@langchain/core/documents\";\nimport { BaseDocumentLoader } from \"@langchain/core/document_loaders/base\";\nimport { UnstructuredLoaderOptions } from \"../fs/unstructured.js\";\n/**\n * Interface representing the configuration for accessing an Azure Blob\n * Storage container. It includes properties for the connection string and\n * container name.\n */\ninterface AzureBlobStorageContainerConfig {\n    connectionString: string;\n    container: string;\n}\n/**\n * Interface representing the configuration for the\n * AzureBlobStorageContainerLoader. It includes properties for the\n * azureConfig and unstructuredConfig. The azureConfig property contains\n * the Azure Blob Storage container configuration, and the\n * unstructuredConfig property contains the options for the\n * UnstructuredLoader.\n */\ninterface AzureBlobStorageContainerLoaderConfig {\n    azureConfig: AzureBlobStorageContainerConfig;\n    unstructuredConfig?: UnstructuredLoaderOptions;\n}\n/**\n * Class representing a document loader that loads documents from an Azure\n * Blob Storage container. It extends the BaseDocumentLoader class.\n */\nexport declare class AzureBlobStorageContainerLoader extends BaseDocumentLoader {\n    get lc_secrets(): {\n        [key: string]: string;\n    };\n    private readonly connectionString;\n    private readonly container;\n    private readonly unstructuredConfig?;\n    constructor({ azureConfig, unstructuredConfig }: AzureBlobStorageContainerLoaderConfig);\n    /**\n     * Method to load documents from an Azure Blob Storage container. It\n     * creates a BlobServiceClient using the connection string, gets the\n     * container client using the container name, and iterates over the blobs\n     * in the container. For each blob, it creates an instance of\n     * AzureBlobStorageFileLoader and loads the documents using the loader.\n     * The loaded documents are concatenated to the docs array and returned.\n     * @returns An array of loaded documents.\n     */\n    load(): Promise<Document<Record<string, any>>[]>;\n}\nexport {};\n"],"mappings":";;;;;;;;;;;;;AAEkE,UAMxDG,+BAAAA,CAA+B;EAY/BC,gBAAAA,EAAAA,MAAAA;EAAqC,SAAA,EAAA,MAAA;;;AAEG;AAMlD;;;;;;UARUA,qCAAAA,CAyBUJ;EAAQ,WAAhBS,EAxBKN,+BAwBLM;EAAO,kBAjB0CR,CAAAA,EANpCC,yBAMoCD;AAAkB;;;;;cAA1DI,+BAAAA,SAAwCJ,kBAAAA;;;;;;;;;;KAORG;;;;;;;;;;UAUzCK,QAAQT,SAASQ"}