{"version":3,"file":"collectionmanager.js","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/collectionmanager.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectionManager = exports.ScopeSpec = exports.CollectionSpec = void 0;\nconst bindingutilities_1 = require(\"./bindingutilities\");\nconst utilities_1 = require(\"./utilities\");\n/**\n * Contains information about a collection.\n *\n * @category Management\n */\nclass CollectionSpec {\n    /**\n     * @internal\n     */\n    constructor(data) {\n        this.name = data.name;\n        this.scopeName = data.scopeName;\n        this.maxExpiry = data.maxExpiry;\n        this.history = data.history;\n    }\n    /**\n     * @internal\n     */\n    static _fromCppData(scopeName, data) {\n        return new CollectionSpec({\n            name: data.name,\n            scopeName: scopeName,\n            maxExpiry: data.max_expiry,\n            history: data.history,\n        });\n    }\n}\nexports.CollectionSpec = CollectionSpec;\n/**\n * Contains information about a scope.\n *\n * @category Management\n */\nclass ScopeSpec {\n    /**\n     * @internal\n     */\n    constructor(data) {\n        this.name = data.name;\n        this.collections = data.collections;\n    }\n    /**\n     * @internal\n     */\n    static _fromCppData(data) {\n        let collections;\n        if (data.collections.length > 0) {\n            const scopeName = data.name;\n            collections = data.collections.map((collectionData) => CollectionSpec._fromCppData(scopeName, collectionData));\n        }\n        else {\n            collections = [];\n        }\n        return new ScopeSpec({\n            name: data.name,\n            collections: collections,\n        });\n    }\n}\nexports.ScopeSpec = ScopeSpec;\n/**\n * CollectionManager allows the management of collections within a Bucket.\n *\n * @category Management\n */\nclass CollectionManager {\n    /**\n     * @internal\n     */\n    constructor(bucket) {\n        this._bucket = bucket;\n    }\n    get _cluster() {\n        return this._bucket.cluster;\n    }\n    /**\n     * Returns all configured scopes along with their collections.\n     *\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async getAllScopes(options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[0];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const bucketName = this._bucket.name;\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementScopeGetAll({\n                bucket_name: bucketName,\n                timeout: timeout,\n            }, (cppErr, resp) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                const scopes = resp.manifest.scopes.map((scopeData) => ScopeSpec._fromCppData(scopeData));\n                wrapCallback(null, scopes);\n            });\n        }, callback);\n    }\n    /**\n     * @internal\n     */\n    async createCollection() {\n        let collectionName = arguments[0];\n        let scopeName = arguments[1];\n        let settings = arguments[2];\n        let options = arguments[3];\n        let callback = arguments[4];\n        // Deprecated usage conversion for (CollectionSpec, options, callback)\n        if (typeof collectionName === 'object') {\n            const spec = collectionName;\n            collectionName = spec.name;\n            scopeName = spec.scopeName;\n            settings = {\n                maxExpiry: spec.maxExpiry,\n                history: spec.history,\n            };\n            options = arguments[1];\n            callback = arguments[2];\n            if (options instanceof Function) {\n                callback = arguments[1];\n                options = undefined;\n            }\n        }\n        // Handling of callbacks for alternative overloads\n        if (settings instanceof Function) {\n            callback = arguments[2];\n            settings = undefined;\n        }\n        else if (options instanceof Function) {\n            callback = arguments[3];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        if (!settings) {\n            settings = {};\n        }\n        const bucketName = this._bucket.name;\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        const maxExpiry = settings === null || settings === void 0 ? void 0 : settings.maxExpiry;\n        const history = settings === null || settings === void 0 ? void 0 : settings.history;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementCollectionCreate({\n                bucket_name: bucketName,\n                scope_name: scopeName,\n                collection_name: collectionName,\n                max_expiry: maxExpiry,\n                history: history,\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n    /**\n     * Drops a collection from a scope.\n     *\n     * @param collectionName The name of the collection to drop.\n     * @param scopeName The name of the scope containing the collection to drop.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async dropCollection(collectionName, scopeName, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[2];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const bucketName = this._bucket.name;\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementCollectionDrop({\n                bucket_name: bucketName,\n                scope_name: scopeName,\n                collection_name: collectionName,\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n    /**\n     * Updates a collection in a scope.\n     *\n     * @param collectionName The name of the collection to update.\n     * @param scopeName The name of the scope containing the collection.\n     * @param settings The settings to update on the collection.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async updateCollection(collectionName, scopeName, settings, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[3];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const bucketName = this._bucket.name;\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementCollectionUpdate({\n                bucket_name: bucketName,\n                scope_name: scopeName,\n                collection_name: collectionName,\n                max_expiry: settings.maxExpiry,\n                history: settings.history,\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n    /**\n     * Creates a new scope.\n     *\n     * @param scopeName The name of the new scope to create.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async createScope(scopeName, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const bucketName = this._bucket.name;\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementScopeCreate({\n                bucket_name: bucketName,\n                scope_name: scopeName,\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n    /**\n     * Drops a scope.\n     *\n     * @param scopeName The name of the scope to drop.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async dropScope(scopeName, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const bucketName = this._bucket.name;\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementScopeDrop({\n                bucket_name: bucketName,\n                scope_name: scopeName,\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n}\nexports.CollectionManager = CollectionManager;\n"],"x_google_ignoreList":[0],"mappings":"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"}