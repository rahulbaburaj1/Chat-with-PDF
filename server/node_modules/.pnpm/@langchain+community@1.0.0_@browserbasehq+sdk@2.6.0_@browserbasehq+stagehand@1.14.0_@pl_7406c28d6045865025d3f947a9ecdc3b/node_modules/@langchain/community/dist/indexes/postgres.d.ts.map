{"version":3,"file":"postgres.d.ts","names":["PoolConfig","Pool","ListKeyOptions","RecordManagerInterface","UpdateOptions","PostgresRecordManagerOptions","PostgresRecordManager","Promise"],"sources":["../../src/indexes/postgres.d.ts"],"sourcesContent":["import { PoolConfig, Pool } from \"pg\";\nimport { ListKeyOptions, RecordManagerInterface, UpdateOptions } from \"@langchain/core/indexing\";\nexport type PostgresRecordManagerOptions = {\n    postgresConnectionOptions?: PoolConfig;\n    pool?: Pool;\n    tableName?: string;\n    schema?: string;\n};\nexport declare class PostgresRecordManager implements RecordManagerInterface {\n    lc_namespace: string[];\n    pool: Pool;\n    tableName: string;\n    namespace: string;\n    finalTableName: string;\n    constructor(namespace: string, config: PostgresRecordManagerOptions);\n    createSchema(): Promise<void>;\n    getTime(): Promise<number>;\n    /**\n     * Generates the SQL placeholders for a specific row at the provided index.\n     *\n     * @param index - The index of the row for which placeholders need to be generated.\n     * @param numOfColumns - The number of columns we are inserting data into.\n     * @returns The SQL placeholders for the row values.\n     */\n    private generatePlaceholderForRowAt;\n    update(keys: string[], updateOptions?: UpdateOptions): Promise<void>;\n    exists(keys: string[]): Promise<boolean[]>;\n    listKeys(options?: ListKeyOptions): Promise<string[]>;\n    deleteKeys(keys: string[]): Promise<void>;\n    /**\n     * Terminates the connection pool.\n     * @returns {Promise<void>}\n     */\n    end(): Promise<void>;\n}\n"],"mappings":";;;;;;;KAEYK,4BAAAA;8BACoBL;SACrBC;;;;cAIUK,qBAAAA,YAAiCH;;EAN1CE,IAAAA,EAQFJ,IAREI;EAA4B,SAAA,EAAA,MAAA;EAAA,SACRL,EAAAA,MAAAA;EAAU,cAC/BC,EAAAA,MAAAA;EAAI,WAAA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAU4BI,4BAV5B;EAIMC,YAAAA,CAAAA,CAAAA,EAODC,OAPCD,CAAqB,IAAA,CAAA;EAAA,OAAA,CAAA,CAAA,EAQ3BC,OAR2B,CAAA,MAAA,CAAA;EAAA;;;;;;;EAkBP,QACZL,2BAAAA;EAAc,MAAGK,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,EAAAA,aAAAA,CAAAA,EAFGH,aAEHG,CAAAA,EAFmBA,OAEnBA,CAAAA,IAAAA,CAAAA;EAAO,MACfA,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EAFJA,OAEIA,CAAAA,OAAAA,EAAAA,CAAAA;EAAO,QAK5BA,CAAAA,OAAAA,CAAAA,EANYL,cAMZK,CAAAA,EAN6BA,OAM7BA,CAAAA,MAAAA,EAAAA,CAAAA;EAAO,UAzBoCJ,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EAoBtBI,OApBsBJ,CAAAA,IAAAA,CAAAA;EAAsB;;;;SAyBjEI"}