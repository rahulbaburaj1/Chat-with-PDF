{"version":3,"file":"jina.d.cts","names":["Embeddings","EmbeddingsParams","JinaEmbeddingsParams","JinaMultiModelInput","JinaEmbeddingsInput","JinaEmbeddings","Partial","Promise"],"sources":["../../src/embeddings/jina.d.ts"],"sourcesContent":["import { Embeddings, type EmbeddingsParams } from \"@langchain/core/embeddings\";\nexport interface JinaEmbeddingsParams extends EmbeddingsParams {\n    /** Model name to use */\n    model: \"jina-clip-v2\" | \"jina-embeddings-v3\" | \"jina-colbert-v2\" | \"jina-clip-v1\" | \"jina-colbert-v1-en\" | \"jina-embeddings-v2-base-es\" | \"jina-embeddings-v2-base-code\" | \"jina-embeddings-v2-base-de\" | \"jina-embeddings-v2-base-zh\" | \"jina-embeddings-v2-base-en\" | string;\n    baseUrl?: string;\n    /**\n     * Timeout to use when making requests to Jina.\n     */\n    timeout?: number;\n    /**\n     * The maximum number of documents to embed in a single request.\n     */\n    batchSize?: number;\n    /**\n     * Whether to strip new lines from the input text.\n     */\n    stripNewLines?: boolean;\n    /**\n     * The dimensions of the embedding.\n     */\n    dimensions?: number;\n    /**\n     * Scales the embedding so its Euclidean (L2) norm becomes 1, preserving direction. Useful when downstream involves dot-product, classification, visualization..\n     */\n    normalized?: boolean;\n}\ntype JinaMultiModelInput = {\n    text: string;\n    image?: never;\n} | {\n    image: string;\n    text?: never;\n};\nexport type JinaEmbeddingsInput = string | JinaMultiModelInput;\nexport declare class JinaEmbeddings extends Embeddings implements JinaEmbeddingsParams {\n    model: JinaEmbeddingsParams[\"model\"];\n    batchSize: number;\n    baseUrl: string;\n    stripNewLines: boolean;\n    dimensions: number;\n    apiKey: string;\n    normalized: boolean;\n    constructor(fields?: Partial<JinaEmbeddingsParams> & {\n        apiKey?: string;\n    });\n    private doStripNewLines;\n    embedDocuments(input: JinaEmbeddingsInput[]): Promise<number[][]>;\n    embedQuery(input: JinaEmbeddingsInput): Promise<number[]>;\n    private getParams;\n    private embeddingWithRetry;\n}\nexport {};\n"],"mappings":";;;;;;UACiBE,oBAAAA,SAA6BD;;;;;;;;;AAA9C;AAwBC;EAQWG,SAAAA,CAAAA,EAAAA,MAAAA;EACSC;;;EACU,aAOEH,CAAAA,EAAAA,OAAAA;EAAoB;;;EAII,UACnCE,CAAAA,EAAAA,MAAAA;EAAmB;;;EAb6C,UAAA,CAAA,EAAA,OAAA;;KARjFD,mBAAAA;;;;;;;KAOOC,mBAAAA,YAA+BD;cACtBE,cAAAA,SAAuBL,UAAAA,YAAsBE;SACvDA;;;;;;;uBAOcI,QAAQJ;;;;wBAIPE,wBAAwBG;oBAC5BH,sBAAsBG"}