{"version":3,"file":"discord.d.ts","names":["Client","Tool","DiscordToolParams","DiscordGetMessagesToolParams","DiscordSendMessageToolParams","DiscordChannelSearchParams","DiscordGetMessagesTool","Promise","DiscordGetGuildsTool","DiscordGetTextChannelsTool","DiscordSendMessagesTool","DiscordChannelSearchTool"],"sources":["../../src/tools/discord.d.ts"],"sourcesContent":["import { Client } from \"discord.js\";\nimport { Tool } from \"@langchain/core/tools\";\n/**\n * Base tool parameters for the Discord tools\n */\ninterface DiscordToolParams {\n    botToken?: string;\n    client?: Client;\n}\n/**\n * Tool parameters for the DiscordGetMessagesTool\n */\ninterface DiscordGetMessagesToolParams extends DiscordToolParams {\n    messageLimit?: number;\n}\n/**\n * Tool parameters for the DiscordSendMessageTool\n */\ninterface DiscordSendMessageToolParams extends DiscordToolParams {\n    channelId?: string;\n}\n/**\n * Tool parameters for the DiscordChannelSearch\n */\ninterface DiscordChannelSearchParams extends DiscordToolParams {\n    channelId?: string;\n}\n/**\n * A tool for retrieving messages from a discord channel using a bot.\n * It extends the base Tool class and implements the _call method to\n * perform the retrieve operation. Requires an bot token which can be set\n * in the environment variables, and a limit on how many messages to retrieve.\n * The _call method takes the discord channel ID as the input argument.\n * The bot must have read permissions to the given channel. It returns the\n * message content, author, and time the message was created for each message.\n */\nexport declare class DiscordGetMessagesTool extends Tool {\n    static lc_name(): string;\n    name: string;\n    description: string;\n    protected botToken: string;\n    protected messageLimit: number;\n    protected client: Client;\n    constructor(fields?: DiscordGetMessagesToolParams);\n    /** @ignore */\n    _call(input: string): Promise<string>;\n}\n/**\n * A tool for retrieving all servers a bot is a member of. It extends the\n * base `Tool` class and implements the `_call` method to perform the retrieve\n * operation. Requires a bot token which can be set in the environment\n * variables.\n */\nexport declare class DiscordGetGuildsTool extends Tool {\n    static lc_name(): string;\n    name: string;\n    description: string;\n    protected botToken: string;\n    protected client: Client;\n    constructor(fields?: DiscordToolParams);\n    /** @ignore */\n    _call(_input: string): Promise<string>;\n}\n/**\n * A tool for retrieving text channels within a server/guild a bot is a member\n * of. It extends the base `Tool` class and implements the `_call` method to\n * perform the retrieve operation. Requires a bot token which can be set in\n * the environment variables. The `_call` method takes a server/guild ID\n * to get its text channels.\n */\nexport declare class DiscordGetTextChannelsTool extends Tool {\n    static lc_name(): string;\n    name: string;\n    description: string;\n    protected botToken: string;\n    protected client: Client;\n    constructor(fields?: DiscordToolParams);\n    /** @ignore */\n    _call(input: string): Promise<string>;\n}\n/**\n * A tool for sending messages to a discord channel using a bot.\n * It extends the base Tool class and implements the _call method to\n * perform the retrieve operation. Requires a bot token and channelId which can be set\n * in the environment variables. The _call method takes the message to be\n * sent as the input argument.\n */\nexport declare class DiscordSendMessagesTool extends Tool {\n    static lc_name(): string;\n    name: string;\n    description: string;\n    protected botToken: string;\n    protected channelId: string;\n    protected client: Client;\n    constructor(fields?: DiscordSendMessageToolParams);\n    /** @ignore */\n    _call(message: string): Promise<string>;\n}\n/**\n * A tool for searching for messages within a discord channel using a bot.\n * It extends the base Tool class and implements the _call method to\n * perform the retrieve operation. Requires an bot token which can be set\n * in the environment variables, and the discord channel ID of the channel.\n * The _call method takes the search term as the input argument.\n * The bot must have read permissions to the given channel. It returns the\n * message content, author, and time the message was created for each message.\n */\nexport declare class DiscordChannelSearchTool extends Tool {\n    static lc_name(): string;\n    name: string;\n    description: string;\n    protected botToken: string;\n    protected channelId: string;\n    protected client: Client;\n    constructor(fields?: DiscordChannelSearchParams);\n    /** @ignore */\n    _call(searchTerm: string): Promise<string>;\n}\nexport {};\n"],"mappings":";;;;;;;;;;UAKUE,iBAAAA;;WAEGF;;;;;UAKHG,4BAAAA,SAAqCD;EAPrCA,YAAAA,CAAAA,EAAAA,MAAiB;AAER;AAK6C;AAMA;AAkBhE;UAlBUE,4BAAAA,SAAqCF,iBAkBJ,CAAA;EAAA,SAMrBF,CAAAA,EAAAA,MAAAA;;;;AANkC;AAiBxD,UA7BUK,0BAAAA,SAAmCH,iBA6BJ,CAAA;EAAA,SAAA,CAAA,EAAA,MAAA;;;;;AAAa;AAiBtD;;;;;AAAwDD,cAlCnCK,sBAAAA,SAA+BL,IAAAA,CAkCIA;EAAI,OAAA,OAAA,CAAA,CAAA,EAAA,MAAA;EAiBvCS,IAAAA,EAAAA,MAAAA;EAAuB,WAAA,EAAA,MAAA;EAAA,UAMtBV,QAAAA,EAAAA,MAAAA;EAAM,UACHI,YAAAA,EAAAA,MAAAA;EAA4B,UAEzBG,MAAAA,EAtDNP,MAsDMO;EAAO,WATkBN,CAAAA,MAAAA,CAAAA,EA5C5BE,4BA4C4BF;EAAI;EAoBpCU,KAAAA,CAAAA,KAAAA,EAAAA,MAAAA,CAAAA,EA9DKJ,OA8DmB,CAAA,MAAA,CAAA;;;;;;AAAa;;cAtDrCC,oBAAAA,SAA6BP,IAAAA;;;;;oBAK5BD;uBACGE;;yBAEEK;;;;;;;;;cASNE,0BAAAA,SAAmCR,IAAAA;;;;;oBAKlCD;uBACGE;;wBAECK;;;;;;;;;cASLG,uBAAAA,SAAgCT,IAAAA;;;;;;oBAM/BD;uBACGI;;0BAEGG;;;;;;;;;;;cAWPI,wBAAAA,SAAiCV,IAAAA;;;;;;oBAMhCD;uBACGK;;6BAEME"}