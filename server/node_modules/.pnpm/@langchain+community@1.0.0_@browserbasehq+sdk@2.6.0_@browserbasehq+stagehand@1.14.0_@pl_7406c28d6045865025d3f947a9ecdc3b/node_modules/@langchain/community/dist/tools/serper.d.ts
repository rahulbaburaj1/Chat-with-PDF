import { serializable_d_exports } from "../load/serializable.js";
import { Tool } from "@langchain/core/tools";

//#region src/tools/serper.d.ts
declare namespace serper_d_exports {
  export { Serper, SerperParameters };
}
/**
 * Defines the parameters that can be passed to the Serper class during
 * instantiation. It includes `gl` and `hl` which are optional.
 */
type SerperParameters = {
  gl?: string;
  hl?: string;
};
/**
 * Wrapper around serper.
 *
 * You can create a free API key at https://serper.dev.
 *
 * To use, you should have the SERPER_API_KEY environment variable set.
 */
declare class Serper extends Tool {
  static lc_name(): string;
  /**
   * Converts the Serper instance to JSON. This method is not implemented
   * and will throw an error if called.
   * @returns Throws an error.
   */
  toJSON(): serializable_d_exports.SerializedNotImplemented;
  protected key: string;
  protected params: Partial<SerperParameters>;
  constructor(apiKey?: string | undefined, params?: Partial<SerperParameters>);
  name: string;
  /** @ignore */
  _call(input: string): Promise<any>;
  description: string;
}
//#endregion
export { Serper, SerperParameters, serper_d_exports };
//# sourceMappingURL=serper.d.ts.map