{"version":3,"file":"pdf.d.ts","names":["Document","BaseDocumentLoader","WebPDFLoader","Blob","splitPages","pdfjs","parsedItemSeparator","PDFLoaderImports","Promise","pdf_parse_lib_pdf_js_v1_10_100_build_pdf_js0","getDocument"],"sources":["../../../src/document_loaders/web/pdf.d.ts"],"sourcesContent":["import { Document } from \"@langchain/core/documents\";\nimport { BaseDocumentLoader } from \"@langchain/core/document_loaders/base\";\n/**\n * A document loader for loading data from PDFs.\n * @example\n * ```typescript\n * const loader = new WebPDFLoader(new Blob());\n * const docs = await loader.load();\n * console.log({ docs });\n * ```\n */\nexport declare class WebPDFLoader extends BaseDocumentLoader {\n    protected blob: Blob;\n    protected splitPages: boolean;\n    private pdfjs;\n    protected parsedItemSeparator: string;\n    constructor(blob: Blob, { splitPages, pdfjs, parsedItemSeparator }?: {\n        parsedItemSeparator?: string | undefined;\n        pdfjs?: typeof PDFLoaderImports | undefined;\n        splitPages?: boolean | undefined;\n    });\n    /**\n     * Loads the contents of the PDF as documents.\n     * @returns An array of Documents representing the retrieved data.\n     */\n    load(): Promise<Document[]>;\n}\ndeclare function PDFLoaderImports(): Promise<{\n    getDocument: typeof import(\"pdf-parse/lib/pdf.js/v1.10.100/build/pdf.js\").getDocument;\n    version: string;\n}>;\nexport {};\n"],"mappings":";;;;;;;;;;;;;;AAWA;;;AAKsBG,cALDD,YAAAA,SAAqBD,kBAAAA,CAKpBE;EAAI,UAAIC,IAAAA,EAJVD,IAIUC;EAAU,UAAEC,UAAAA,EAAAA,OAAAA;EAAK,QAAEC,KAAAA;EAAmB,UAE7CC,mBAAAA,EAAAA,MAAAA;EAAgB,WAOnBP,CAAAA,IAAAA,EATEG,IASFH,EAAAA;IAAAA,UAAAA;IAAAA,KAAAA;IAAAA;EAEHO,CAAAA,CAFGP,EAAAA;IAARQ,mBAAAA,CAAAA,EAAAA,MAAAA,GAAAA,SAAAA;IAd8BP,KAAAA,CAAAA,EAAAA,OAOnBM,gBAPmBN,GAAAA,SAAAA;IAAkB,UAAA,CAAA,EAAA,OAAA,GAAA,SAAA;EAgB3CM,CAAAA;EAAgB;;;AAAW;UAFhCC,QAAQR;;iBAEHO,gBAAAA,CAAAA,GAAoBC;sBAAJC,4CAAAA,CAC6CC"}