{"version":3,"file":"vectorstore.d.cts","names":["BaseLanguageModelInterface","VectorStoreInterface","Tool","VectorDBQAChain","VectorStoreTool","VectorStoreQATool","Promise"],"sources":["../../src/tools/vectorstore.d.ts"],"sourcesContent":["import type { BaseLanguageModelInterface } from \"@langchain/core/language_models/base\";\nimport type { VectorStoreInterface } from \"@langchain/core/vectorstores\";\nimport { Tool } from \"@langchain/core/tools\";\nimport { VectorDBQAChain } from \"../chains/vector_db_qa.js\";\n/**\n * Interface for tools that interact with a Vector Store.\n */\ninterface VectorStoreTool {\n    vectorStore: VectorStoreInterface;\n    llm: BaseLanguageModelInterface;\n}\n/**\n * A tool for the VectorDBQA chain to interact with a Vector Store. It is\n * used to answer questions about a specific topic. The input to this tool\n * should be a fully formed question.\n */\nexport declare class VectorStoreQATool extends Tool implements VectorStoreTool {\n    static lc_name(): string;\n    vectorStore: VectorStoreInterface;\n    llm: BaseLanguageModelInterface;\n    name: string;\n    description: string;\n    chain: VectorDBQAChain;\n    constructor(name: string, description: string, fields: VectorStoreTool);\n    /**\n     * Returns a string that describes what the tool does.\n     * @param name The name of the tool.\n     * @param description A description of what the tool does.\n     * @returns A string that describes what the tool does.\n     */\n    static getDescription(name: string, description: string): string;\n    /** @ignore */\n    _call(input: string): Promise<string>;\n}\nexport {};\n"],"mappings":";;;;;;;;;AAG4D;UAIlDI,eAAAA,CAAe;EAAA,WACRH,EAAAA,oBAAAA;EAAoB,GAC5BD,EAAAA,0BAAAA;AAA0B;AAOnC;;;;;AAO2DI,cAPtCC,iBAAAA,SAA0BH,IAAAA,YAAgBE,eAOJA,CAAAA;EAAe,OAShDE,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAO,WAhBcJ,EAE9BD,oBAF8BC;EAAI,GAAYE,EAGtDJ,0BAHsDI;EAAe,IAAA,EAAA,MAAA;;SAMnED;yDACgDC;;;;;;;;;wBASjCE"}