{"version":3,"file":"types.d.cts","names":["BaseMessage","HumanMessage","MessageChunkResult","PredictNextUserMessageResponse","Array","GetPredictionViolationsResponse","PREDICT_NEXT_USER_MESSAGE_FUNCTION","PREDICTION_VIOLATIONS_FUNCTION"],"sources":["../../../../src/experimental/chains/violation_of_expectations/types.d.ts"],"sourcesContent":["import { BaseMessage, HumanMessage } from \"@langchain/core/messages\";\n/**\n * Contains the chunk of messages, along with the\n * users response, which is the next message after the chunk.\n */\nexport type MessageChunkResult = {\n    chunkedMessages: BaseMessage[];\n    /**\n     * User response can be undefined if the last message in\n     * the chat history was from the AI.\n     */\n    userResponse?: HumanMessage;\n};\nexport type PredictNextUserMessageResponse = {\n    userState: string;\n    predictedUserMessage: string;\n    insights: Array<string>;\n};\nexport type GetPredictionViolationsResponse = {\n    userResponse?: HumanMessage;\n    revisedPrediction: string;\n    explainedPredictionErrors: Array<string>;\n};\nexport declare const PREDICT_NEXT_USER_MESSAGE_FUNCTION: {\n    name: string;\n    description: string;\n    parameters: {\n        type: string;\n        properties: {\n            userState: {\n                type: string;\n                description: string;\n            };\n            predictedUserMessage: {\n                type: string;\n                description: string;\n            };\n            insights: {\n                type: string;\n                items: {\n                    type: string;\n                };\n                description: string;\n            };\n        };\n        required: string[];\n    };\n};\nexport declare const PREDICTION_VIOLATIONS_FUNCTION: {\n    name: string;\n    description: string;\n    parameters: {\n        type: string;\n        properties: {\n            violationExplanation: {\n                type: string;\n                description: string;\n            };\n            explainedPredictionErrors: {\n                type: string;\n                items: {\n                    type: string;\n                };\n                description: string;\n            };\n        };\n        required: string[];\n    };\n};\n"],"mappings":";;;;;;AAKA;;AACqBA,KADTE,kBAAAA,GACSF;EAAW,eAKbC,EALED,WAKFC,EAAAA;EAAY;;;;iBAAZA"}