{"version":3,"file":"openai_tools.d.cts","names":["BaseLLMOutputParser","ChatGeneration","ParsedToolCall","Record","JsonOutputToolsParserParams","JsonOutputToolsParser","Promise","JsonOutputKeyToolsParserParams","JsonOutputKeyToolsParser"],"sources":["../../src/output_parsers/openai_tools.d.ts"],"sourcesContent":["import { BaseLLMOutputParser } from \"@langchain/core/output_parsers\";\nimport type { ChatGeneration } from \"@langchain/core/outputs\";\n/**\n * @deprecated Import from \"@langchain/core/output_parsers/openai_tools\"\n */\nexport type ParsedToolCall = {\n    id?: string;\n    type: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args: Record<string, any>;\n    /** @deprecated Use `type` instead. Will be removed in 0.2.0. */\n    name: string;\n    /** @deprecated Use `args` instead. Will be removed in 0.2.0. */\n    arguments: Record<string, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n};\n/**\n * @deprecated Import from \"@langchain/core/output_parsers/openai_tools\"\n */\nexport type JsonOutputToolsParserParams = {\n    /** Whether to return the tool call id. */\n    returnId?: boolean;\n};\n/**\n * @deprecated Import from \"@langchain/core/output_parsers/openai_tools\"\n */\nexport declare class JsonOutputToolsParser extends BaseLLMOutputParser<ParsedToolCall[]> {\n    static lc_name(): string;\n    returnId: boolean;\n    lc_namespace: string[];\n    lc_serializable: boolean;\n    constructor(fields?: JsonOutputToolsParserParams);\n    /**\n     * Parses the output and returns a JSON object. If `argsOnly` is true,\n     * only the arguments of the function call are returned.\n     * @param generations The output of the LLM to parse.\n     * @returns A JSON object representation of the function call or its arguments.\n     */\n    parseResult(generations: ChatGeneration[]): Promise<ParsedToolCall[]>;\n}\nexport type JsonOutputKeyToolsParserParams = {\n    keyName: string;\n    returnSingle?: boolean;\n    /** Whether to return the tool call id. */\n    returnId?: boolean;\n};\n/**\n * @deprecated Import from \"@langchain/core/output_parsers/openai_tools\"\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport declare class JsonOutputKeyToolsParser extends BaseLLMOutputParser<any> {\n    static lc_name(): string;\n    lc_namespace: string[];\n    lc_serializable: boolean;\n    returnId: boolean;\n    /** The type of tool calls to return. */\n    keyName: string;\n    /** Whether to return only the first tool call. */\n    returnSingle: boolean;\n    initialParser: JsonOutputToolsParser;\n    constructor(params: JsonOutputKeyToolsParserParams);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parseResult(generations: ChatGeneration[]): Promise<any>;\n}\n"],"mappings":";;;;;;;AAKA;AAA0B,KAAdE,cAAAA,GAAc;EAAA,EAAA,CAIhBC,EAAAA,MAAAA;EAAM,IAIDA,EAAAA,MAAAA;EAAM;EAKTC,IAAAA,EATFD,MASEC,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA;EAOSC;EAAqB,IAAA,EAAA,MAAA;EAAA;EAA2C,SAK5DD,EAjBVD,MAiBUC,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;CAA2B;;;;AALkB,KAP1DA,2BAAAA,GAO0D;EAc1DG;EAUSC,QAAAA,CAAAA,EAAAA,OAAAA;CAAwB;;;;AAYGF,cApC3BD,qBAAAA,SAA8BL,mBAoCHM,CApCuBJ,cAoCvBI,EAAAA,CAAAA,CAAAA;EAAO,OAZDN,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAmB,QAAA,EAAA,OAAA;;;uBAnBhDI;;;;;;;2BAOIH,mBAAmBK,QAAQJ;;KAE5CK,8BAAAA;;;;;;;;;;cAUSC,wBAAAA,SAAiCR;;;;;;;;;iBASnCK;sBACKE;;2BAEKN,mBAAmBK"}