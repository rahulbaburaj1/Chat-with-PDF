{"version":3,"file":"types.js","names":[],"sources":["../../../../src/experimental/chains/violation_of_expectations/types.ts"],"sourcesContent":["import { BaseMessage, HumanMessage } from \"@langchain/core/messages\";\n\n/**\n * Contains the chunk of messages, along with the\n * users response, which is the next message after the chunk.\n */\nexport type MessageChunkResult = {\n  chunkedMessages: BaseMessage[];\n  /**\n   * User response can be undefined if the last message in\n   * the chat history was from the AI.\n   */\n  userResponse?: HumanMessage;\n};\n\nexport type PredictNextUserMessageResponse = {\n  userState: string;\n  predictedUserMessage: string;\n  insights: Array<string>;\n};\n\nexport type GetPredictionViolationsResponse = {\n  userResponse?: HumanMessage;\n  revisedPrediction: string;\n  explainedPredictionErrors: Array<string>;\n};\n\nexport const PREDICT_NEXT_USER_MESSAGE_FUNCTION = {\n  name: \"predictNextUserMessage\",\n  description: \"Predicts the next user message, along with insights.\",\n  parameters: {\n    type: \"object\",\n    properties: {\n      userState: {\n        type: \"string\",\n        description: \"Concise reasoning about the users internal mental state.\",\n      },\n      predictedUserMessage: {\n        type: \"string\",\n        description:\n          \"Your prediction on how they will respond to the AI's most recent message.\",\n      },\n      insights: {\n        type: \"array\",\n        items: {\n          type: \"string\",\n        },\n        description:\n          \"A concise list of any additional insights that would be useful to improve prediction.\",\n      },\n    },\n    required: [\"userState\", \"predictedUserMessage\", \"insights\"],\n  },\n};\n\nexport const PREDICTION_VIOLATIONS_FUNCTION = {\n  name: \"predictionViolations\",\n  description:\n    \"Generates violations, errors and differences between the predicted user response, and the actual response.\",\n  parameters: {\n    type: \"object\",\n    properties: {\n      violationExplanation: {\n        type: \"string\",\n        description: \"How was the predication violated?\",\n      },\n      explainedPredictionErrors: {\n        type: \"array\",\n        items: {\n          type: \"string\",\n        },\n        description: \"Explanations of how the prediction was violated and why\",\n      },\n    },\n    required: [\"violationExplanation\", \"explainedPredictionErrors\"],\n  },\n};\n"],"mappings":";AA2BA,MAAa,qCAAqC;CAChD,MAAM;CACN,aAAa;CACb,YAAY;EACV,MAAM;EACN,YAAY;GACV,WAAW;IACT,MAAM;IACN,aAAa;GACd;GACD,sBAAsB;IACpB,MAAM;IACN,aACE;GACH;GACD,UAAU;IACR,MAAM;IACN,OAAO,EACL,MAAM,SACP;IACD,aACE;GACH;EACF;EACD,UAAU;GAAC;GAAa;GAAwB;EAAW;CAC5D;AACF;AAED,MAAa,iCAAiC;CAC5C,MAAM;CACN,aACE;CACF,YAAY;EACV,MAAM;EACN,YAAY;GACV,sBAAsB;IACpB,MAAM;IACN,aAAa;GACd;GACD,2BAA2B;IACzB,MAAM;IACN,OAAO,EACL,MAAM,SACP;IACD,aAAa;GACd;EACF;EACD,UAAU,CAAC,wBAAwB,2BAA4B;CAChE;AACF"}