{"version":3,"file":"parse.js","names":["contents: string","format: string","text: string","path: string","supportedTypes?: string[]"],"sources":["../../src/util/parse.ts"],"sourcesContent":["import * as yaml from \"yaml\";\nimport { extname } from \"./extname.js\";\n\nexport const loadFileContents = (contents: string, format: string) => {\n  switch (format) {\n    case \".json\":\n      return JSON.parse(contents);\n    case \".yml\":\n    case \".yaml\":\n      return yaml.parse(contents);\n    default:\n      throw new Error(`Unsupported filetype ${format}`);\n  }\n};\n\nexport const parseFileConfig = (\n  text: string,\n  path: string,\n  supportedTypes?: string[]\n) => {\n  const suffix = extname(path);\n\n  if (\n    ![\".json\", \".yaml\"].includes(suffix) ||\n    (supportedTypes && !supportedTypes.includes(suffix))\n  ) {\n    throw new Error(`Unsupported filetype ${suffix}`);\n  }\n\n  return loadFileContents(text, suffix);\n};\n"],"mappings":";;;;AAGA,MAAa,mBAAmB,CAACA,UAAkBC,WAAmB;AACpE,SAAQ,QAAR;EACE,KAAK,QACH,QAAO,KAAK,MAAM,SAAS;EAC7B,KAAK;EACL,KAAK,QACH,QAAO,KAAK,MAAM,SAAS;EAC7B,QACE,OAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE,QAAQ;CACnD;AACF;AAED,MAAa,kBAAkB,CAC7BC,MACAC,MACAC,mBACG;CACH,MAAM,SAAS,QAAQ,KAAK;AAE5B,KACE,CAAC,CAAC,SAAS,OAAQ,EAAC,SAAS,OAAO,IACnC,kBAAkB,CAAC,eAAe,SAAS,OAAO,CAEnD,OAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE,QAAQ;AAGlD,QAAO,iBAAiB,MAAM,OAAO;AACtC"}