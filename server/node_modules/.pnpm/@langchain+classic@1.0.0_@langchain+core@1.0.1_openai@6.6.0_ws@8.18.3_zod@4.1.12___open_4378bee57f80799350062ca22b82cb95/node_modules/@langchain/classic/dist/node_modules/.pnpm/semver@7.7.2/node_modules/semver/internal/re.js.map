{"version":3,"file":"re.js","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/semver@7.7.2/node_modules/semver/internal/re.js"],"sourcesContent":["'use strict'\n\nconst {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n// Non-numberic identifiers include numberic identifiers but can be longer.\n// Therefore non-numberic identifiers must go first.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n"],"x_google_ignoreList":[0],"mappings":"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"}