{"version":3,"file":"datetime.d.cts","names":["BaseOutputParser","DatetimeOutputParser","Date","Promise"],"sources":["../../src/output_parsers/datetime.d.ts"],"sourcesContent":["import { BaseOutputParser } from \"@langchain/core/output_parsers\";\n/**\n * Class to parse the output of an LLM call to a date.\n * @augments BaseOutputParser\n */\nexport declare class DatetimeOutputParser extends BaseOutputParser<Date> {\n    static lc_name(): string;\n    lc_namespace: string[];\n    lc_serializable: boolean;\n    /**\n     * ISO 8601 date time standard.\n     */\n    format: string;\n    /**\n     * Parses the given text into a Date.\n     * If the parsing fails, throws an OutputParserException.\n     * @param text The text to parse.\n     * @returns A date object.\n     */\n    parse(text: string): Promise<Date>;\n    /**\n     * Provides instructions on the expected format of the response for the\n     * CommaSeparatedListOutputParser.\n     * @returns A string containing instructions on the expected format of the response.\n     */\n    getFormatInstructions(): string;\n}\n"],"mappings":";;;;;;AAKA;;AAAmEE,cAA9CD,oBAAAA,SAA6BD,gBAAiBE,CAAAA,IAAAA,CAAAA,CAAAA;EAAI,OActCA,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAI,YAAZC,EAAAA,MAAAA,EAAAA;EAAO,eAdkBH,EAAAA,OAAAA;EAAgB;;;;;;;;;;uBAczCG,QAAQD"}