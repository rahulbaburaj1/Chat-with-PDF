{"version":3,"file":"transform.d.ts","names":["CallbackManagerForChainRun","Callbacks","ChainValues","ChainInputs","BaseChain","TransformChainFields","I","O","Promise","TransformChain"],"sources":["../../src/chains/transform.d.ts"],"sourcesContent":["import { CallbackManagerForChainRun, Callbacks } from \"@langchain/core/callbacks/manager\";\nimport { ChainValues } from \"@langchain/core/utils/types\";\nimport { ChainInputs, BaseChain } from \"./base.js\";\n/**\n * Interface that extends the `ChainInputs` interface and defines the\n * fields required for a transform chain. It includes the `transform`\n * function, `inputVariables`, and `outputVariables` properties.\n */\nexport interface TransformChainFields<I extends ChainValues, O extends ChainValues> extends ChainInputs {\n    transform: (values: I, callbacks?: Callbacks) => O | Promise<O>;\n    inputVariables: (keyof I extends string ? keyof I : never)[];\n    outputVariables: (keyof O extends string ? keyof O : never)[];\n}\n/**\n * Class that represents a transform chain. It extends the `BaseChain`\n * class and implements the `TransformChainFields` interface. It provides\n * a way to transform input values to output values using a specified\n * transform function.\n */\nexport declare class TransformChain<I extends ChainValues, O extends ChainValues> extends BaseChain {\n    static lc_name(): string;\n    transformFunc: (values: I, callbacks?: Callbacks) => O | Promise<O>;\n    inputVariables: (keyof I extends string ? keyof I : never)[];\n    outputVariables: (keyof O extends string ? keyof O : never)[];\n    _chainType(): \"transform\";\n    get inputKeys(): (keyof I extends string ? keyof I : never)[];\n    get outputKeys(): (keyof O extends string ? keyof O : never)[];\n    constructor(fields: TransformChainFields<I, O>);\n    _call(values: I, runManager?: CallbackManagerForChainRun): Promise<O>;\n}\n"],"mappings":";;;;;;;;AAQA;;;AAAuEE,UAAtDG,oBAAsDH,CAAAA,UAAvBA,WAAuBA,EAAAA,UAAAA,WAAAA,CAAAA,SAAqBC,WAArBD,CAAAA;EAAW,SAC1DI,EAAAA,CAAAA,MAAAA,EAAAA,CAAAA,EAAAA,SAAAA,CAAAA,EAAeL,SAAfK,EAAAA,GAA6BC,CAA7BD,GAAiCE,OAAjCF,CAAyCC,CAAzCD,CAAAA;EAAC,cAAcL,EAAAA,CAAAA,MACZK,CADYL,SAAAA,MAAAA,GAAAA,MACaK,CADbL,GAAAA,KAAAA,CAAAA,EAAAA;EAAS,eAAKM,EAAAA,CAAAA,MAEzBA,CAFyBA,SAAAA,MAAAA,GAAAA,MAEAA,CAFAA,GAAAA,KAAAA,CAAAA,EAAAA;;;;;;;;AADkD,cAWlFE,cAXkF,CAAA,UAWzDP,WAXyD,EAAA,UAWlCA,WAXkC,CAAA,SAWbE,SAAAA,CAXa;EAWlFK,OAAAA,OAAAA,CAAAA,CAAAA,EAAc,MAAA;EAAA,aAAA,EAAA,CAAA,MAAA,EAEPH,CAFO,EAAA,SAAA,CAAA,EAEQL,SAFR,EAAA,GAEsBM,CAFtB,GAE0BC,OAF1B,CAEkCD,CAFlC,CAAA;EAAA,cAAWL,EAAAA,CAAAA,MAGnBI,CAHmBJ,SAAAA,MAAAA,GAAAA,MAGMI,CAHNJ,GAAAA,KAAAA,CAAAA,EAAAA;EAAW,eAAYA,EAAAA,CAAAA,MAIzCK,CAJyCL,SAAAA,MAAAA,GAAAA,MAIhBK,CAJgBL,GAAAA,KAAAA,CAAAA,EAAAA;EAAW,UAEpDI,CAAAA,CAAAA,EAAAA,WAAAA;EAAC,IAAcL,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAIfK,CAJeL,SAAAA,MAAAA,GAAAA,MAIUK,CAJVL,GAAAA,KAAAA,CAAAA,EAAAA;EAAS,IAAKM,UAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAK5BA,CAL4BA,SAAAA,MAAAA,GAAAA,MAKHA,CALGA,GAAAA,KAAAA,CAAAA,EAAAA;EAAC,WAAWA,CAAAA,MAAAA,EAM7CF,oBAN6CE,CAMxBD,CANwBC,EAMrBA,CANqBA,CAAAA;EAAC,KAATC,CAAAA,MAAAA,EAO3CF,CAP2CE,EAAAA,UAAAA,CAAAA,EAO3BR,0BAP2BQ,CAAAA,EAOEA,OAPFA,CAOUD,CAPVC,CAAAA"}