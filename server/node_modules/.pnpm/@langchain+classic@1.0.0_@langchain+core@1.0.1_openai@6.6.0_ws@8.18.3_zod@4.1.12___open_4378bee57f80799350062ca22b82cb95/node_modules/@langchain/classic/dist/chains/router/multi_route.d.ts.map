{"version":3,"file":"multi_route.d.ts","names":["ChainValues","CallbackManagerForChainRun","Callbacks","BaseChain","ChainInputs","Inputs","Route","MultiRouteChainInput","RouterChain","Promise","MultiRouteChain"],"sources":["../../../src/chains/router/multi_route.d.ts"],"sourcesContent":["import { ChainValues } from \"@langchain/core/utils/types\";\nimport { CallbackManagerForChainRun, Callbacks } from \"@langchain/core/callbacks/manager\";\nimport { BaseChain, ChainInputs } from \"../../chains/base.js\";\n/**\n * A type that represents the inputs for the MultiRouteChain. It is a\n * recursive type that can contain nested objects, arrays, strings, and\n * numbers.\n */\ntype Inputs = {\n    [key: string]: Inputs | Inputs[] | string | string[] | number | number[];\n};\n/**\n * An interface that represents the route returned by the RouterChain. It\n * includes optional fields for the destination and nextInputs.\n */\nexport interface Route {\n    destination?: string;\n    nextInputs: {\n        [key: string]: Inputs;\n    };\n}\n/**\n * An interface that extends the ChainInputs interface and adds additional\n * properties for the routerChain, destinationChains, defaultChain, and\n * silentErrors. It represents the input expected by the MultiRouteChain\n * class.\n */\nexport interface MultiRouteChainInput extends ChainInputs {\n    routerChain: RouterChain;\n    destinationChains: {\n        [name: string]: BaseChain;\n    };\n    defaultChain: BaseChain;\n    silentErrors?: boolean;\n}\n/**\n * A class that represents a router chain. It\n * extends the BaseChain class and provides functionality for routing\n * inputs to different chains.\n */\nexport declare abstract class RouterChain extends BaseChain {\n    get outputKeys(): string[];\n    route(inputs: ChainValues, callbacks?: Callbacks): Promise<Route>;\n}\n/**\n * A class that represents a multi-route chain.\n * It extends the BaseChain class and provides functionality for routing\n * inputs to different chains based on a router chain.\n */\nexport declare class MultiRouteChain extends BaseChain {\n    static lc_name(): string;\n    routerChain: RouterChain;\n    destinationChains: {\n        [name: string]: BaseChain;\n    };\n    defaultChain: BaseChain;\n    silentErrors: boolean;\n    constructor(fields: MultiRouteChainInput);\n    get inputKeys(): string[];\n    get outputKeys(): string[];\n    _call(values: ChainValues, runManager?: CallbackManagerForChainRun): Promise<ChainValues>;\n    _chainType(): string;\n}\nexport {};\n"],"mappings":";;;;;;;;AAE8D;;;KAMzDK,MAAAA,GACuBA;EAAM,CAAA,GAAA,EAAA,MAAA,CAAA,EAAfA,MAAe,GAANA,MAAM,EAAA,GAAA,MAAA,GAAA,MAAA,EAAA,GAAA,MAAA,GAAA,MAAA,EAAA;AAMlC,CAAA;AAYA;;;;AAKkBF,UAjBDG,KAAAA,CAiBCH;EAAS,WALmBC,CAAAA,EAAAA,MAAAA;EAAW,UAAA,EAAA;IAa3BI,CAAAA,GAAAA,EAAAA,MAAW,CAAA,EAtBlBH,MAsBkB;EAAA,CAAA;;;;;;AAAkB;AAS3D;AAAoC,UAtBnBE,oBAAAA,SAA6BH,WAsBV,CAAA;EAAA,WAEnBI,EAvBAA,WAuBAA;EAAW,iBAEJL,EAAAA;IAENA,CAAAA,IAAAA,EAAAA,MAAAA,CAAAA,EAzBMA,SAyBNA;EAAS,CAAA;EAEiB,YAG1BH,EA5BAG,SA4BAH;EAAW,YAAeC,CAAAA,EAAAA,OAAAA;;;;AAXU;;;uBATxBO,WAAAA,SAAoBL,SAAAA;;gBAEhCH,yBAAyBE,YAAYO,QAAQH;;;;;;;cAO1CI,eAAAA,SAAwBP,SAAAA;;eAE5BK;;oBAEOL;;gBAENA;;sBAEMI;;;gBAGNP,0BAA0BC,6BAA6BQ,QAAQT"}