{"version":3,"file":"conversation.d.cts","names":["LLMChain","LLMChainInput","Optional","DEFAULT_TEMPLATE","ConversationChain","prompt","outputKey","memory"],"sources":["../../src/chains/conversation.d.ts"],"sourcesContent":["import { LLMChain, LLMChainInput } from \"./llm_chain.js\";\nimport { Optional } from \"../types/type-utils.js\";\nexport declare const DEFAULT_TEMPLATE = \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\\n\\nCurrent conversation:\\n{history}\\nHuman: {input}\\nAI:\";\n/**\n * A class for conducting conversations between a human and an AI. It\n * extends the {@link LLMChain} class.\n * @example\n * ```typescript\n * const model = new ChatOpenAI({ model: \"gpt-4o-mini\" });\n * const chain = new ConversationChain({ llm: model });\n *\n * // Sending a greeting to the conversation chain\n * const res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\n * console.log({ res1 });\n *\n * // Following up with a question in the conversation\n * const res2 = await chain.call({ input: \"What's my name?\" });\n * console.log({ res2 });\n * ```\n */\nexport declare class ConversationChain extends LLMChain {\n    static lc_name(): string;\n    constructor({ prompt, outputKey, memory, ...rest }: Optional<LLMChainInput, \"prompt\">);\n}\n"],"mappings":";;;;;;AAoBA;;;;;;;;AAAuD;;;;;;;;cAAlCI,iBAAAA,SAA0BJ,QAAAA;;;;;;;KAESE,SAASD"}