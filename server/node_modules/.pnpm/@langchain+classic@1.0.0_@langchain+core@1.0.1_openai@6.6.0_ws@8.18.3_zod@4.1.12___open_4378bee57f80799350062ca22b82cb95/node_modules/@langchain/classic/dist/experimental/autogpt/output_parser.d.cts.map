{"version":3,"file":"output_parser.d.cts","names":["BaseOutputParser","AutoGPTAction","preprocessJsonInput","AutoGPTOutputParser","Promise"],"sources":["../../../src/experimental/autogpt/output_parser.d.ts"],"sourcesContent":["import { BaseOutputParser } from \"@langchain/core/output_parsers\";\nimport { AutoGPTAction } from \"./schema.js\";\n/**\n * Utility function used to preprocess a string to be parsed as JSON.\n * It replaces single backslashes with double backslashes, while leaving\n * already escaped ones intact.\n * It also extracts the json code if it is inside a code block\n */\nexport declare function preprocessJsonInput(inputStr: string): string;\n/**\n * Class responsible for parsing the output of AutoGPT. It extends the\n * BaseOutputParser class.\n */\nexport declare class AutoGPTOutputParser extends BaseOutputParser<AutoGPTAction> {\n    lc_namespace: string[];\n    /**\n     * Method not implemented in the class and will throw an error if called.\n     * It is likely meant to be overridden in subclasses to provide specific\n     * format instructions.\n     * @returns Throws an error.\n     */\n    getFormatInstructions(): string;\n    /**\n     * Asynchronous method that takes a string as input and attempts to parse\n     * it into an AutoGPTAction object. If the input string cannot be parsed\n     * directly, the method tries to preprocess the string using the\n     * preprocessJsonInput function and parse it again. If parsing fails\n     * again, it returns an AutoGPTAction object with an error message.\n     * @param text The string to be parsed.\n     * @returns A Promise that resolves to an AutoGPTAction object.\n     */\n    parse(text: string): Promise<AutoGPTAction>;\n}\n"],"mappings":";;;;;;;AAQA;AAKA;;;AAkBiCC,iBAvBTC,mBAAAA,CAuBSD,QAAAA,EAAAA,MAAAA,CAAAA,EAAAA,MAAAA;;;AAlBgC;;cAA5CE,mBAAAA,SAA4BH,iBAAiBC;;;;;;;;;;;;;;;;;;uBAkBzCG,QAAQH"}