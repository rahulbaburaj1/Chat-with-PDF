{"version":3,"file":"index.cjs","names":["Runnable","fields: OpenAIAssistantRunnableInput<AsAgent>","OpenAIClient","StructuredTool","input: RunInput","_options?: RunnableConfig","run: any","toolCall: any","params: Record<string, unknown>","runId: string","threadId: string","sleep","actions: OpenAIAssistantAction[]","item: any","tool: StructuredToolInterface"],"sources":["../../../src/experimental/openai_assistant/index.ts"],"sourcesContent":["import {\n  type ClientOptions,\n  type OpenAIChatModelId,\n  OpenAIClient,\n} from \"@langchain/openai\";\nimport { StructuredTool, StructuredToolInterface } from \"@langchain/core/tools\";\nimport { Runnable, RunnableConfig } from \"@langchain/core/runnables\";\nimport { isInteropZodSchema } from \"@langchain/core/utils/types\";\nimport { toJsonSchema } from \"@langchain/core/utils/json_schema\";\nimport { ToolDefinition } from \"@langchain/core/language_models/base\";\nimport { sleep } from \"../../util/time.js\";\nimport type {\n  OpenAIAssistantFinish,\n  OpenAIAssistantAction,\n  OpenAIToolType,\n} from \"./schema.js\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype ThreadMessage = any;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype RequiredActionFunctionToolCall = any;\n\ntype ExtractRunOutput<AsAgent extends boolean | undefined> =\n  AsAgent extends true\n    ? OpenAIAssistantFinish | OpenAIAssistantAction[]\n    : ThreadMessage[] | RequiredActionFunctionToolCall[];\n\nexport type OpenAIAssistantRunnableInput<\n  AsAgent extends boolean | undefined = undefined\n> = {\n  client?: OpenAIClient;\n  clientOptions?: ClientOptions;\n  assistantId: string;\n  pollIntervalMs?: number;\n  asAgent?: AsAgent;\n};\n\nexport class OpenAIAssistantRunnable<\n  AsAgent extends boolean | undefined,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RunInput extends Record<string, any> = Record<string, any>\n> extends Runnable<RunInput, ExtractRunOutput<AsAgent>> {\n  lc_namespace = [\"langchain\", \"experimental\", \"openai_assistant\"];\n\n  private client: OpenAIClient;\n\n  assistantId: string;\n\n  pollIntervalMs = 1000;\n\n  asAgent?: AsAgent;\n\n  constructor(fields: OpenAIAssistantRunnableInput<AsAgent>) {\n    super(fields);\n    this.client = fields.client ?? new OpenAIClient(fields?.clientOptions);\n    this.assistantId = fields.assistantId;\n    this.asAgent = fields.asAgent ?? this.asAgent;\n  }\n\n  static async createAssistant<AsAgent extends boolean>({\n    model,\n    name,\n    instructions,\n    tools,\n    client,\n    clientOptions,\n    asAgent,\n    pollIntervalMs,\n    fileIds,\n  }: Omit<OpenAIAssistantRunnableInput<AsAgent>, \"assistantId\"> & {\n    model: OpenAIChatModelId;\n    name?: string;\n    instructions?: string;\n    tools?: OpenAIToolType | Array<StructuredTool>;\n    fileIds?: string[];\n  }) {\n    const formattedTools =\n      tools?.map((tool) => {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (tool instanceof StructuredTool) {\n          return formatToOpenAIAssistantTool(tool);\n        }\n        return tool;\n      }) ?? [];\n    const oaiClient = client ?? new OpenAIClient(clientOptions);\n    const assistant = await oaiClient.beta.assistants.create({\n      name,\n      instructions,\n      tools: formattedTools,\n      model,\n      file_ids: fileIds,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n\n    return new this({\n      client: oaiClient,\n      assistantId: assistant.id,\n      asAgent,\n      pollIntervalMs,\n    });\n  }\n\n  async invoke(\n    input: RunInput,\n    _options?: RunnableConfig\n  ): Promise<ExtractRunOutput<AsAgent>> {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let run: any;\n    if (this.asAgent && input.steps && input.steps.length > 0) {\n      const parsedStepsInput = await this._parseStepsInput(input);\n      run = await this.client.beta.threads.runs.submitToolOutputs(\n        parsedStepsInput.runId,\n        {\n          thread_id: parsedStepsInput.threadId,\n          tool_outputs: parsedStepsInput.toolOutputs,\n        }\n      );\n    } else if (!(\"threadId\" in input)) {\n      const thread = {\n        messages: [\n          {\n            role: \"user\",\n            content: input.content,\n            attachments: input.attachments,\n            metadata: input.messagesMetadata,\n          },\n        ],\n        metadata: input.threadMetadata,\n      };\n      run = await this._createThreadAndRun({\n        ...input,\n        thread,\n      });\n    } else if (!(\"runId\" in input)) {\n      await this.client.beta.threads.messages.create(input.threadId, {\n        content: input.content,\n        role: \"user\",\n        attachments: input.attachments,\n        metadata: input.messagesMetadata,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      } as any);\n      run = await this._createRun(input);\n    } else {\n      // Submitting tool outputs to an existing run, outside the AgentExecutor\n      // framework.\n      run = await this.client.beta.threads.runs.submitToolOutputs(input.runId, {\n        thread_id: input.threadId,\n        tool_outputs: input.toolOutputs,\n      });\n    }\n\n    return this._getResponse(run.id, run.thread_id);\n  }\n\n  /**\n   * Delete an assistant.\n   *\n   * @link {https://platform.openai.com/docs/api-reference/assistants/deleteAssistant}\n   * @returns {Promise<AssistantDeleted>}\n   */\n  public async deleteAssistant() {\n    return await this.client.beta.assistants.delete(this.assistantId);\n  }\n\n  /**\n   * Retrieves an assistant.\n   *\n   * @link {https://platform.openai.com/docs/api-reference/assistants/getAssistant}\n   * @returns {Promise<OpenAIClient.Beta.Assistants.Assistant>}\n   */\n  public async getAssistant() {\n    return await this.client.beta.assistants.retrieve(this.assistantId);\n  }\n\n  /**\n   * Modifies an assistant.\n   *\n   * @link {https://platform.openai.com/docs/api-reference/assistants/modifyAssistant}\n   * @returns {Promise<OpenAIClient.Beta.Assistants.Assistant>}\n   */\n  public async modifyAssistant<AsAgent extends boolean>({\n    model,\n    name,\n    instructions,\n    fileIds,\n  }: Omit<OpenAIAssistantRunnableInput<AsAgent>, \"assistantId\" | \"tools\"> & {\n    model?: OpenAIChatModelId;\n    name?: string;\n    instructions?: string;\n    fileIds?: string[];\n  }) {\n    return await this.client.beta.assistants.update(this.assistantId, {\n      name,\n      instructions,\n      model,\n      file_ids: fileIds,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private async _parseStepsInput(input: RunInput): Promise<RunInput> {\n    const {\n      action: { runId, threadId },\n    } = input.steps[input.steps.length - 1];\n    const run = await this._waitForRun(runId, threadId);\n    const toolCalls = run.required_action?.submit_tool_outputs.tool_calls;\n    if (!toolCalls) {\n      return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const toolOutputs = toolCalls.flatMap((toolCall: any) => {\n      const matchedAction = (\n        input.steps as {\n          action: OpenAIAssistantAction;\n          observation: string;\n        }[]\n      ).find((step) => step.action.toolCallId === toolCall.id);\n\n      return matchedAction\n        ? [\n            {\n              output: matchedAction.observation,\n              tool_call_id: matchedAction.action.toolCallId,\n            },\n          ]\n        : [];\n    });\n    return { toolOutputs, runId, threadId } as unknown as RunInput;\n  }\n\n  private async _createRun({\n    instructions,\n    model,\n    tools,\n    metadata,\n    threadId,\n  }: RunInput) {\n    const run = this.client.beta.threads.runs.create(threadId, {\n      assistant_id: this.assistantId,\n      instructions,\n      model,\n      tools,\n      metadata,\n    });\n    return run;\n  }\n\n  private async _createThreadAndRun(input: RunInput) {\n    const params: Record<string, unknown> = [\n      \"instructions\",\n      \"model\",\n      \"tools\",\n      \"run_metadata\",\n    ]\n      .filter((key) => key in input)\n      .reduce((obj, key) => {\n        const newObj = obj;\n        newObj[key] = input[key];\n        return newObj;\n      }, {} as Record<string, unknown>);\n    const run = this.client.beta.threads.createAndRun({\n      ...params,\n      thread: input.thread,\n      assistant_id: this.assistantId,\n    });\n    return run;\n  }\n\n  private async _waitForRun(runId: string, threadId: string) {\n    let inProgress = true;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let run = {} as any;\n    while (inProgress) {\n      run = await this.client.beta.threads.runs.retrieve(runId, {\n        thread_id: threadId,\n      });\n      inProgress = [\"in_progress\", \"queued\"].includes(run.status);\n      if (inProgress) {\n        await sleep(this.pollIntervalMs);\n      }\n    }\n    return run;\n  }\n\n  private async _getResponse(\n    runId: string,\n    threadId: string\n  ): Promise<ExtractRunOutput<AsAgent>>;\n\n  private async _getResponse(\n    runId: string,\n    threadId: string\n  ): Promise<\n    | OpenAIAssistantFinish\n    | OpenAIAssistantAction[]\n    | ThreadMessage[]\n    | RequiredActionFunctionToolCall[]\n  > {\n    const run = await this._waitForRun(runId, threadId);\n    if (run.status === \"completed\") {\n      const messages = await this.client.beta.threads.messages.list(threadId, {\n        order: \"desc\",\n      });\n      const newMessages = messages.data.filter((msg) => msg.run_id === runId);\n      if (!this.asAgent) {\n        return newMessages;\n      }\n      const answer = newMessages.flatMap((msg) => msg.content);\n      if (answer.every((item) => item.type === \"text\")) {\n        const answerString = answer\n          .map((item) => item.type === \"text\" && item.text.value)\n          .join(\"\\n\");\n        return {\n          returnValues: {\n            output: answerString,\n            runId,\n            threadId,\n          },\n          log: \"\",\n          runId,\n          threadId,\n        };\n      }\n    } else if (run.status === \"requires_action\") {\n      if (!this.asAgent) {\n        return run.required_action?.submit_tool_outputs.tool_calls ?? [];\n      }\n      const actions: OpenAIAssistantAction[] = [];\n      run.required_action?.submit_tool_outputs.tool_calls.forEach(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (item: any) => {\n          const functionCall = item.function;\n          const args = JSON.parse(functionCall.arguments);\n          actions.push({\n            tool: functionCall.name,\n            toolInput: args,\n            toolCallId: item.id,\n            log: \"\",\n            runId,\n            threadId,\n          });\n        }\n      );\n      return actions;\n    }\n    const runInfo = JSON.stringify(run, null, 2);\n    throw new Error(\n      `Unexpected run status ${run.status}.\\nFull run info:\\n\\n${runInfo}`\n    );\n  }\n}\n\nexport function formatToOpenAIAssistantTool(\n  tool: StructuredToolInterface\n): ToolDefinition {\n  return {\n    type: \"function\",\n    function: {\n      name: tool.name,\n      description: tool.description,\n      parameters: isInteropZodSchema(tool.schema)\n        ? toJsonSchema(tool.schema)\n        : tool.schema,\n    },\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;AAqCA,IAAa,0BAAb,cAIUA,oCAA8C;CACtD,eAAe;EAAC;EAAa;EAAgB;CAAmB;CAEhE,AAAQ;CAER;CAEA,iBAAiB;CAEjB;CAEA,YAAYC,QAA+C;EACzD,MAAM,OAAO;EACb,KAAK,SAAS,OAAO,UAAU,IAAIC,gCAAa,QAAQ;EACxD,KAAK,cAAc,OAAO;EAC1B,KAAK,UAAU,OAAO,WAAW,KAAK;CACvC;CAED,aAAa,gBAAyC,EACpD,OACA,MACA,cACA,OACA,QACA,eACA,SACA,gBACA,SAOD,EAAE;EACD,MAAM,iBACJ,OAAO,IAAI,CAAC,SAAS;AAEnB,OAAI,gBAAgBC,sCAClB,QAAO,4BAA4B,KAAK;AAE1C,UAAO;EACR,EAAC,IAAI,CAAE;EACV,MAAM,YAAY,UAAU,IAAID,gCAAa;EAC7C,MAAM,YAAY,MAAM,UAAU,KAAK,WAAW,OAAO;GACvD;GACA;GACA,OAAO;GACP;GACA,UAAU;EAEX,EAAQ;AAET,SAAO,IAAI,KAAK;GACd,QAAQ;GACR,aAAa,UAAU;GACvB;GACA;EACD;CACF;CAED,MAAM,OACJE,OACAC,UACoC;EAEpC,IAAIC;AACJ,MAAI,KAAK,WAAW,MAAM,SAAS,MAAM,MAAM,SAAS,GAAG;GACzD,MAAM,mBAAmB,MAAM,KAAK,iBAAiB,MAAM;GAC3D,MAAM,MAAM,KAAK,OAAO,KAAK,QAAQ,KAAK,kBACxC,iBAAiB,OACjB;IACE,WAAW,iBAAiB;IAC5B,cAAc,iBAAiB;GAChC,EACF;EACF,WAAU,EAAE,cAAc,QAAQ;GACjC,MAAM,SAAS;IACb,UAAU,CACR;KACE,MAAM;KACN,SAAS,MAAM;KACf,aAAa,MAAM;KACnB,UAAU,MAAM;IACjB,CACF;IACD,UAAU,MAAM;GACjB;GACD,MAAM,MAAM,KAAK,oBAAoB;IACnC,GAAG;IACH;GACD,EAAC;EACH,WAAU,EAAE,WAAW,QAAQ;GAC9B,MAAM,KAAK,OAAO,KAAK,QAAQ,SAAS,OAAO,MAAM,UAAU;IAC7D,SAAS,MAAM;IACf,MAAM;IACN,aAAa,MAAM;IACnB,UAAU,MAAM;GAEjB,EAAQ;GACT,MAAM,MAAM,KAAK,WAAW,MAAM;EACnC,OAGC,MAAM,MAAM,KAAK,OAAO,KAAK,QAAQ,KAAK,kBAAkB,MAAM,OAAO;GACvE,WAAW,MAAM;GACjB,cAAc,MAAM;EACrB,EAAC;AAGJ,SAAO,KAAK,aAAa,IAAI,IAAI,IAAI,UAAU;CAChD;;;;;;;CAQD,MAAa,kBAAkB;AAC7B,SAAO,MAAM,KAAK,OAAO,KAAK,WAAW,OAAO,KAAK,YAAY;CAClE;;;;;;;CAQD,MAAa,eAAe;AAC1B,SAAO,MAAM,KAAK,OAAO,KAAK,WAAW,SAAS,KAAK,YAAY;CACpE;;;;;;;CAQD,MAAa,gBAAyC,EACpD,OACA,MACA,cACA,SAMD,EAAE;AACD,SAAO,MAAM,KAAK,OAAO,KAAK,WAAW,OAAO,KAAK,aAAa;GAChE;GACA;GACA;GACA,UAAU;EAEX,EAAQ;CACV;CAED,MAAc,iBAAiBF,OAAoC;EACjE,MAAM,EACJ,QAAQ,EAAE,OAAO,UAAU,EAC5B,GAAG,MAAM,MAAM,MAAM,MAAM,SAAS;EACrC,MAAM,MAAM,MAAM,KAAK,YAAY,OAAO,SAAS;EACnD,MAAM,YAAY,IAAI,iBAAiB,oBAAoB;AAC3D,MAAI,CAAC,UACH,QAAO;EAGT,MAAM,cAAc,UAAU,QAAQ,CAACG,aAAkB;GACvD,MAAM,gBACJ,MAAM,MAIN,KAAK,CAAC,SAAS,KAAK,OAAO,eAAe,SAAS,GAAG;AAExD,UAAO,gBACH,CACE;IACE,QAAQ,cAAc;IACtB,cAAc,cAAc,OAAO;GACpC,CACF,IACD,CAAE;EACP,EAAC;AACF,SAAO;GAAE;GAAa;GAAO;EAAU;CACxC;CAED,MAAc,WAAW,EACvB,cACA,OACA,OACA,UACA,UACS,EAAE;EACX,MAAM,MAAM,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,UAAU;GACzD,cAAc,KAAK;GACnB;GACA;GACA;GACA;EACD,EAAC;AACF,SAAO;CACR;CAED,MAAc,oBAAoBH,OAAiB;EACjD,MAAMI,SAAkC;GACtC;GACA;GACA;GACA;EACD,EACE,OAAO,CAAC,QAAQ,OAAO,MAAM,CAC7B,OAAO,CAAC,KAAK,QAAQ;GACpB,MAAM,SAAS;GACf,OAAO,OAAO,MAAM;AACpB,UAAO;EACR,GAAE,CAAE,EAA4B;EACnC,MAAM,MAAM,KAAK,OAAO,KAAK,QAAQ,aAAa;GAChD,GAAG;GACH,QAAQ,MAAM;GACd,cAAc,KAAK;EACpB,EAAC;AACF,SAAO;CACR;CAED,MAAc,YAAYC,OAAeC,UAAkB;EACzD,IAAI,aAAa;EAEjB,IAAI,MAAM,CAAE;AACZ,SAAO,YAAY;GACjB,MAAM,MAAM,KAAK,OAAO,KAAK,QAAQ,KAAK,SAAS,OAAO,EACxD,WAAW,SACZ,EAAC;GACF,aAAa,CAAC,eAAe,QAAS,EAAC,SAAS,IAAI,OAAO;AAC3D,OAAI,YACF,MAAMC,wBAAM,KAAK,eAAe;EAEnC;AACD,SAAO;CACR;CAOD,MAAc,aACZF,OACAC,UAMA;EACA,MAAM,MAAM,MAAM,KAAK,YAAY,OAAO,SAAS;AACnD,MAAI,IAAI,WAAW,aAAa;GAC9B,MAAM,WAAW,MAAM,KAAK,OAAO,KAAK,QAAQ,SAAS,KAAK,UAAU,EACtE,OAAO,OACR,EAAC;GACF,MAAM,cAAc,SAAS,KAAK,OAAO,CAAC,QAAQ,IAAI,WAAW,MAAM;AACvE,OAAI,CAAC,KAAK,QACR,QAAO;GAET,MAAM,SAAS,YAAY,QAAQ,CAAC,QAAQ,IAAI,QAAQ;AACxD,OAAI,OAAO,MAAM,CAAC,SAAS,KAAK,SAAS,OAAO,EAAE;IAChD,MAAM,eAAe,OAClB,IAAI,CAAC,SAAS,KAAK,SAAS,UAAU,KAAK,KAAK,MAAM,CACtD,KAAK,KAAK;AACb,WAAO;KACL,cAAc;MACZ,QAAQ;MACR;MACA;KACD;KACD,KAAK;KACL;KACA;IACD;GACF;EACF,WAAU,IAAI,WAAW,mBAAmB;AAC3C,OAAI,CAAC,KAAK,QACR,QAAO,IAAI,iBAAiB,oBAAoB,cAAc,CAAE;GAElE,MAAME,UAAmC,CAAE;GAC3C,IAAI,iBAAiB,oBAAoB,WAAW,QAElD,CAACC,SAAc;IACb,MAAM,eAAe,KAAK;IAC1B,MAAM,OAAO,KAAK,MAAM,aAAa,UAAU;IAC/C,QAAQ,KAAK;KACX,MAAM,aAAa;KACnB,WAAW;KACX,YAAY,KAAK;KACjB,KAAK;KACL;KACA;IACD,EAAC;GACH,EACF;AACD,UAAO;EACR;EACD,MAAM,UAAU,KAAK,UAAU,KAAK,MAAM,EAAE;AAC5C,QAAM,IAAI,MACR,CAAC,sBAAsB,EAAE,IAAI,OAAO,qBAAqB,EAAE,SAAS;CAEvE;AACF;AAED,SAAgB,4BACdC,MACgB;AAChB,QAAO;EACL,MAAM;EACN,UAAU;GACR,MAAM,KAAK;GACX,aAAa,KAAK;GAClB,iEAA+B,KAAK,OAAO,wDAC1B,KAAK,OAAO,GACzB,KAAK;EACV;CACF;AACF"}