{"version":3,"file":"retriever.cjs","names":["retriever: BaseRetrieverInterface","input: Omit<DynamicStructuredToolInput, \"func\" | \"schema\">","runManager?: CallbackManagerForToolRun","formatDocumentsAsString","z","DynamicStructuredTool"],"sources":["../../src/tools/retriever.ts"],"sourcesContent":["import type { BaseRetrieverInterface } from \"@langchain/core/retrievers\";\nimport { z } from \"zod/v3\";\nimport { CallbackManagerForToolRun } from \"@langchain/core/callbacks/manager\";\nimport {\n  DynamicStructuredTool,\n  type DynamicStructuredToolInput,\n} from \"@langchain/core/tools\";\nimport { formatDocumentsAsString } from \"../util/document.js\";\n\nexport function createRetrieverTool(\n  retriever: BaseRetrieverInterface,\n  input: Omit<DynamicStructuredToolInput, \"func\" | \"schema\">\n) {\n  const func = async (\n    { query }: { query: string },\n    runManager?: CallbackManagerForToolRun\n  ) => {\n    const docs = await retriever.invoke(\n      query,\n      runManager?.getChild(\"retriever\")\n    );\n    return formatDocumentsAsString(docs);\n  };\n  const schema = z.object({\n    query: z.string().describe(\"query to look up in retriever\"),\n  });\n  return new DynamicStructuredTool({ ...input, func, schema });\n}\n"],"mappings":";;;;;;;;AASA,SAAgB,oBACdA,WACAC,OACA;CACA,MAAM,OAAO,OACX,EAAE,OAA0B,EAC5BC,eACG;EACH,MAAM,OAAO,MAAM,UAAU,OAC3B,OACA,YAAY,SAAS,YAAY,CAClC;AACD,SAAOC,8CAAwB,KAAK;CACrC;CACD,MAAM,SAASC,SAAE,OAAO,EACtB,OAAOA,SAAE,QAAQ,CAAC,SAAS,gCAAgC,CAC5D,EAAC;AACF,QAAO,IAAIC,6CAAsB;EAAE,GAAG;EAAO;EAAM;CAAQ;AAC5D"}