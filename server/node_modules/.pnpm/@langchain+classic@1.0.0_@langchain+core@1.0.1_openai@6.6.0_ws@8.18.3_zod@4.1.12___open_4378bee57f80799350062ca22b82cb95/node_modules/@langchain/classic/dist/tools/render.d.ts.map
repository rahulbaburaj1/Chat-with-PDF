{"version":3,"file":"render.d.ts","names":["StructuredToolInterface","ToolDefinition","renderTextDescription","renderTextDescriptionAndArgs"],"sources":["../../src/tools/render.d.ts"],"sourcesContent":["import { StructuredToolInterface } from \"@langchain/core/tools\";\nimport { ToolDefinition } from \"@langchain/core/language_models/base\";\n/**\n * Render the tool name and description in plain text.\n *\n * Output will be in the format of:\n * ```\n * search: This tool is used for search\n * calculator: This tool is used for math\n * ```\n * @param tools\n * @returns a string of all tools and their descriptions\n */\nexport declare function renderTextDescription(tools: StructuredToolInterface[] | ToolDefinition[]): string;\n/**\n * Render the tool name, description, and args in plain text.\n * Output will be in the format of:'\n * ```\n * search: This tool is used for search, args: {\"query\": {\"type\": \"string\"}}\n * calculator: This tool is used for math,\n * args: {\"expression\": {\"type\": \"string\"}}\n * ```\n * @param tools\n * @returns a string of all tools, their descriptions and a stringified version of their schemas\n */\nexport declare function renderTextDescriptionAndArgs(tools: StructuredToolInterface[] | ToolDefinition[]): string;\n"],"mappings":";;;;;;;AAaA;;;;AAA+F;AAY/F;;;;AAAsG,iBAZ9EE,qBAAAA,CAY8E,KAAA,EAZjDF,uBAYiD,EAAA,GAZrBC,cAYqB,EAAA,CAAA,EAAA,MAAA;;;;;;;;;;;;iBAA9EE,4BAAAA,QAAoCH,4BAA4BC"}