{"version":3,"file":"multi_retrieval_qa.d.ts","names":["BaseLanguageModelInterface","BaseRetrieverInterface","PromptTemplate","MultiRouteChain","MultiRouteChainInput","BaseChain","RetrievalQAChainInput","MultiRetrievalDefaults","MultiRetrievalQAChain","Omit","retrieverNames","retrieverDescriptions","retrievers","retrieverPrompts","defaults","multiRetrievalChainOpts","retrievalQAChainOpts","Partial"],"sources":["../../../src/chains/router/multi_retrieval_qa.d.ts"],"sourcesContent":["import type { BaseLanguageModelInterface } from \"@langchain/core/language_models/base\";\nimport type { BaseRetrieverInterface } from \"@langchain/core/retrievers\";\nimport { PromptTemplate } from \"@langchain/core/prompts\";\nimport { MultiRouteChain, MultiRouteChainInput } from \"./multi_route.js\";\nimport { BaseChain } from \"../../chains/base.js\";\nimport { RetrievalQAChainInput } from \"../../chains/retrieval_qa.js\";\n/**\n * A type that represents the default values for the MultiRetrievalQAChain\n * class. It includes optional properties for the default retriever,\n * default prompt, and default chain.\n */\nexport type MultiRetrievalDefaults = {\n    defaultRetriever?: BaseRetrieverInterface;\n    defaultPrompt?: PromptTemplate;\n    defaultChain?: BaseChain;\n};\n/**\n * A class that represents a multi-retrieval question answering chain in\n * the LangChain framework. It extends the MultiRouteChain class and\n * provides additional functionality specific to multi-retrieval QA\n * chains.\n * @example\n * ```typescript\n * const multiRetrievalQAChain = MultiRetrievalQAChain.fromLLMAndRetrievers(\n *   new ChatOpenAI({ model: \"gpt-4o-mini\" }),\n *   {\n *     retrieverNames: [\"aqua teen\", \"mst3k\", \"animaniacs\"],\n *     retrieverDescriptions: [\n *       \"Good for answering questions about Aqua Teen Hunger Force theme song\",\n *       \"Good for answering questions about Mystery Science Theater 3000 theme song\",\n *       \"Good for answering questions about Animaniacs theme song\",\n *     ],\n *     retrievers: [\n *       new MemoryVectorStore().asRetriever(3),\n *       new MemoryVectorStore().asRetriever(3),\n *       new MemoryVectorStore().asRetriever(3),\n *     ],\n *     retrievalQAChainOpts: {\n *       returnSourceDocuments: true,\n *     },\n *   },\n * );\n *\n * const result = await multiRetrievalQAChain.call({\n *   input:\n *     \"In the Aqua Teen Hunger Force theme song, who calls himself the mike rula?\",\n * });\n *\n * console.log(result.sourceDocuments, result.text);\n * ```\n */\nexport declare class MultiRetrievalQAChain extends MultiRouteChain {\n    get outputKeys(): string[];\n    /**\n     * @deprecated Use `fromRetrieversAndPrompts` instead\n     */\n    static fromRetrievers(llm: BaseLanguageModelInterface, retrieverNames: string[], retrieverDescriptions: string[], retrievers: BaseRetrieverInterface[], retrieverPrompts?: PromptTemplate[], defaults?: MultiRetrievalDefaults, options?: Omit<MultiRouteChainInput, \"defaultChain\">): MultiRetrievalQAChain;\n    /**\n     * A static method that creates an instance of MultiRetrievalQAChain from\n     * a BaseLanguageModel and a set of retrievers. It takes in optional\n     * parameters for the retriever names, descriptions, prompts, defaults,\n     * and additional options. It is an alternative method to fromRetrievers\n     * and provides more flexibility in configuring the underlying chains.\n     * @param llm A BaseLanguageModel instance.\n     * @param retrieverNames An array of retriever names.\n     * @param retrieverDescriptions An array of retriever descriptions.\n     * @param retrievers An array of BaseRetrieverInterface instances.\n     * @param retrieverPrompts An optional array of PromptTemplate instances for the retrievers.\n     * @param defaults An optional MultiRetrievalDefaults instance.\n     * @param multiRetrievalChainOpts Additional optional parameters for the multi-retrieval chain.\n     * @param retrievalQAChainOpts Additional optional parameters for the retrieval QA chain.\n     * @returns A new instance of MultiRetrievalQAChain.\n     */\n    static fromLLMAndRetrievers(llm: BaseLanguageModelInterface, { retrieverNames, retrieverDescriptions, retrievers, retrieverPrompts, defaults, multiRetrievalChainOpts, retrievalQAChainOpts }: {\n        retrieverNames: string[];\n        retrieverDescriptions: string[];\n        retrievers: BaseRetrieverInterface[];\n        retrieverPrompts?: PromptTemplate[];\n        defaults?: MultiRetrievalDefaults;\n        multiRetrievalChainOpts?: Omit<MultiRouteChainInput, \"defaultChain\">;\n        retrievalQAChainOpts?: Partial<Omit<RetrievalQAChainInput, \"retriever\" | \"combineDocumentsChain\">> & {\n            prompt?: PromptTemplate;\n        };\n    }): MultiRetrievalQAChain;\n    _chainType(): string;\n}\n"],"mappings":";;;;;;;;;;;AAWA;;;AAEoBE,KAFRK,sBAAAA,GAEQL;EAAc,gBACfG,CAAAA,EAFIJ,sBAEJI;EAAS,aAAA,CAAA,EADRH,cACQ;EAqCPM,YAAAA,CAAAA,EArCFH,SAqCuB;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAwB;;;;;;;;;cAA7CG,qBAAAA,SAA8BL,eAAAA;;;;;6BAKpBH,mGAAmGC,6CAA6CC,6BAA6BK,kCAAkCE,KAAKL,wCAAwCI;;;;;;;;;;;;;;;;;mCAiBtPR;;;;;;;;;;;gBAGjBC;uBACOC;eACRK;8BACeE,KAAKL;2BACRa,QAAQR,KAAKH;eACvBJ;;MAEbM"}