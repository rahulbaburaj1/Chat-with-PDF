{"version":3,"file":"in_memory.d.cts","names":["BaseFileStore","InMemoryFileStore","Promise"],"sources":["../../../src/stores/file/in_memory.d.ts"],"sourcesContent":["import { BaseFileStore } from \"./base.js\";\n/**\n * Class that provides an in-memory file storage system. It extends the\n * BaseFileStore class and implements its readFile and writeFile methods.\n * This class is typically used in scenarios where temporary, in-memory\n * file storage is needed, such as during testing or for caching files in\n * memory for quick access.\n */\nexport declare class InMemoryFileStore extends BaseFileStore {\n    lc_namespace: string[];\n    private files;\n    /**\n     * Retrieves the contents of a file given its path. If the file does not\n     * exist, it throws an error.\n     * @param path The path of the file to read.\n     * @returns The contents of the file as a string.\n     */\n    readFile(path: string): Promise<string>;\n    /**\n     * Writes contents to a file at a given path. If the file already exists,\n     * it overwrites the existing contents.\n     * @param path The path of the file to write.\n     * @param contents The contents to write to the file.\n     * @returns Void\n     */\n    writeFile(path: string, contents: string): Promise<void>;\n}\n"],"mappings":";;;;;;AAQA;;;;;AAA4D,cAAvCC,iBAAAA,SAA0BD,aAAAA,CAAa;;;;;;;;;0BAShCE;;;;;;;;6CAQmBA"}