{"version":3,"file":"ensemble.d.cts","names":["BaseRetriever","BaseRetrieverInput","Document","DocumentInterface","CallbackManagerForRetrieverRun","EnsembleRetrieverInput","EnsembleRetriever","Record","Promise"],"sources":["../../src/retrievers/ensemble.d.ts"],"sourcesContent":["import { BaseRetriever, BaseRetrieverInput } from \"@langchain/core/retrievers\";\nimport { Document, DocumentInterface } from \"@langchain/core/documents\";\nimport { CallbackManagerForRetrieverRun } from \"@langchain/core/callbacks/manager\";\nexport interface EnsembleRetrieverInput extends BaseRetrieverInput {\n    /** A list of retrievers to ensemble. */\n    retrievers: BaseRetriever[];\n    /**\n     * A list of weights corresponding to the retrievers. Defaults to equal\n     * weighting for all retrievers.\n     */\n    weights?: number[];\n    /**\n     * A constant added to the rank, controlling the balance between the importance\n     * of high-ranked items and the consideration given to lower-ranked items.\n     * Default is 60.\n     */\n    c?: number;\n}\n/**\n * Ensemble retriever that aggregates and orders the results of\n * multiple retrievers by using weighted Reciprocal Rank Fusion.\n */\nexport declare class EnsembleRetriever extends BaseRetriever {\n    static lc_name(): string;\n    lc_namespace: string[];\n    retrievers: BaseRetriever[];\n    weights: number[];\n    c: number;\n    constructor(args: EnsembleRetrieverInput);\n    _getRelevantDocuments(query: string, runManager?: CallbackManagerForRetrieverRun): Promise<Document<Record<string, any>>[]>;\n    _rankFusion(query: string, runManager?: CallbackManagerForRetrieverRun): Promise<Document<Record<string, any>>[]>;\n    _weightedReciprocalRank(docList: DocumentInterface[][]): Promise<Document<Record<string, any>>[]>;\n    private _uniqueUnion;\n}\n"],"mappings":";;;;;UAGiBK,sBAAAA,SAA+BJ;;EAA/BI,UAAAA,EAEDL,aAFuB,EAAA;EAAA;;;AAA2B;EAmB7CM,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA;EAAiB;;;;;EAOwE,CAAA,CAAA,EAAfJ,MAAAA;;;;;;AAE1DC,cAThBG,iBAAAA,SAA0BN,aAAAA,CASVG;EAAiB,OAAwBI,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAM,YAAfL,EAAAA,MAAAA,EAAAA;EAAQ,UAAhBM,EAN7CR,aAM6CQ,EAAAA;EAAO,OATrBR,EAAAA,MAAAA,EAAAA;EAAa,CAAA,EAAA,MAAA;oBAMtCK;oDACgCD,iCAAiCI,QAAQN,SAASK;0CAC5DH,iCAAiCI,QAAQN,SAASK;mCACzDJ,wBAAwBK,QAAQN,SAASK"}