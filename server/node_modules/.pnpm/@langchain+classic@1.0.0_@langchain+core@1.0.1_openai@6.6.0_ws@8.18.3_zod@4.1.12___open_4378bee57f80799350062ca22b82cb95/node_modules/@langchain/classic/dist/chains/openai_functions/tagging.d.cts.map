{"version":3,"file":"tagging.d.cts","names":["BaseChatModel","BaseFunctionCallOptions","AIMessageChunk","PromptTemplate","InteropZodObject","FunctionParameters","LLMChain","LLMChainInput","TaggingChainOptions","Omit","createTaggingChain","createTaggingChainFromZod"],"sources":["../../../src/chains/openai_functions/tagging.d.ts"],"sourcesContent":["import { BaseChatModel } from \"@langchain/core/language_models/chat_models\";\nimport { BaseFunctionCallOptions } from \"@langchain/core/language_models/base\";\nimport { AIMessageChunk } from \"@langchain/core/messages\";\nimport { PromptTemplate } from \"@langchain/core/prompts\";\nimport { InteropZodObject } from \"@langchain/core/utils/types\";\nimport { FunctionParameters } from \"../../output_parsers/openai_functions.js\";\nimport { LLMChain, LLMChainInput } from \"../llm_chain.js\";\n/**\n * Type representing the options for creating a tagging chain.\n */\nexport type TaggingChainOptions = {\n    prompt?: PromptTemplate;\n} & Omit<LLMChainInput<object>, \"prompt\" | \"llm\">;\n/**\n * Function that creates a tagging chain using the provided schema,\n * LLM, and options. It constructs the LLM with the necessary\n * functions, prompt, output parser, and tags.\n * @param schema The schema defining the structure of function parameters.\n * @param llm LLM to use in the chain. Must support function calling.\n * @param options Options for creating the tagging chain.\n * @returns A new instance of LLMChain configured for tagging.\n *\n * @deprecated\n * Switch to expression language: https://js.langchain.com/docs/expression_language/\n * Will be removed in 0.2.0\n */\nexport declare function createTaggingChain(schema: FunctionParameters, llm: BaseChatModel<BaseFunctionCallOptions>, options?: TaggingChainOptions): LLMChain<object, BaseChatModel<BaseFunctionCallOptions, AIMessageChunk>>;\n/**\n * Function that creates a tagging chain from a Zod schema. It converts\n * the Zod schema to a JSON schema using the zodToJsonSchema function and\n * then calls createTaggingChain with the converted schema.\n * @param schema The Zod schema which extracted data should match.\n * @param llm LLM to use in the chain. Must support function calling.\n * @param options Options for creating the tagging chain.\n * @returns A new instance of LLMChain configured for tagging.\n *\n * @deprecated\n * Switch to expression language: https://js.langchain.com/docs/expression_language/\n * Will be removed in 0.2.0\n */\nexport declare function createTaggingChainFromZod(schema: InteropZodObject, llm: BaseChatModel<BaseFunctionCallOptions>, options?: TaggingChainOptions): LLMChain<object, BaseChatModel<BaseFunctionCallOptions, AIMessageChunk>>;\n"],"mappings":";;;;;;;;;;;;AAUA;AAA+B,KAAnBQ,mBAAAA,GAAmB;EAAA,MAClBL,CAAAA,EAAAA,cAAAA;CAAc,GACvBM,IAAKF,CAAAA,aAAAA,CAAAA,MAAAA,CAAAA,EAAAA,QAAAA,GAAAA,KAAAA,CAAAA;;AAAD;AAcR;;;;;;;;;;AAA4J;AAcpII,iBAdAD,kBAAAA,CAcyB,MAAA,EAdEL,kBAcF,EAAA,GAAA,EAd2BL,aAc3B,CAdyCC,uBAczC,CAAA,EAAA,OAAA,CAAA,EAd6EO,mBAc7E,CAAA,EAdmGF,QAcnG,CAAA,MAAA,EAdoHN,aAcpH,CAdkIC,uBAclI,EAd2JC,cAc3J,CAAA,CAAA;;;;;;;;;;AAAgH;;;;iBAAzIS,yBAAAA,SAAkCP,uBAAuBJ,cAAcC,oCAAoCO,sBAAsBF,iBAAiBN,cAAcC,yBAAyBC"}