{"version":3,"file":"fs.js","names":[],"sources":["../../src/tools/fs.ts"],"sourcesContent":["import { z } from \"zod/v3\";\nimport { StructuredTool, ToolParams } from \"@langchain/core/tools\";\nimport { InferInteropZodOutput } from \"@langchain/core/utils/types\";\nimport { BaseFileStore } from \"../stores/file/base.js\";\n\n/**\n * Interface for parameters required by the ReadFileTool class.\n */\ninterface ReadFileParams extends ToolParams {\n  store: BaseFileStore;\n}\n\nconst readSchema = z.object({\n  file_path: z.string().describe(\"name of file\"),\n});\ntype ReadToolSchema = typeof readSchema;\n\n/**\n * Class for reading files from the disk. Extends the StructuredTool\n * class.\n */\nexport class ReadFileTool extends StructuredTool {\n  static lc_name() {\n    return \"ReadFileTool\";\n  }\n\n  schema = readSchema;\n\n  name = \"read_file\";\n\n  description = \"Read file from disk\";\n\n  store: BaseFileStore;\n\n  constructor({ store }: ReadFileParams) {\n    super(...arguments);\n\n    this.store = store;\n  }\n\n  async _call({ file_path }: InferInteropZodOutput<ReadToolSchema>) {\n    return await this.store.readFile(file_path);\n  }\n}\n\n/**\n * Interface for parameters required by the WriteFileTool class.\n */\ninterface WriteFileParams extends ToolParams {\n  store: BaseFileStore;\n}\n\nconst writeSchema = z.object({\n  file_path: z.string().describe(\"name of file\"),\n  text: z.string().describe(\"text to write to file\"),\n});\ntype WriteToolSchema = typeof writeSchema;\n\n/**\n * Class for writing data to files on the disk. Extends the StructuredTool\n * class.\n */\nexport class WriteFileTool extends StructuredTool {\n  static lc_name() {\n    return \"WriteFileTool\";\n  }\n\n  schema = writeSchema;\n\n  name = \"write_file\";\n\n  description = \"Write file from disk\";\n\n  store: BaseFileStore;\n\n  constructor({ store, ...rest }: WriteFileParams) {\n    super(rest);\n\n    this.store = store;\n  }\n\n  async _call({ file_path, text }: InferInteropZodOutput<WriteToolSchema>) {\n    await this.store.writeFile(file_path, text);\n    return \"File written to successfully.\";\n  }\n}\n"],"mappings":";;;;AAYA,MAAM,aAAa,EAAE,OAAO,EAC1B,WAAW,EAAE,QAAQ,CAAC,SAAS,eAAe,CAC/C,EAAC;;;;;AAOF,IAAa,eAAb,cAAkC,eAAe;CAC/C,OAAO,UAAU;AACf,SAAO;CACR;CAED,SAAS;CAET,OAAO;CAEP,cAAc;CAEd;CAEA,YAAY,EAAE,OAAuB,EAAE;EACrC,MAAM,GAAG,UAAU;EAEnB,KAAK,QAAQ;CACd;CAED,MAAM,MAAM,EAAE,WAAkD,EAAE;AAChE,SAAO,MAAM,KAAK,MAAM,SAAS,UAAU;CAC5C;AACF;AASD,MAAM,cAAc,EAAE,OAAO;CAC3B,WAAW,EAAE,QAAQ,CAAC,SAAS,eAAe;CAC9C,MAAM,EAAE,QAAQ,CAAC,SAAS,wBAAwB;AACnD,EAAC;;;;;AAOF,IAAa,gBAAb,cAAmC,eAAe;CAChD,OAAO,UAAU;AACf,SAAO;CACR;CAED,SAAS;CAET,OAAO;CAEP,cAAc;CAEd;CAEA,YAAY,EAAE,MAAO,GAAG,MAAuB,EAAE;EAC/C,MAAM,KAAK;EAEX,KAAK,QAAQ;CACd;CAED,MAAM,MAAM,EAAE,WAAW,MAA8C,EAAE;EACvE,MAAM,KAAK,MAAM,UAAU,WAAW,KAAK;AAC3C,SAAO;CACR;AACF"}