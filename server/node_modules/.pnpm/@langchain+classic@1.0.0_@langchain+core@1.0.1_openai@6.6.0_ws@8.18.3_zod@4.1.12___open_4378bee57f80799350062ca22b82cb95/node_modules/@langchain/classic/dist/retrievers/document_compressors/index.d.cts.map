{"version":3,"file":"index.d.cts","names":["DocumentInterface","BaseDocumentTransformer","Callbacks","BaseDocumentCompressor","Promise","DocumentCompressorPipeline"],"sources":["../../../src/retrievers/document_compressors/index.d.ts"],"sourcesContent":["import type { DocumentInterface } from \"@langchain/core/documents\";\nimport { BaseDocumentTransformer } from \"@langchain/core/documents\";\nimport { Callbacks } from \"@langchain/core/callbacks/manager\";\n/**\n * Base Document Compression class. All compressors should extend this class.\n */\nexport declare abstract class BaseDocumentCompressor {\n    /**\n     * Abstract method that must be implemented by any class that extends\n     * `BaseDocumentCompressor`. This method takes an array of `Document`\n     * objects and a query string as parameters and returns a Promise that\n     * resolves with an array of compressed `Document` objects.\n     * @param documents An array of `Document` objects to be compressed.\n     * @param query A query string.\n     * @returns A Promise that resolves with an array of compressed `Document` objects.\n     */\n    abstract compressDocuments(documents: DocumentInterface[], query: string, callbacks?: Callbacks): Promise<DocumentInterface[]>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isBaseDocumentCompressor(x: any): x is BaseDocumentCompressor;\n}\n/**\n * Document compressor that uses a pipeline of Transformers.\n * @example\n * ```typescript\n * const compressorPipeline = new DocumentCompressorPipeline({\n *   transformers: [\n *     new RecursiveCharacterTextSplitter({\n *       chunkSize: 200,\n *       chunkOverlap: 0,\n *     }),\n *     new EmbeddingsFilter({\n *       embeddings: new OpenAIEmbeddings(),\n *       similarityThreshold: 0.8,\n *       k: 5,\n *     }),\n *   ],\n * });\n * const retriever = new ContextualCompressionRetriever({\n *   baseCompressor: compressorPipeline,\n *   baseRetriever: new TavilySearchAPIRetriever({\n *     includeRawContent: true,\n *   }),\n * });\n * const retrievedDocs = await retriever.invoke(\n *   \"What did the speaker say about Justice Breyer in the 2022 State of the Union?\",\n * );\n * console.log({ retrievedDocs });\n * ```\n */\nexport declare class DocumentCompressorPipeline extends BaseDocumentCompressor {\n    transformers: (BaseDocumentTransformer | BaseDocumentCompressor)[];\n    constructor(fields: {\n        transformers: (BaseDocumentTransformer | BaseDocumentCompressor)[];\n    });\n    compressDocuments(documents: DocumentInterface[], query: string, callbacks?: Callbacks): Promise<DocumentInterface[]>;\n}\n"],"mappings":";;;;;;AAMA;;AAU0CA,uBAVZG,sBAAAA,CAUYH;EAAiB;;;;AAEa;AA+BxE;;;;EACmE,SAE5CC,iBAAAA,CAAAA,SAAAA,EApCmBD,iBAoCnBC,EAAAA,EAAAA,KAAAA,EAAAA,MAAAA,EAAAA,SAAAA,CAAAA,EApCmEC,SAoCnED,CAAAA,EApC+EG,OAoC/EH,CApCuFD,iBAoCvFC,EAAAA,CAAAA;EAAuB;EAAyB,OAEtCD,wBAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,EAAAA,CAAAA,IApCiBG,sBAoCjBH;;;;;AAL6C;;;;;;;;;;;;;;;;;;;;;;;;;;cAAzDK,0BAAAA,SAAmCF,sBAAAA;iBACrCF,0BAA0BE;;mBAEtBF,0BAA0BE;;+BAEhBH,gDAAgDE,YAAYE,QAAQJ"}