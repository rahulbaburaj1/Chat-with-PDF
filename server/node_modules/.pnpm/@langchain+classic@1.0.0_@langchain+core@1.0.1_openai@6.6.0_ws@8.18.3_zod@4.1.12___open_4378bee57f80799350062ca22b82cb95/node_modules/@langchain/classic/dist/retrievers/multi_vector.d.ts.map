{"version":3,"file":"multi_vector.d.ts","names":["BaseRetriever","BaseRetrieverInput","VectorStoreInterface","Document","BaseStore","BaseStoreInterface","MultiVectorRetrieverInput","Uint8Array","MultiVectorRetriever","Promise"],"sources":["../../src/retrievers/multi_vector.d.ts"],"sourcesContent":["import { BaseRetriever, type BaseRetrieverInput } from \"@langchain/core/retrievers\";\nimport type { VectorStoreInterface } from \"@langchain/core/vectorstores\";\nimport { Document } from \"@langchain/core/documents\";\nimport { BaseStore, type BaseStoreInterface } from \"@langchain/core/stores\";\n/**\n * Arguments for the MultiVectorRetriever class.\n */\nexport interface MultiVectorRetrieverInput extends BaseRetrieverInput {\n    vectorstore: VectorStoreInterface;\n    /** @deprecated Prefer `byteStore`. */\n    docstore?: BaseStoreInterface<string, Document>;\n    byteStore?: BaseStore<string, Uint8Array>;\n    idKey?: string;\n    childK?: number;\n    parentK?: number;\n}\n/**\n * A retriever that retrieves documents from a vector store and a document\n * store. It uses the vector store to find relevant documents based on a\n * query, and then retrieves the full documents from the document store.\n * @example\n * ```typescript\n * const retriever = new MultiVectorRetriever({\n *   vectorstore: new FaissStore(),\n *   byteStore: new InMemoryStore<Unit8Array>(),\n *   idKey: \"doc_id\",\n *   childK: 20,\n *   parentK: 5,\n * });\n *\n * const retrieverResult = await retriever.invoke(\"justice breyer\");\n * console.log(retrieverResult[0].pageContent.length);\n * ```\n */\nexport declare class MultiVectorRetriever extends BaseRetriever {\n    static lc_name(): string;\n    lc_namespace: string[];\n    vectorstore: VectorStoreInterface;\n    docstore: BaseStoreInterface<string, Document>;\n    protected idKey: string;\n    protected childK?: number;\n    protected parentK?: number;\n    constructor(args: MultiVectorRetrieverInput);\n    _getRelevantDocuments(query: string): Promise<Document[]>;\n}\n"],"mappings":";;;;;;;;;AAOA;AAA0C,UAAzBM,yBAAAA,SAAkCL,kBAAT,CAAA;EAAA,WACzBC,EAAAA,oBAAAA;EAAoB;EAEa,QAAnCG,CAAAA,EAAAA,kBAAAA,CAAAA,MAAAA,EAA2BF,QAA3BE,CAAAA;EAAkB,SACCE,CAAAA,EAAlBH,SAAkBG,CAAAA,MAAAA,EAAAA,UAAAA,CAAAA;EAAU,KAA5BH,CAAAA,EAAAA,MAAAA;EAAS,MAJ0BH,CAAAA,EAAAA,MAAAA;EAAkB,OAAA,CAAA,EAAA,MAAA;AA2BrE;;;;;;;;;AAA+D;;;;;;;;;;cAA1CO,oBAAAA,SAA6BR,aAAAA;;;eAGjCE;YACHG,2BAA2BF;;;;oBAInBG;wCACoBG,QAAQN"}