{"version":3,"file":"load.js","names":["llm: BaseLanguageModelInterface","params: SummarizationChainParams"],"sources":["../../../src/chains/summarization/load.ts"],"sourcesContent":["import type { BaseLanguageModelInterface } from \"@langchain/core/language_models/base\";\nimport { BasePromptTemplate } from \"@langchain/core/prompts\";\nimport { LLMChain } from \"../llm_chain.js\";\nimport {\n  StuffDocumentsChain,\n  MapReduceDocumentsChain,\n  RefineDocumentsChain,\n  MapReduceDocumentsChainInput,\n} from \"../combine_docs_chain.js\";\nimport { DEFAULT_PROMPT } from \"./stuff_prompts.js\";\nimport { REFINE_PROMPT } from \"./refine_prompts.js\";\n\n/**\n * Type for the base parameters that can be used to configure a\n * summarization chain.\n */\ntype BaseParams = {\n  verbose?: boolean;\n};\n\n/** @interface */\nexport type SummarizationChainParams = BaseParams &\n  (\n    | {\n        type?: \"stuff\";\n        prompt?: BasePromptTemplate;\n      }\n    | ({\n        type?: \"map_reduce\";\n        combineMapPrompt?: BasePromptTemplate;\n        combinePrompt?: BasePromptTemplate;\n        combineLLM?: BaseLanguageModelInterface;\n      } & Pick<MapReduceDocumentsChainInput, \"returnIntermediateSteps\">)\n    | {\n        type?: \"refine\";\n        refinePrompt?: BasePromptTemplate;\n        refineLLM?: BaseLanguageModelInterface;\n        questionPrompt?: BasePromptTemplate;\n      }\n  );\n\nexport const loadSummarizationChain = (\n  llm: BaseLanguageModelInterface,\n  params: SummarizationChainParams = { type: \"map_reduce\" }\n) => {\n  const { verbose } = params;\n  if (params.type === \"stuff\") {\n    const { prompt = DEFAULT_PROMPT } = params;\n    const llmChain = new LLMChain({ prompt, llm, verbose });\n    const chain = new StuffDocumentsChain({\n      llmChain,\n      documentVariableName: \"text\",\n      verbose,\n    });\n    return chain;\n  }\n  if (params.type === \"map_reduce\") {\n    const {\n      combineMapPrompt = DEFAULT_PROMPT,\n      combinePrompt = DEFAULT_PROMPT,\n      combineLLM,\n      returnIntermediateSteps,\n    } = params;\n    const llmChain = new LLMChain({ prompt: combineMapPrompt, llm, verbose });\n    const combineLLMChain = new LLMChain({\n      prompt: combinePrompt,\n      llm: combineLLM ?? llm,\n      verbose,\n    });\n    const combineDocumentChain = new StuffDocumentsChain({\n      llmChain: combineLLMChain,\n      documentVariableName: \"text\",\n      verbose,\n    });\n    const chain = new MapReduceDocumentsChain({\n      llmChain,\n      combineDocumentChain,\n      documentVariableName: \"text\",\n      returnIntermediateSteps,\n      verbose,\n    });\n    return chain;\n  }\n  if (params.type === \"refine\") {\n    const {\n      refinePrompt = REFINE_PROMPT,\n      refineLLM,\n      questionPrompt = DEFAULT_PROMPT,\n    } = params;\n    const llmChain = new LLMChain({ prompt: questionPrompt, llm, verbose });\n    const refineLLMChain = new LLMChain({\n      prompt: refinePrompt,\n      llm: refineLLM ?? llm,\n      verbose,\n    });\n    const chain = new RefineDocumentsChain({\n      llmChain,\n      refineLLMChain,\n      documentVariableName: \"text\",\n      verbose,\n    });\n    return chain;\n  }\n  throw new Error(`Invalid _type: ${params.type}`);\n};\n"],"mappings":";;;;;;AAyCA,MAAa,yBAAyB,CACpCA,KACAC,SAAmC,EAAE,MAAM,aAAc,MACtD;CACH,MAAM,EAAE,SAAS,GAAG;AACpB,KAAI,OAAO,SAAS,SAAS;EAC3B,MAAM,EAAE,SAAS,gBAAgB,GAAG;EACpC,MAAM,WAAW,IAAI,SAAS;GAAE;GAAQ;GAAK;EAAS;EACtD,MAAM,QAAQ,IAAI,oBAAoB;GACpC;GACA,sBAAsB;GACtB;EACD;AACD,SAAO;CACR;AACD,KAAI,OAAO,SAAS,cAAc;EAChC,MAAM,EACJ,mBAAmB,gBACnB,gBAAgB,gBAChB,YACA,yBACD,GAAG;EACJ,MAAM,WAAW,IAAI,SAAS;GAAE,QAAQ;GAAkB;GAAK;EAAS;EACxE,MAAM,kBAAkB,IAAI,SAAS;GACnC,QAAQ;GACR,KAAK,cAAc;GACnB;EACD;EACD,MAAM,uBAAuB,IAAI,oBAAoB;GACnD,UAAU;GACV,sBAAsB;GACtB;EACD;EACD,MAAM,QAAQ,IAAI,wBAAwB;GACxC;GACA;GACA,sBAAsB;GACtB;GACA;EACD;AACD,SAAO;CACR;AACD,KAAI,OAAO,SAAS,UAAU;EAC5B,MAAM,EACJ,eAAe,eACf,WACA,iBAAiB,gBAClB,GAAG;EACJ,MAAM,WAAW,IAAI,SAAS;GAAE,QAAQ;GAAgB;GAAK;EAAS;EACtE,MAAM,iBAAiB,IAAI,SAAS;GAClC,QAAQ;GACR,KAAK,aAAa;GAClB;EACD;EACD,MAAM,QAAQ,IAAI,qBAAqB;GACrC;GACA;GACA,sBAAsB;GACtB;EACD;AACD,SAAO;CACR;AACD,OAAM,IAAI,MAAM,CAAC,eAAe,EAAE,OAAO,MAAM;AAChD"}