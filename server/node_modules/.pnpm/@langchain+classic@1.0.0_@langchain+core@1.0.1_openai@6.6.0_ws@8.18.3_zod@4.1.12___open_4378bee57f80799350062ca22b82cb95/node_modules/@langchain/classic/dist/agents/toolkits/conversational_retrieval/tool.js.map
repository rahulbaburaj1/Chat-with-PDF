{"version":3,"file":"tool.js","names":["retriever: BaseRetrieverInterface","input: Omit<DynamicStructuredToolInput, \"func\" | \"schema\">","runManager?: CallbackManagerForToolRun","input"],"sources":["../../../../src/agents/toolkits/conversational_retrieval/tool.ts"],"sourcesContent":["import type { BaseRetrieverInterface } from \"@langchain/core/retrievers\";\nimport { z } from \"zod\";\nimport { CallbackManagerForToolRun } from \"@langchain/core/callbacks/manager\";\nimport {\n  DynamicStructuredTool,\n  DynamicStructuredToolInput,\n} from \"@langchain/core/tools\";\nimport { formatDocumentsAsString } from \"../../../util/document.js\";\n\nexport function createRetrieverTool(\n  retriever: BaseRetrieverInterface,\n  input: Omit<DynamicStructuredToolInput, \"func\" | \"schema\">\n) {\n  const func = async (\n    { input }: { input: string },\n    runManager?: CallbackManagerForToolRun\n  ) => {\n    const docs = await retriever.invoke(\n      input,\n      runManager?.getChild(\"retriever\")\n    );\n    return formatDocumentsAsString(docs);\n  };\n  const schema = z.object({\n    input: z\n      .string()\n      .describe(\"Natural language query used as input to the retriever\"),\n  });\n  return new DynamicStructuredTool({ ...input, func, schema });\n}\n"],"mappings":";;;;;AASA,SAAgB,oBACdA,WACAC,OACA;CACA,MAAM,OAAO,OACX,EAAE,gBAA0B,EAC5BC,eACG;EACH,MAAM,OAAO,MAAM,UAAU,OAC3BC,SACA,YAAY,SAAS,YAAY,CAClC;AACD,SAAO,wBAAwB,KAAK;CACrC;CACD,MAAM,SAAS,EAAE,OAAO,EACtB,OAAO,EACJ,QAAQ,CACR,SAAS,wDAAwD,CACrE,EAAC;AACF,QAAO,IAAI,sBAAsB;EAAE,GAAG;EAAO;EAAM;CAAQ;AAC5D"}