{"version":3,"file":"prompt_template.d.cts","names":["Document","BasePromptTemplate","formatDocument","Record","_________langchain_core_dist_prompt_values0","BasePromptValueInterface","Promise"],"sources":["../../src/schema/prompt_template.d.ts"],"sourcesContent":["import { Document } from \"@langchain/core/documents\";\nimport { BasePromptTemplate } from \"@langchain/core/prompts\";\n/**\n * Formats a document using a given prompt template.\n *\n * @async\n * @param {Document} document - The document to format.\n * @param {BasePromptTemplate} prompt - The prompt template to use for formatting.\n * @returns {Promise<string>} A Promise that resolves to the formatted document as a string.\n * @throws {Error} If the document is missing required metadata variables specified in the prompt template.\n */\nexport declare const formatDocument: (document: Document<Record<string, any>>, prompt: BasePromptTemplate<any, import(\"../../../langchain-core/dist/prompt_values\").BasePromptValueInterface, any>) => Promise<string>;\n"],"mappings":";;;;;;;;;AAWA;;;;;;AAAuMM,cAAlLJ,cAAkLI,EAAAA,CAAAA,QAAAA,EAAvJN,QAAuJM,CAA9IH,MAA8IG,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA,MAAAA,EAAhHL,kBAAgHK,CAAAA,GAAAA,EAA/I,wBAAA,EAA+IA,GAAAA,CAAAA,EAAAA,GAAAA,OAAAA,CAAAA,MAAAA,CAAAA"}