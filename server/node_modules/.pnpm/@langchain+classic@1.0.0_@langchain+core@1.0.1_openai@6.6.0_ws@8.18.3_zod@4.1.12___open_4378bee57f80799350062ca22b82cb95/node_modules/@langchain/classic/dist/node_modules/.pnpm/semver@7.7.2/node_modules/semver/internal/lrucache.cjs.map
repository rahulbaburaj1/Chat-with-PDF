{"version":3,"file":"lrucache.cjs","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/semver@7.7.2/node_modules/semver/internal/lrucache.js"],"sourcesContent":["'use strict'\n\nclass LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n"],"x_google_ignoreList":[0],"mappings":";;;;;;;CAEA,IAAM,WAAN,MAAe;EACb,cAAe;GACb,KAAK,MAAM;GACX,KAAK,sBAAM,IAAI;EAChB;EAED,IAAK,KAAK;GACR,MAAM,QAAQ,KAAK,IAAI,IAAI,IAAI;AAC/B,OAAI,UAAU,OACZ,QAAO;QACF;IAEL,KAAK,IAAI,OAAO,IAAI;IACpB,KAAK,IAAI,IAAI,KAAK,MAAM;AACxB,WAAO;GACR;EACF;EAED,OAAQ,KAAK;AACX,UAAO,KAAK,IAAI,OAAO,IAAI;EAC5B;EAED,IAAK,KAAK,OAAO;GACf,MAAM,UAAU,KAAK,OAAO,IAAI;AAEhC,OAAI,CAAC,WAAW,UAAU,QAAW;AAEnC,QAAI,KAAK,IAAI,QAAQ,KAAK,KAAK;KAC7B,MAAM,WAAW,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC;KACxC,KAAK,OAAO,SAAS;IACtB;IAED,KAAK,IAAI,IAAI,KAAK,MAAM;GACzB;AAED,UAAO;EACR;CACF;CAED,OAAO,UAAU"}