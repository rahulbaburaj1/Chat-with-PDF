{"version":3,"file":"entity_memory.d.cts","names":["BaseLanguageModelInterface","PromptTemplate","InputValues","MemoryVariables","OutputValues","BaseEntityStore","BaseChatMemory","BaseChatMemoryInput","EntityMemoryInput","EntityMemory","Promise"],"sources":["../../src/memory/entity_memory.d.ts"],"sourcesContent":["import type { BaseLanguageModelInterface } from \"@langchain/core/language_models/base\";\nimport { PromptTemplate } from \"@langchain/core/prompts\";\nimport { InputValues, MemoryVariables, OutputValues } from \"@langchain/core/memory\";\nimport { BaseEntityStore } from \"./stores/entity/base.js\";\nimport { BaseChatMemory, BaseChatMemoryInput } from \"./chat_memory.js\";\n/**\n * Interface for the input parameters required by the EntityMemory class.\n */\nexport interface EntityMemoryInput extends BaseChatMemoryInput {\n    llm: BaseLanguageModelInterface;\n    humanPrefix?: string;\n    aiPrefix?: string;\n    entityExtractionPrompt?: PromptTemplate;\n    entitySummarizationPrompt?: PromptTemplate;\n    entityCache?: string[];\n    k?: number;\n    chatHistoryKey?: string;\n    entitiesKey?: string;\n    entityStore?: BaseEntityStore;\n}\n// Entity extractor & summarizer to memory.\n/**\n * Class for managing entity extraction and summarization to memory in\n * chatbot applications. Extends the BaseChatMemory class and implements\n * the EntityMemoryInput interface.\n * @example\n * ```typescript\n * const memory = new EntityMemory({\n *   llm: new ChatOpenAI({ model: \"gpt-4o-mini\", temperature: 0 }),\n *   chatHistoryKey: \"history\",\n *   entitiesKey: \"entities\",\n * });\n * const model = new ChatOpenAI({ model: \"gpt-4o-mini\", temperature: 0.9 });\n * const chain = new LLMChain({\n *   llm: model,\n *   prompt: ENTITY_MEMORY_CONVERSATION_TEMPLATE,\n *   memory,\n * });\n *\n * const res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\n * console.log({\n *   res1,\n *   memory: await memory.loadMemoryVariables({ input: \"Who is Jim?\" }),\n * });\n *\n * const res2 = await chain.call({\n *   input: \"I work in construction. What about you?\",\n * });\n * console.log({\n *   res2,\n *   memory: await memory.loadMemoryVariables({ input: \"Who is Jim?\" }),\n * });\n *\n * ```\n */\nexport declare class EntityMemory extends BaseChatMemory implements EntityMemoryInput {\n    private entityExtractionChain;\n    private entitySummarizationChain;\n    entityStore: BaseEntityStore;\n    entityCache: string[];\n    k: number;\n    chatHistoryKey: string;\n    llm: BaseLanguageModelInterface;\n    entitiesKey: string;\n    humanPrefix?: string;\n    aiPrefix?: string;\n    constructor(fields: EntityMemoryInput);\n    get memoryKeys(): string[];\n    // Will always return list of memory variables.\n    get memoryVariables(): string[];\n    // Return history buffer.\n    /**\n     * Method to load memory variables and perform entity extraction.\n     * @param inputs Input values for the method.\n     * @returns Promise resolving to an object containing memory variables.\n     */\n    loadMemoryVariables(inputs: InputValues): Promise<MemoryVariables>;\n    // Save context from this conversation to buffer.\n    /**\n     * Method to save the context from a conversation to a buffer and perform\n     * entity summarization.\n     * @param inputs Input values for the method.\n     * @param outputs Output values from the method.\n     * @returns Promise resolving to void.\n     */\n    saveContext(inputs: InputValues, outputs: OutputValues): Promise<void>;\n    // Clear memory contents.\n    /**\n     * Method to clear the memory contents.\n     * @returns Promise resolving to void.\n     */\n    clear(): Promise<void>;\n}\n"],"mappings":";;;;;;;;;;AAQA;AAAkC,UAAjBQ,iBAAAA,SAA0BD,mBAAT,CAAA;EAAA,GACzBP,EAAAA,0BAAAA;EAA0B,WAGNC,CAAAA,EAAAA,MAAAA;EAAc,QACXA,CAAAA,EAAAA,MAAAA;EAAc,sBAK5BI,CAAAA,EANWJ,cAMXI;EAAe,yBAVUE,CAAAA,EAKXN,cALWM;EAAmB,WAAA,CAAA,EAAA,MAAA,EAAA;EA+CzCE,CAAAA,CAAAA,EAAAA,MAAAA;EAAY,cAAA,CAAA,EAAA,MAAA;EAAA,WAGhBJ,CAAAA,EAAAA,MAAAA;EAAe,WAIvBL,CAAAA,EA5CSK,eA4CTL;;;;;;;;;;;AAP4E;;;;;;;;;;;;;;;;;;;;;;;;;;cAAhES,YAAAA,SAAqBH,cAAAA,YAA0BE;;;eAGnDH;;;;OAIRL;;;;sBAIeQ;;;;;;;;;;8BAUQN,cAAcQ,QAAQP;;;;;;;;;sBAS9BD,sBAAsBE,eAAeM;;;;;;WAMhDA"}