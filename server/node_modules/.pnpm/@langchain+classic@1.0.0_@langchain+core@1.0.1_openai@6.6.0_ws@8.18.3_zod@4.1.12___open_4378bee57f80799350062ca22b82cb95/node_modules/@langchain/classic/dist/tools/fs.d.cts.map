{"version":3,"file":"fs.d.cts","names":["z","StructuredTool","ToolParams","InferInteropZodOutput","BaseFileStore","ReadFileParams","readSchema","ZodString","ZodTypeAny","ZodObject","ReadToolSchema","ReadFileTool","store","file_path","Promise","WriteFileParams","writeSchema","WriteToolSchema","WriteFileTool","text"],"sources":["../../src/tools/fs.d.ts"],"sourcesContent":["import { z } from \"zod/v3\";\nimport { StructuredTool, ToolParams } from \"@langchain/core/tools\";\nimport { InferInteropZodOutput } from \"@langchain/core/utils/types\";\nimport { BaseFileStore } from \"../stores/file/base.js\";\n/**\n * Interface for parameters required by the ReadFileTool class.\n */\ninterface ReadFileParams extends ToolParams {\n    store: BaseFileStore;\n}\ndeclare const readSchema: z.ZodObject<{\n    file_path: z.ZodString;\n}, \"strip\", z.ZodTypeAny, {\n    file_path: string;\n}, {\n    file_path: string;\n}>;\ntype ReadToolSchema = typeof readSchema;\n/**\n * Class for reading files from the disk. Extends the StructuredTool\n * class.\n */\nexport declare class ReadFileTool extends StructuredTool {\n    static lc_name(): string;\n    schema: z.ZodObject<{\n        file_path: z.ZodString;\n    }, \"strip\", z.ZodTypeAny, {\n        file_path: string;\n    }, {\n        file_path: string;\n    }>;\n    name: string;\n    description: string;\n    store: BaseFileStore;\n    constructor({ store }: ReadFileParams);\n    _call({ file_path }: InferInteropZodOutput<ReadToolSchema>): Promise<string>;\n}\n/**\n * Interface for parameters required by the WriteFileTool class.\n */\ninterface WriteFileParams extends ToolParams {\n    store: BaseFileStore;\n}\ndeclare const writeSchema: z.ZodObject<{\n    file_path: z.ZodString;\n    text: z.ZodString;\n}, \"strip\", z.ZodTypeAny, {\n    file_path: string;\n    text: string;\n}, {\n    file_path: string;\n    text: string;\n}>;\ntype WriteToolSchema = typeof writeSchema;\n/**\n * Class for writing data to files on the disk. Extends the StructuredTool\n * class.\n */\nexport declare class WriteFileTool extends StructuredTool {\n    static lc_name(): string;\n    schema: z.ZodObject<{\n        file_path: z.ZodString;\n        text: z.ZodString;\n    }, \"strip\", z.ZodTypeAny, {\n        file_path: string;\n        text: string;\n    }, {\n        file_path: string;\n        text: string;\n    }>;\n    name: string;\n    description: string;\n    store: BaseFileStore;\n    constructor({ store, ...rest }: WriteFileParams);\n    _call({ file_path, text }: InferInteropZodOutput<WriteToolSchema>): Promise<string>;\n}\nexport {};\n"],"mappings":";;;;;;;;;AAGuD;UAI7CK,cAAAA,SAAuBH,UAAT,CAAA;EAAA,KACbE,EAAAA,aAAAA;;AADgC,cAG7BE,UAH6B,EAGjBN,CAAAA,CAAES,SAHe,CAAA;EAG7BH,SAAAA,EACCN,CAAAA,CAAEO,SAKf;CAAA,EAAA,OAAA,EAJUP,CAAAA,CAAEQ,UAIZ,EAAA;EAAA,SALeD,EAAAA,MAAAA;CAAS,EAAA;EACF,SAFIE,EAAAA,MAAAA;AAAS,CAAA,CAAA;AAAA,KAOhCC,cAAAA,GAAc,OAAUJ,UAAAA;AAK7B;;;;AAEYN,cAFSW,YAAAA,SAAqBV,cAAAA,CAE5BQ;EAAS,OASZL,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAa,MACNQ,EAVNZ,CAAAA,CAAES,SAUIG,CAAAA;IAASP,SAAAA,EATRL,CAAAA,CAAEO,SASMF;EAAc,CAAA,EAC7BQ,OAAAA,EATIb,CAAAA,CAAEQ,UASNK,EAAAA;IAAmCH,SAAAA,EAAAA,MAAAA;EAAc,CAAA,EAApCP;IAAwCW,SAAAA,EAAAA,MAAAA;EAAO,CAAA,CAAA;EAbhB,IAAA,EAAA,MAAA;EAkB9CC,WAAAA,EAAAA,MAAe;EAAA,KAAA,EAPdX,aAOc;EAAA,WACdA,CAAAA;IAAAA;EAAAA,CAAAA,EAPgBC,cAOhBD;EAAa,KADUF,CAAAA;IAAAA;EAAAA,CAAAA,EALTC,qBAKSD,CALaQ,cAKbR,CAAAA,CAAAA,EAL+BY,OAK/BZ,CAAAA,MAAAA,CAAAA;AAAU;AAAA;;;UAAlCa,eAAAA,SAAwBb,UAKtBK,CAAAA;EAAS,KACPC,EALHJ,aAKGI;;AAHwB,cAAxBQ,WAAwB,EAAXhB,CAAAA,CAAES,SAAS,CAAA;EAUjCQ,SAAAA,EATUjB,CAAAA,CAAEO,SASG;EAKCW,IAAAA,EAbXlB,CAAAA,CAAEO,SAasB;CAAA,EAAA,OAAA,EAZtBP,CAAAA,CAAEQ,UAYoB,EAAA;EAAA,SAGbD,EAAAA,MAAAA;EAAS,IAChBP,EAAEO,MAAAA;CAAS,EAAA;EACG,SAHdE,EAAAA,MAAAA;EAAS,IAYZL,EAAAA,MAAAA;CAAa,CAAA;KAnBnBa,eAAAA,GAoB+BF,OApBNC,WAoBMD;;;;;AACoCD,cAhBnDI,aAAAA,SAAsBjB,cAAAA,CAgB6Ba;EAAO,OAhBpCb,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAc,MAAA,EAE7CD,CAAAA,CAAES,SAF2C,CAAA;eAGtCT,CAAAA,CAAEO;UACPP,CAAAA,CAAEO;cACAP,CAAAA,CAAEQ;;;;;;;;;SASPJ;;;;KACyBW;;;;KACLZ,sBAAsBc,mBAAmBH"}