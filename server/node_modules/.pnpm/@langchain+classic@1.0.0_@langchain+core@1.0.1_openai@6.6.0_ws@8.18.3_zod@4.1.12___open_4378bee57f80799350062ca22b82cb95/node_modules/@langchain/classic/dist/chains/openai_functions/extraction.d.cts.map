{"version":3,"file":"extraction.d.cts","names":["BaseChatModel","BaseFunctionCallOptions","InteropZodObject","AIMessageChunk","FunctionParameters","LLMChain","createExtractionChain","createExtractionChainFromZod"],"sources":["../../../src/chains/openai_functions/extraction.d.ts"],"sourcesContent":["import { BaseChatModel } from \"@langchain/core/language_models/chat_models\";\nimport { BaseFunctionCallOptions } from \"@langchain/core/language_models/base\";\nimport { InteropZodObject } from \"@langchain/core/utils/types\";\nimport type { AIMessageChunk } from \"@langchain/core/messages\";\nimport { FunctionParameters } from \"../../output_parsers/openai_functions.js\";\nimport { LLMChain } from \"../llm_chain.js\";\n/**\n * Function that creates an extraction chain using the provided JSON schema.\n * It sets up the necessary components, such as the prompt, output parser, and tags.\n * @param schema JSON schema of the function parameters.\n * @param llm Must be a ChatOpenAI or AnthropicFunctions model that supports function calling.\n * @returns A LLMChain instance configured to return data matching the schema.\n */\nexport declare function createExtractionChain(schema: FunctionParameters, llm: BaseChatModel<BaseFunctionCallOptions>): LLMChain<object, BaseChatModel<BaseFunctionCallOptions, AIMessageChunk>>;\n/**\n * Function that creates an extraction chain from a Zod schema. It\n * converts the Zod schema to a JSON schema using before creating\n * the extraction chain.\n * @param schema The Zod schema which extracted data should match\n * @param llm Must be a ChatOpenAI or AnthropicFunctions model that supports function calling.\n * @returns A LLMChain instance configured to return data matching the schema.\n */\nexport declare function createExtractionChainFromZod(schema: InteropZodObject, llm: BaseChatModel<BaseFunctionCallOptions>): LLMChain<object, BaseChatModel<BaseFunctionCallOptions, AIMessageChunk>>;\n"],"mappings":";;;;;;;;;;;AAaA;;;;;AAAuJC,iBAA/HK,qBAAAA,CAA+HL,MAAAA,EAAjGG,kBAAiGH,EAAAA,GAAAA,EAAxED,aAAwEC,CAA1DA,uBAA0DA,CAAAA,CAAAA,EAA/BI,QAA+BJ,CAAAA,MAAAA,EAAdD,aAAcC,CAAAA,uBAAAA,EAAyBE,cAAzBF,CAAAA,CAAAA;;;;AAAvB;AAShI;;;;AAAoFD,iBAA5DO,4BAAAA,CAA4DP,MAAAA,EAAvBE,gBAAuBF,EAAAA,GAAAA,EAAAA,aAAAA,CAAcC,uBAAdD,CAAAA,CAAAA,EAAyCK,QAAzCL,CAAAA,MAAAA,EAA0DA,aAA1DA,CAAwEC,uBAAxED,EAAiGG,cAAjGH,CAAAA,CAAAA"}