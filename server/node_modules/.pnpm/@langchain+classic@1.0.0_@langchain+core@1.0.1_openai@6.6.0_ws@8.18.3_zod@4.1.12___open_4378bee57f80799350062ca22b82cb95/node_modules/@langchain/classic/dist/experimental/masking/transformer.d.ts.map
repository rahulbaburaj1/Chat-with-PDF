{"version":3,"file":"transformer.d.ts","names":["MaskingTransformer","Map","Promise"],"sources":["../../../src/experimental/masking/transformer.d.ts"],"sourcesContent":["/**\n * Abstract class representing a transformer used for masking and rehydrating messages.\n */\nexport declare abstract class MaskingTransformer {\n    abstract transform(message: string, state?: Map<string, string>): Promise<[string, Map<string, string>]>;\n    abstract rehydrate(message: string, state: Map<string, string>): Promise<string>;\n}\n"],"mappings":";;AAGA;;AACgDC,uBADlBD,kBAAAA,CACkBC;EAAG,SAAoCA,SAAAA,CAAAA,OAAAA,EAAAA,MAAAA,EAAAA,KAAAA,CAAAA,EAAvCA,GAAuCA,CAAAA,MAAAA,EAAAA,MAAAA,CAAAA,CAAAA,EAAjBC,OAAiBD,CAAAA,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA,MAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;EAAG,SAApBC,SAAAA,CAAAA,OAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EACvBD,GADuBC,CAAAA,MAAAA,EAAAA,MAAAA,CAAAA,CAAAA,EACDA,OADCA,CAAAA,MAAAA,CAAAA"}