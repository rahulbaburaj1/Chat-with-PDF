{"version":3,"file":"reduce.d.ts","names":["Document","splitListOfDocs","collapseDocs","Promise"],"sources":["../../../src/chains/combine_documents/reduce.d.ts"],"sourcesContent":["import { Document } from \"@langchain/core/documents\";\n/**\n * Splits a list of documents into sublists based on a maximum token limit.\n *\n * @param {Document[]} docs - The list of documents to be split.\n * @param {Function} lengthFunc - A function that calculates the number of tokens in a list of documents.\n * @param {number} tokenMax - The maximum number of tokens allowed in a sublist.\n *\n * @returns {Document[][]} - A list of document sublists, each sublist contains documents whose total number of tokens does not exceed the tokenMax.\n *\n * @throws {Error} - Throws an error if a single document has more tokens than the tokenMax.\n */\nexport declare function splitListOfDocs(docs: Document[], \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlengthFunc: (...args: any[]) => any, tokenMax: number): Document[][];\n/**\n * Collapses a list of documents into a single document.\n *\n * This function takes a list of documents and a function to combine the content of these documents.\n * It combines the content of the documents using the provided function and merges the metadata of all documents.\n * If a metadata key is present in multiple documents, the values are concatenated with a comma separator.\n *\n * @param {Document[]} docs - The list of documents to be collapsed.\n * @param {Function} combineDocumentFunc - A function that combines the content of a list of documents into a single string. This function should return a promise that resolves to the combined string.\n *\n * @returns {Promise<Document>} - A promise that resolves to a single document with combined content and merged metadata.\n *\n * @throws {Error} - Throws an error if the combineDocumentFunc does not return a promise or if the promise does not resolve to a string.\n */\nexport declare function collapseDocs(docs: Document[], combineDocumentFunc: (docs: Document[]) => Promise<string>): Promise<Document>;\n"],"mappings":";;;;;;AAYA;;;;AAEgE;AAehE;;;;AAAkGG,iBAjB1EF,eAAAA,CAiB0EE,IAAAA,EAjBpDH,QAiBoDG,EAAAA;;UAAkBA,EAAAA,CAAAA,GAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,QAAAA,EAAAA,MAAAA,CAAAA,EAf5DH,QAe4DG,EAAAA,EAAAA;AAAO;;;;;;;;;;;;;;iBAAnGD,YAAAA,OAAmBF,wCAAwCA,eAAeG,kBAAkBA,QAAQH"}