{"version":3,"file":"noop.js","names":["text: string"],"sources":["../../src/output_parsers/noop.ts"],"sourcesContent":["import { BaseOutputParser } from \"@langchain/core/output_parsers\";\n\n/**\n * The NoOpOutputParser class is a type of output parser that does not\n * perform any operations on the output. It extends the BaseOutputParser\n * class and is part of the LangChain's output parsers module. This class\n * is useful in scenarios where the raw output of the Large Language\n * Models (LLMs) is required.\n */\nexport class NoOpOutputParser extends BaseOutputParser<string> {\n  static lc_name() {\n    return \"NoOpOutputParser\";\n  }\n\n  lc_namespace = [\"langchain\", \"output_parsers\", \"default\"];\n\n  lc_serializable = true;\n\n  /**\n   * This method takes a string as input and returns the same string as\n   * output. It does not perform any operations on the input string.\n   * @param text The input string to be parsed.\n   * @returns The same input string without any operations performed on it.\n   */\n  parse(text: string): Promise<string> {\n    return Promise.resolve(text);\n  }\n\n  /**\n   * This method returns an empty string. It does not provide any formatting\n   * instructions.\n   * @returns An empty string, indicating no formatting instructions.\n   */\n  getFormatInstructions(): string {\n    return \"\";\n  }\n}\n"],"mappings":";;;;;;;;;;AASA,IAAa,mBAAb,cAAsC,iBAAyB;CAC7D,OAAO,UAAU;AACf,SAAO;CACR;CAED,eAAe;EAAC;EAAa;EAAkB;CAAU;CAEzD,kBAAkB;;;;;;;CAQlB,MAAMA,MAA+B;AACnC,SAAO,QAAQ,QAAQ,KAAK;CAC7B;;;;;;CAOD,wBAAgC;AAC9B,SAAO;CACR;AACF"}