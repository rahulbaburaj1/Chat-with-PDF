{"version":3,"file":"in_memory.d.ts","names":["Document","BaseStoreInterface","Docstore","InMemoryDocstore","Map","Promise","Record","AsyncGenerator","SynchronousInMemoryDocstore"],"sources":["../../../src/stores/doc/in_memory.d.ts"],"sourcesContent":["import { Document } from \"@langchain/core/documents\";\nimport { BaseStoreInterface } from \"@langchain/core/stores\";\nimport { Docstore } from \"./base.js\";\n/**\n * Class for storing and retrieving documents in memory asynchronously.\n * Extends the Docstore class.\n */\nexport declare class InMemoryDocstore extends Docstore implements BaseStoreInterface<string, Document> {\n    _docs: Map<string, Document>;\n    constructor(docs?: Map<string, Document>);\n    /**\n     * Searches for a document in the store based on its ID.\n     * @param search The ID of the document to search for.\n     * @returns The document with the given ID.\n     */\n    search(search: string): Promise<Document>;\n    /**\n     * Adds new documents to the store.\n     * @param texts An object where the keys are document IDs and the values are the documents themselves.\n     * @returns Void\n     */\n    add(texts: Record<string, Document>): Promise<void>;\n    mget(keys: string[]): Promise<Document[]>;\n    mset(keyValuePairs: [string, Document][]): Promise<void>;\n    mdelete(_keys: string[]): Promise<void>;\n    // eslint-disable-next-line require-yield\n    yieldKeys(_prefix?: string): AsyncGenerator<string>;\n}\n/**\n * Class for storing and retrieving documents in memory synchronously.\n */\nexport declare class SynchronousInMemoryDocstore {\n    _docs: Map<string, Document>;\n    constructor(docs?: Map<string, Document>);\n    /**\n     * Searches for a document in the store based on its ID.\n     * @param search The ID of the document to search for.\n     * @returns The document with the given ID.\n     */\n    search(search: string): Document;\n    /**\n     * Adds new documents to the store.\n     * @param texts An object where the keys are document IDs and the values are the documents themselves.\n     * @returns Void\n     */\n    add(texts: Record<string, Document>): void;\n}\n"],"mappings":";;;;;;;;AAOA;;AAA6FA,cAAxEG,gBAAAA,SAAyBD,QAAAA,YAAoBD,kBAA2BD,CAAAA,MAAAA,EAAAA,QAAAA,CAAAA,CAAAA;EAAQ,KAC9EA,EAAZI,GAAYJ,CAAAA,MAAAA,EAAAA,QAAAA,CAAAA;EAAQ,WAApBI,CAAAA,IAAAA,CAAAA,EACYA,GADZA,CAAAA,MAAAA,EACwBJ,QADxBI,CAAAA;EAAG;;;;;EAawB,MAAvBE,CAAAA,MAAAA,EAAAA,MAAAA,CAAAA,EANaD,OAMbC,CANqBN,QAMrBM,CAAAA;EAAM;;;;;EAEiC,GACxBD,CAAAA,KAAAA,EAHfC,MAGeD,CAAAA,MAAAA,EAHAL,QAGAK,CAAAA,CAAAA,EAHYA,OAGZA,CAAAA,IAAAA,CAAAA;EAAO,IAEJE,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EAJPF,OAIOE,CAJCP,QAIDO,EAAAA,CAAAA;EAAc,IAnBDL,CAAAA,aAAAA,EAAAA,CAAAA,MAAAA,EAgBbF,QAhBaE,CAAAA,EAAAA,CAAAA,EAgBCG,OAhBDH,CAAAA,IAAAA,CAAAA;EAAQ,OAAYD,CAAAA,KAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EAiBpCI,OAjBoCJ,CAAAA,IAAAA,CAAAA;EAAkB;EAwB/DO,SAAAA,CAAAA,OAAAA,CAAAA,EAAAA,MAAAA,CAAAA,EALYD,cAKe,CAAA,MAAA,CAAA;;;;;AAEzBH,cAFFI,2BAAAA,CAEEJ;EAAG,KAMEJ,EAPjBI,GAOiBJ,CAAAA,MAAAA,EAPLA,QAOKA,CAAAA;EAAQ,WAMNA,CAAAA,IAAAA,CAAAA,EAZPI,GAYOJ,CAAAA,MAAAA,EAZKA,QAYLA,CAAAA;EAAQ;AAAjB;;;;0BANOA;;;;;;aAMbM,eAAeN"}