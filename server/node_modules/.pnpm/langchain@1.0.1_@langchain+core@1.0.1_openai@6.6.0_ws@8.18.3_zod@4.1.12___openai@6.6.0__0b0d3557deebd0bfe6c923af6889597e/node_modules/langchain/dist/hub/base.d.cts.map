{"version":3,"file":"base.d.cts","names":["BaseLanguageModel","Runnable","PromptCommit","basePush","Promise","basePull","generateModelImportMap","Record","generateOptionalImportMap","bindOutputSchema","T"],"sources":["../../src/hub/base.d.ts"],"sourcesContent":["import type { BaseLanguageModel } from \"@langchain/core/language_models/base\";\nimport type { Runnable } from \"@langchain/core/runnables\";\nimport type { PromptCommit } from \"langsmith/schemas\";\n/**\n * Push a prompt to the hub.\n * If the specified repo doesn't already exist, it will be created.\n * @param repoFullName The full name of the repo.\n * @param runnable The prompt to push.\n * @param options\n * @returns The URL of the newly pushed prompt in the hub.\n */\nexport declare function basePush(repoFullName: string, runnable: Runnable, options?: {\n    apiKey?: string;\n    apiUrl?: string;\n    parentCommitHash?: string;\n    isPublic?: boolean;\n    description?: string;\n    readme?: string;\n    tags?: string[];\n}): Promise<string>;\nexport declare function basePull(ownerRepoCommit: string, options?: {\n    apiKey?: string;\n    apiUrl?: string;\n    includeModel?: boolean;\n}): Promise<PromptCommit>;\nexport declare function generateModelImportMap(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmodelClass?: new (...args: any[]) => BaseLanguageModel): Record<string, any>;\nexport declare function generateOptionalImportMap(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmodelClass?: new (...args: any[]) => BaseLanguageModel): Record<string, any>;\nexport declare function bindOutputSchema<T extends Runnable>(loadedSequence: T): T;\n"],"mappings":";;;;;;AAWA;;;;AAQW;;;iBARaG,QAAAA,iCAAyCF;;;;;;;;IAQ7DG"}