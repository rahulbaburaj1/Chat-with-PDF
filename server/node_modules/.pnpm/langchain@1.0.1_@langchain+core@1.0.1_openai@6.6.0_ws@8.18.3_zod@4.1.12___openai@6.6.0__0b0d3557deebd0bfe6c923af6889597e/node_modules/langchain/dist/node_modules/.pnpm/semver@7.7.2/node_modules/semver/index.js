

import { __commonJS } from "../../../../../_virtual/rolldown_runtime.js";
import { require_constants } from "./internal/constants.js";
import { require_re } from "./internal/re.js";
import { require_identifiers } from "./internal/identifiers.js";
import { require_semver } from "./classes/semver.js";
import { require_parse } from "./functions/parse.js";
import { require_valid } from "./functions/valid.js";
import { require_clean } from "./functions/clean.js";
import { require_inc } from "./functions/inc.js";
import { require_diff } from "./functions/diff.js";
import { require_major } from "./functions/major.js";
import { require_minor } from "./functions/minor.js";
import { require_patch } from "./functions/patch.js";
import { require_prerelease } from "./functions/prerelease.js";
import { require_compare } from "./functions/compare.js";
import { require_rcompare } from "./functions/rcompare.js";
import { require_compare_loose } from "./functions/compare-loose.js";
import { require_compare_build } from "./functions/compare-build.js";
import { require_sort } from "./functions/sort.js";
import { require_rsort } from "./functions/rsort.js";
import { require_gt } from "./functions/gt.js";
import { require_lt } from "./functions/lt.js";
import { require_eq } from "./functions/eq.js";
import { require_neq } from "./functions/neq.js";
import { require_gte } from "./functions/gte.js";
import { require_lte } from "./functions/lte.js";
import { require_cmp } from "./functions/cmp.js";
import { require_coerce } from "./functions/coerce.js";
import { require_range } from "./classes/range.js";
import { require_comparator } from "./classes/comparator.js";
import { require_satisfies } from "./functions/satisfies.js";
import { require_to_comparators } from "./ranges/to-comparators.js";
import { require_max_satisfying } from "./ranges/max-satisfying.js";
import { require_min_satisfying } from "./ranges/min-satisfying.js";
import { require_min_version } from "./ranges/min-version.js";
import { require_valid as require_valid$1 } from "./ranges/valid.js";
import { require_outside } from "./ranges/outside.js";
import { require_gtr } from "./ranges/gtr.js";
import { require_ltr } from "./ranges/ltr.js";
import { require_intersects } from "./ranges/intersects.js";
import { require_simplify } from "./ranges/simplify.js";
import { require_subset } from "./ranges/subset.js";

//#region ../../node_modules/.pnpm/semver@7.7.2/node_modules/semver/index.js
var require_semver$2 = /* @__PURE__ */ __commonJS({ "../../node_modules/.pnpm/semver@7.7.2/node_modules/semver/index.js": ((exports, module) => {
	const internalRe = require_re();
	const constants = require_constants();
	const SemVer = require_semver();
	const identifiers = require_identifiers();
	const parse = require_parse();
	const valid = require_valid();
	const clean = require_clean();
	const inc = require_inc();
	const diff = require_diff();
	const major = require_major();
	const minor = require_minor();
	const patch = require_patch();
	const prerelease = require_prerelease();
	const compare = require_compare();
	const rcompare = require_rcompare();
	const compareLoose = require_compare_loose();
	const compareBuild = require_compare_build();
	const sort = require_sort();
	const rsort = require_rsort();
	const gt = require_gt();
	const lt = require_lt();
	const eq = require_eq();
	const neq = require_neq();
	const gte = require_gte();
	const lte = require_lte();
	const cmp = require_cmp();
	const coerce = require_coerce();
	const Comparator = require_comparator();
	const Range = require_range();
	const satisfies = require_satisfies();
	const toComparators = require_to_comparators();
	const maxSatisfying = require_max_satisfying();
	const minSatisfying = require_min_satisfying();
	const minVersion = require_min_version();
	const validRange = require_valid$1();
	const outside = require_outside();
	const gtr = require_gtr();
	const ltr = require_ltr();
	const intersects = require_intersects();
	const simplifyRange = require_simplify();
	const subset = require_subset();
	module.exports = {
		parse,
		valid,
		clean,
		inc,
		diff,
		major,
		minor,
		patch,
		prerelease,
		compare,
		rcompare,
		compareLoose,
		compareBuild,
		sort,
		rsort,
		gt,
		lt,
		eq,
		neq,
		gte,
		lte,
		cmp,
		coerce,
		Comparator,
		Range,
		satisfies,
		toComparators,
		maxSatisfying,
		minSatisfying,
		minVersion,
		validRange,
		outside,
		gtr,
		ltr,
		intersects,
		simplifyRange,
		subset,
		SemVer,
		re: internalRe.re,
		src: internalRe.src,
		tokens: internalRe.t,
		SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
		RELEASE_TYPES: constants.RELEASE_TYPES,
		compareIdentifiers: identifiers.compareIdentifiers,
		rcompareIdentifiers: identifiers.rcompareIdentifiers
	};
}) });

//#endregion
export default require_semver$2();

export { require_semver$2 as require_semver };
//# sourceMappingURL=index.js.map