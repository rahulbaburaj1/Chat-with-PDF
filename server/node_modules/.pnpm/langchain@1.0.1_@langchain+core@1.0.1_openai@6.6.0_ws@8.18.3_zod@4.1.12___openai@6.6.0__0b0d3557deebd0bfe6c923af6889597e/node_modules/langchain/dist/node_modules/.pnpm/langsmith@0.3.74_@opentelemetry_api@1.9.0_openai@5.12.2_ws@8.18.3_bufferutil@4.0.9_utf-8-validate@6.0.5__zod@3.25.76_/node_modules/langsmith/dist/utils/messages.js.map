{"version":3,"file":"messages.js","names":[],"sources":["../../../../../../../../../../node_modules/.pnpm/langsmith@0.3.74_@opentelemetry+api@1.9.0_openai@5.12.2_ws@8.18.3_bufferutil@4.0.9_utf-8-validate@6.0.5__zod@3.25.76_/node_modules/langsmith/dist/utils/messages.js"],"sourcesContent":["export function isLangChainMessage(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmessage) {\n    return typeof message?._getType === \"function\";\n}\nexport function convertLangChainMessageToExample(message) {\n    const converted = {\n        type: message._getType(),\n        data: { content: message.content },\n    };\n    // Check for presence of keys in additional_kwargs\n    if (message?.additional_kwargs &&\n        Object.keys(message.additional_kwargs).length > 0) {\n        converted.data.additional_kwargs = { ...message.additional_kwargs };\n    }\n    return converted;\n}\n"],"x_google_ignoreList":[0],"mappings":";AAAA,SAAgB,mBAEhB,SAAS;AACL,QAAO,OAAO,SAAS,aAAa;AACvC;AACD,SAAgB,iCAAiC,SAAS;CACtD,MAAM,YAAY;EACd,MAAM,QAAQ,UAAU;EACxB,MAAM,EAAE,SAAS,QAAQ,QAAS;CACrC;AAED,KAAI,SAAS,qBACT,OAAO,KAAK,QAAQ,kBAAkB,CAAC,SAAS,GAChD,UAAU,KAAK,oBAAoB,EAAE,GAAG,QAAQ,kBAAmB;AAEvE,QAAO;AACV"}