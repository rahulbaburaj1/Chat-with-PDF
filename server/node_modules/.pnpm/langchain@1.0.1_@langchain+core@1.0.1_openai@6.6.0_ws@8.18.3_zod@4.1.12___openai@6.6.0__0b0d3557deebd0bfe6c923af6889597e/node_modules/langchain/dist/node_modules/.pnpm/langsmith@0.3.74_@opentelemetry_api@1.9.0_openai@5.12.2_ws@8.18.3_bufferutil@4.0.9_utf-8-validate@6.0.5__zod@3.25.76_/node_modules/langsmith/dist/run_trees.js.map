{"version":3,"file":"run_trees.js","names":["value","uuid"],"sources":["../../../../../../../../../node_modules/.pnpm/langsmith@0.3.74_@opentelemetry+api@1.9.0_openai@5.12.2_ws@8.18.3_bufferutil@4.0.9_utf-8-validate@6.0.5__zod@3.25.76_/node_modules/langsmith/dist/run_trees.js"],"sourcesContent":["import * as uuid from \"uuid\";\nimport { Client } from \"./client.js\";\nimport { isTracingEnabled } from \"./env.js\";\nimport { isConflictingEndpointsError, ConflictingEndpointsError, } from \"./utils/error.js\";\nimport { _LC_CONTEXT_VARIABLES_KEY } from \"./singletons/constants.js\";\nimport { getEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { getDefaultProjectName } from \"./utils/project.js\";\nimport { getLangSmithEnvironmentVariable } from \"./utils/env.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nexport function convertToDottedOrderFormat(epoch, runId, executionOrder = 1) {\n    // Date only has millisecond precision, so we use the microseconds to break\n    // possible ties, avoiding incorrect run order\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    const microsecondPrecisionDatestring = `${new Date(epoch)\n        .toISOString()\n        .slice(0, -1)}${paddedOrder}Z`;\n    return {\n        dottedOrder: stripNonAlphanumeric(microsecondPrecisionDatestring) + runId,\n        microsecondPrecisionDatestring,\n    };\n}\n/**\n * Baggage header information\n */\nclass Baggage {\n    constructor(metadata, tags, project_name, replicas) {\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"replicas\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.metadata = metadata;\n        this.tags = tags;\n        this.project_name = project_name;\n        this.replicas = replicas;\n    }\n    static fromHeader(value) {\n        const items = value.split(\",\");\n        let metadata = {};\n        let tags = [];\n        let project_name;\n        let replicas;\n        for (const item of items) {\n            const [key, uriValue] = item.split(\"=\");\n            const value = decodeURIComponent(uriValue);\n            if (key === \"langsmith-metadata\") {\n                metadata = JSON.parse(value);\n            }\n            else if (key === \"langsmith-tags\") {\n                tags = value.split(\",\");\n            }\n            else if (key === \"langsmith-project\") {\n                project_name = value;\n            }\n            else if (key === \"langsmith-replicas\") {\n                replicas = JSON.parse(value);\n            }\n        }\n        return new Baggage(metadata, tags, project_name, replicas);\n    }\n    toHeader() {\n        const items = [];\n        if (this.metadata && Object.keys(this.metadata).length > 0) {\n            items.push(`langsmith-metadata=${encodeURIComponent(JSON.stringify(this.metadata))}`);\n        }\n        if (this.tags && this.tags.length > 0) {\n            items.push(`langsmith-tags=${encodeURIComponent(this.tags.join(\",\"))}`);\n        }\n        if (this.project_name) {\n            items.push(`langsmith-project=${encodeURIComponent(this.project_name)}`);\n        }\n        return items.join(\",\");\n    }\n}\nexport class RunTree {\n    constructor(originalConfig) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"run_type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parent_run\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parent_run_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_runs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"start_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"end_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"extra\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"error\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serialized\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reference_example_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"trace_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dotted_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Attachments associated with the run.\n         * Each entry is a tuple of [mime_type, bytes]\n         */\n        Object.defineProperty(this, \"attachments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Projects to replicate this run to with optional updates.\n         */\n        Object.defineProperty(this, \"replicas\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_serialized_start_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // If you pass in a run tree directly, return a shallow clone\n        if (isRunTree(originalConfig)) {\n            Object.assign(this, { ...originalConfig });\n            return;\n        }\n        const defaultConfig = RunTree.getDefaultConfig();\n        const { metadata, ...config } = originalConfig;\n        const client = config.client ?? RunTree.getSharedClient();\n        const dedupedMetadata = {\n            ...metadata,\n            ...config?.extra?.metadata,\n        };\n        config.extra = { ...config.extra, metadata: dedupedMetadata };\n        Object.assign(this, { ...defaultConfig, ...config, client });\n        if (!this.trace_id) {\n            if (this.parent_run) {\n                this.trace_id = this.parent_run.trace_id ?? this.id;\n            }\n            else {\n                this.trace_id = this.id;\n            }\n        }\n        this.replicas = _ensureWriteReplicas(this.replicas);\n        this.execution_order ??= 1;\n        this.child_execution_order ??= 1;\n        if (!this.dotted_order) {\n            const { dottedOrder, microsecondPrecisionDatestring } = convertToDottedOrderFormat(this.start_time, this.id, this.execution_order);\n            if (this.parent_run) {\n                this.dotted_order = this.parent_run.dotted_order + \".\" + dottedOrder;\n            }\n            else {\n                this.dotted_order = dottedOrder;\n            }\n            this._serialized_start_time = microsecondPrecisionDatestring;\n        }\n    }\n    set metadata(metadata) {\n        this.extra = {\n            ...this.extra,\n            metadata: {\n                ...this.extra?.metadata,\n                ...metadata,\n            },\n        };\n    }\n    get metadata() {\n        return this.extra?.metadata;\n    }\n    static getDefaultConfig() {\n        return {\n            id: uuid.v4(),\n            run_type: \"chain\",\n            project_name: getDefaultProjectName(),\n            child_runs: [],\n            api_url: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ?? \"http://localhost:1984\",\n            api_key: getEnvironmentVariable(\"LANGCHAIN_API_KEY\"),\n            caller_options: {},\n            start_time: Date.now(),\n            serialized: {},\n            inputs: {},\n            extra: {},\n        };\n    }\n    static getSharedClient() {\n        if (!RunTree.sharedClient) {\n            RunTree.sharedClient = new Client();\n        }\n        return RunTree.sharedClient;\n    }\n    createChild(config) {\n        const child_execution_order = this.child_execution_order + 1;\n        const child = new RunTree({\n            ...config,\n            parent_run: this,\n            project_name: this.project_name,\n            replicas: this.replicas,\n            client: this.client,\n            tracingEnabled: this.tracingEnabled,\n            execution_order: child_execution_order,\n            child_execution_order: child_execution_order,\n        });\n        // Copy context vars over into the new run tree.\n        if (_LC_CONTEXT_VARIABLES_KEY in this) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            child[_LC_CONTEXT_VARIABLES_KEY] =\n                this[_LC_CONTEXT_VARIABLES_KEY];\n        }\n        const LC_CHILD = Symbol.for(\"lc:child_config\");\n        const presentConfig = config.extra?.[LC_CHILD] ??\n            this.extra[LC_CHILD];\n        // tracing for LangChain is defined by the _parentRunId and runMap of the tracer\n        if (isRunnableConfigLike(presentConfig)) {\n            const newConfig = { ...presentConfig };\n            const callbacks = isCallbackManagerLike(newConfig.callbacks)\n                ? newConfig.callbacks.copy?.()\n                : undefined;\n            if (callbacks) {\n                // update the parent run id\n                Object.assign(callbacks, { _parentRunId: child.id });\n                // only populate if we're in a newer LC.JS version\n                callbacks.handlers\n                    ?.find(isLangChainTracerLike)\n                    ?.updateFromRunTree?.(child);\n                newConfig.callbacks = callbacks;\n            }\n            child.extra[LC_CHILD] = newConfig;\n        }\n        // propagate child_execution_order upwards\n        const visited = new Set();\n        let current = this;\n        while (current != null && !visited.has(current.id)) {\n            visited.add(current.id);\n            current.child_execution_order = Math.max(current.child_execution_order, child_execution_order);\n            current = current.parent_run;\n        }\n        this.child_runs.push(child);\n        return child;\n    }\n    async end(outputs, error, endTime = Date.now(), metadata) {\n        this.outputs = this.outputs ?? outputs;\n        this.error = this.error ?? error;\n        this.end_time = this.end_time ?? endTime;\n        if (metadata && Object.keys(metadata).length > 0) {\n            this.extra = this.extra\n                ? { ...this.extra, metadata: { ...this.extra.metadata, ...metadata } }\n                : { metadata };\n        }\n    }\n    _convertToCreate(run, runtimeEnv, excludeChildRuns = true) {\n        const runExtra = run.extra ?? {};\n        // Avoid overwriting the runtime environment if it's already set\n        if (runExtra?.runtime?.library === undefined) {\n            if (!runExtra.runtime) {\n                runExtra.runtime = {};\n            }\n            if (runtimeEnv) {\n                for (const [k, v] of Object.entries(runtimeEnv)) {\n                    if (!runExtra.runtime[k]) {\n                        runExtra.runtime[k] = v;\n                    }\n                }\n            }\n        }\n        let child_runs;\n        let parent_run_id;\n        if (!excludeChildRuns) {\n            child_runs = run.child_runs.map((child_run) => this._convertToCreate(child_run, runtimeEnv, excludeChildRuns));\n            parent_run_id = undefined;\n        }\n        else {\n            parent_run_id = run.parent_run?.id ?? run.parent_run_id;\n            child_runs = [];\n        }\n        return {\n            id: run.id,\n            name: run.name,\n            start_time: run._serialized_start_time ?? run.start_time,\n            end_time: run.end_time,\n            run_type: run.run_type,\n            reference_example_id: run.reference_example_id,\n            extra: runExtra,\n            serialized: run.serialized,\n            error: run.error,\n            inputs: run.inputs,\n            outputs: run.outputs,\n            session_name: run.project_name,\n            child_runs: child_runs,\n            parent_run_id: parent_run_id,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            tags: run.tags,\n            attachments: run.attachments,\n            events: run.events,\n        };\n    }\n    _remapForProject(projectName, runtimeEnv, excludeChildRuns = true) {\n        const baseRun = this._convertToCreate(this, runtimeEnv, excludeChildRuns);\n        if (projectName === this.project_name) {\n            return baseRun;\n        }\n        // Create a deterministic UUID mapping for this project\n        const createRemappedId = (originalId) => {\n            return uuid.v5(`${originalId}:${projectName}`, uuid.v5.DNS);\n        };\n        // Remap the current run's ID\n        const newId = createRemappedId(baseRun.id);\n        const newTraceId = baseRun.trace_id\n            ? createRemappedId(baseRun.trace_id)\n            : undefined;\n        const newParentRunId = baseRun.parent_run_id\n            ? createRemappedId(baseRun.parent_run_id)\n            : undefined;\n        let newDottedOrder;\n        if (baseRun.dotted_order) {\n            const segments = _parseDottedOrder(baseRun.dotted_order);\n            const rebuilt = [];\n            // Process all segments except the last one\n            for (let i = 0; i < segments.length - 1; i++) {\n                const [timestamp, segmentId] = segments[i];\n                const remappedId = createRemappedId(segmentId);\n                rebuilt.push(timestamp.toISOString().replace(/[-:]/g, \"\").replace(\".\", \"\") +\n                    remappedId);\n            }\n            // Process the last segment with the new run ID\n            const [lastTimestamp] = segments[segments.length - 1];\n            rebuilt.push(lastTimestamp.toISOString().replace(/[-:]/g, \"\").replace(\".\", \"\") +\n                newId);\n            newDottedOrder = rebuilt.join(\".\");\n        }\n        else {\n            newDottedOrder = undefined;\n        }\n        const remappedRun = {\n            ...baseRun,\n            id: newId,\n            trace_id: newTraceId,\n            parent_run_id: newParentRunId,\n            dotted_order: newDottedOrder,\n            session_name: projectName,\n        };\n        return remappedRun;\n    }\n    async postRun(excludeChildRuns = true) {\n        try {\n            const runtimeEnv = getRuntimeEnvironment();\n            if (this.replicas && this.replicas.length > 0) {\n                for (const { projectName, apiKey, apiUrl, workspaceId } of this\n                    .replicas) {\n                    const runCreate = this._remapForProject(projectName ?? this.project_name, runtimeEnv, true);\n                    await this.client.createRun(runCreate, {\n                        apiKey,\n                        apiUrl,\n                        workspaceId,\n                    });\n                }\n            }\n            else {\n                const runCreate = this._convertToCreate(this, runtimeEnv, excludeChildRuns);\n                await this.client.createRun(runCreate);\n            }\n            if (!excludeChildRuns) {\n                warnOnce(\"Posting with excludeChildRuns=false is deprecated and will be removed in a future version.\");\n                for (const childRun of this.child_runs) {\n                    await childRun.postRun(false);\n                }\n            }\n        }\n        catch (error) {\n            console.error(`Error in postRun for run ${this.id}:`, error);\n        }\n    }\n    async patchRun(options) {\n        if (this.replicas && this.replicas.length > 0) {\n            for (const { projectName, apiKey, apiUrl, workspaceId, updates } of this\n                .replicas) {\n                const runData = this._remapForProject(projectName ?? this.project_name);\n                const updatePayload = {\n                    id: runData.id,\n                    outputs: runData.outputs,\n                    error: runData.error,\n                    parent_run_id: runData.parent_run_id,\n                    session_name: runData.session_name,\n                    reference_example_id: runData.reference_example_id,\n                    end_time: runData.end_time,\n                    dotted_order: runData.dotted_order,\n                    trace_id: runData.trace_id,\n                    events: runData.events,\n                    tags: runData.tags,\n                    extra: runData.extra,\n                    attachments: this.attachments,\n                    ...updates,\n                };\n                // Important that inputs is not a key in the run update\n                // if excluded because it will overwrite the run create if the\n                // two operations are merged during batching\n                if (!options?.excludeInputs) {\n                    updatePayload.inputs = runData.inputs;\n                }\n                await this.client.updateRun(runData.id, updatePayload, {\n                    apiKey,\n                    apiUrl,\n                    workspaceId,\n                });\n            }\n        }\n        else {\n            try {\n                const runUpdate = {\n                    end_time: this.end_time,\n                    error: this.error,\n                    outputs: this.outputs,\n                    parent_run_id: this.parent_run?.id ?? this.parent_run_id,\n                    reference_example_id: this.reference_example_id,\n                    extra: this.extra,\n                    events: this.events,\n                    dotted_order: this.dotted_order,\n                    trace_id: this.trace_id,\n                    tags: this.tags,\n                    attachments: this.attachments,\n                    session_name: this.project_name,\n                };\n                // Important that inputs is not a key in the run update\n                // if excluded because it will overwrite the run create if the\n                // two operations are merged during batching\n                if (!options?.excludeInputs) {\n                    runUpdate.inputs = this.inputs;\n                }\n                await this.client.updateRun(this.id, runUpdate);\n            }\n            catch (error) {\n                console.error(`Error in patchRun for run ${this.id}`, error);\n            }\n        }\n    }\n    toJSON() {\n        return this._convertToCreate(this, undefined, false);\n    }\n    /**\n     * Add an event to the run tree.\n     * @param event - A single event or string to add\n     */\n    addEvent(event) {\n        if (!this.events) {\n            this.events = [];\n        }\n        if (typeof event === \"string\") {\n            this.events.push({\n                name: \"event\",\n                time: new Date().toISOString(),\n                message: event,\n            });\n        }\n        else {\n            this.events.push({\n                ...event,\n                time: event.time ?? new Date().toISOString(),\n            });\n        }\n    }\n    static fromRunnableConfig(parentConfig, props) {\n        // We only handle the callback manager case for now\n        const callbackManager = parentConfig?.callbacks;\n        let parentRun;\n        let projectName;\n        let client;\n        let tracingEnabled = isTracingEnabled();\n        if (callbackManager) {\n            const parentRunId = callbackManager?.getParentRunId?.() ?? \"\";\n            const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name == \"langchain_tracer\");\n            parentRun = langChainTracer?.getRun?.(parentRunId);\n            projectName = langChainTracer?.projectName;\n            client = langChainTracer?.client;\n            tracingEnabled = tracingEnabled || !!langChainTracer;\n        }\n        if (!parentRun) {\n            return new RunTree({\n                ...props,\n                client,\n                tracingEnabled,\n                project_name: projectName,\n            });\n        }\n        const parentRunTree = new RunTree({\n            name: parentRun.name,\n            id: parentRun.id,\n            trace_id: parentRun.trace_id,\n            dotted_order: parentRun.dotted_order,\n            client,\n            tracingEnabled,\n            project_name: projectName,\n            tags: [\n                ...new Set((parentRun?.tags ?? []).concat(parentConfig?.tags ?? [])),\n            ],\n            extra: {\n                metadata: {\n                    ...parentRun?.extra?.metadata,\n                    ...parentConfig?.metadata,\n                },\n            },\n        });\n        return parentRunTree.createChild(props);\n    }\n    static fromDottedOrder(dottedOrder) {\n        return this.fromHeaders({ \"langsmith-trace\": dottedOrder });\n    }\n    static fromHeaders(headers, inheritArgs) {\n        const rawHeaders = \"get\" in headers && typeof headers.get === \"function\"\n            ? {\n                \"langsmith-trace\": headers.get(\"langsmith-trace\"),\n                baggage: headers.get(\"baggage\"),\n            }\n            : headers;\n        const headerTrace = rawHeaders[\"langsmith-trace\"];\n        if (!headerTrace || typeof headerTrace !== \"string\")\n            return undefined;\n        const parentDottedOrder = headerTrace.trim();\n        const parsedDottedOrder = parentDottedOrder.split(\".\").map((part) => {\n            const [strTime, uuid] = part.split(\"Z\");\n            return { strTime, time: Date.parse(strTime + \"Z\"), uuid };\n        });\n        const traceId = parsedDottedOrder[0].uuid;\n        const config = {\n            ...inheritArgs,\n            name: inheritArgs?.[\"name\"] ?? \"parent\",\n            run_type: inheritArgs?.[\"run_type\"] ?? \"chain\",\n            start_time: inheritArgs?.[\"start_time\"] ?? Date.now(),\n            id: parsedDottedOrder.at(-1)?.uuid,\n            trace_id: traceId,\n            dotted_order: parentDottedOrder,\n        };\n        if (rawHeaders[\"baggage\"] && typeof rawHeaders[\"baggage\"] === \"string\") {\n            const baggage = Baggage.fromHeader(rawHeaders[\"baggage\"]);\n            config.metadata = baggage.metadata;\n            config.tags = baggage.tags;\n            config.project_name = baggage.project_name;\n            config.replicas = baggage.replicas;\n        }\n        return new RunTree(config);\n    }\n    toHeaders(headers) {\n        const result = {\n            \"langsmith-trace\": this.dotted_order,\n            baggage: new Baggage(this.extra?.metadata, this.tags, this.project_name, this.replicas).toHeader(),\n        };\n        if (headers) {\n            for (const [key, value] of Object.entries(result)) {\n                headers.set(key, value);\n            }\n        }\n        return result;\n    }\n}\nObject.defineProperty(RunTree, \"sharedClient\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: null\n});\nexport function isRunTree(x) {\n    return (x != null &&\n        typeof x.createChild === \"function\" &&\n        typeof x.postRun === \"function\");\n}\nfunction isLangChainTracerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        typeof x.name === \"string\" &&\n        x.name === \"langchain_tracer\");\n}\nfunction containsLangChainTracerLike(x) {\n    return (Array.isArray(x) && x.some((callback) => isLangChainTracerLike(callback)));\n}\nfunction isCallbackManagerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        Array.isArray(x.handlers));\n}\nexport function isRunnableConfigLike(x) {\n    // Check that it's an object with a callbacks arg\n    // that has either a CallbackManagerLike object with a langchain tracer within it\n    // or an array with a LangChainTracerLike object within it\n    return (x != null &&\n        typeof x.callbacks === \"object\" &&\n        // Callback manager with a langchain tracer\n        (containsLangChainTracerLike(x.callbacks?.handlers) ||\n            // Or it's an array with a LangChainTracerLike object within it\n            containsLangChainTracerLike(x.callbacks)));\n}\nfunction _parseDottedOrder(dottedOrder) {\n    const parts = dottedOrder.split(\".\");\n    return parts.map((part) => {\n        const timestampStr = part.slice(0, -36);\n        const uuidStr = part.slice(-36);\n        // Parse timestamp: \"%Y%m%dT%H%M%S%fZ\" format\n        // Example: \"20231215T143045123456Z\"\n        const year = parseInt(timestampStr.slice(0, 4));\n        const month = parseInt(timestampStr.slice(4, 6)) - 1; // JS months are 0-indexed\n        const day = parseInt(timestampStr.slice(6, 8));\n        const hour = parseInt(timestampStr.slice(9, 11));\n        const minute = parseInt(timestampStr.slice(11, 13));\n        const second = parseInt(timestampStr.slice(13, 15));\n        const microsecond = parseInt(timestampStr.slice(15, 21));\n        const timestamp = new Date(year, month, day, hour, minute, second, microsecond / 1000);\n        return [timestamp, uuidStr];\n    });\n}\nfunction _getWriteReplicasFromEnv() {\n    const envVar = getEnvironmentVariable(\"LANGSMITH_RUNS_ENDPOINTS\");\n    if (!envVar)\n        return [];\n    try {\n        const parsed = JSON.parse(envVar);\n        if (Array.isArray(parsed)) {\n            const replicas = [];\n            for (const item of parsed) {\n                if (typeof item !== \"object\" || item === null) {\n                    console.warn(`Invalid item type in LANGSMITH_RUNS_ENDPOINTS: ` +\n                        `expected object, got ${typeof item}`);\n                    continue;\n                }\n                if (typeof item.api_url !== \"string\") {\n                    console.warn(`Invalid api_url type in LANGSMITH_RUNS_ENDPOINTS: ` +\n                        `expected string, got ${typeof item.api_url}`);\n                    continue;\n                }\n                if (typeof item.api_key !== \"string\") {\n                    console.warn(`Invalid api_key type in LANGSMITH_RUNS_ENDPOINTS: ` +\n                        `expected string, got ${typeof item.api_key}`);\n                    continue;\n                }\n                replicas.push({\n                    apiUrl: item.api_url.replace(/\\/$/, \"\"),\n                    apiKey: item.api_key,\n                });\n            }\n            return replicas;\n        }\n        else if (typeof parsed === \"object\" && parsed !== null) {\n            _checkEndpointEnvUnset(parsed);\n            const replicas = [];\n            for (const [url, key] of Object.entries(parsed)) {\n                const cleanUrl = url.replace(/\\/$/, \"\");\n                if (typeof key === \"string\") {\n                    replicas.push({\n                        apiUrl: cleanUrl,\n                        apiKey: key,\n                    });\n                }\n                else {\n                    console.warn(`Invalid value type in LANGSMITH_RUNS_ENDPOINTS for URL ${url}: ` +\n                        `expected string, got ${typeof key}`);\n                    continue;\n                }\n            }\n            return replicas;\n        }\n        else {\n            console.warn(\"Invalid LANGSMITH_RUNS_ENDPOINTS – must be valid JSON array of \" +\n                `objects with api_url and api_key properties, or object mapping url->apiKey, got ${typeof parsed}`);\n            return [];\n        }\n    }\n    catch (e) {\n        if (isConflictingEndpointsError(e)) {\n            throw e;\n        }\n        console.warn(\"Invalid LANGSMITH_RUNS_ENDPOINTS – must be valid JSON array of \" +\n            \"objects with api_url and api_key properties, or object mapping url->apiKey\");\n        return [];\n    }\n}\nfunction _ensureWriteReplicas(replicas) {\n    // If null -> fetch from env\n    if (replicas) {\n        return replicas.map((replica) => {\n            if (Array.isArray(replica)) {\n                return {\n                    projectName: replica[0],\n                    updates: replica[1],\n                };\n            }\n            return replica;\n        });\n    }\n    return _getWriteReplicasFromEnv();\n}\nfunction _checkEndpointEnvUnset(parsed) {\n    if (Object.keys(parsed).length > 0 &&\n        getLangSmithEnvironmentVariable(\"ENDPOINT\")) {\n        throw new ConflictingEndpointsError();\n    }\n}\n"],"x_google_ignoreList":[0],"mappings":"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"}