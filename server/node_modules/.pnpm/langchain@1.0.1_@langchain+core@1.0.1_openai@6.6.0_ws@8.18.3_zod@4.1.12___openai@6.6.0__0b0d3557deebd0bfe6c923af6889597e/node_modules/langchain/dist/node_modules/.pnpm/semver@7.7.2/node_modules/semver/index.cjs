'use strict';


const require_rolldown_runtime = require('../../../../../_virtual/rolldown_runtime.cjs');
const require_constants$1 = require('./internal/constants.cjs');
const require_re$1 = require('./internal/re.cjs');
const require_identifiers$1 = require('./internal/identifiers.cjs');
const require_semver$1 = require('./classes/semver.cjs');
const require_parse$1 = require('./functions/parse.cjs');
const require_valid$2 = require('./functions/valid.cjs');
const require_clean$1 = require('./functions/clean.cjs');
const require_inc$1 = require('./functions/inc.cjs');
const require_diff$1 = require('./functions/diff.cjs');
const require_major$1 = require('./functions/major.cjs');
const require_minor$1 = require('./functions/minor.cjs');
const require_patch$1 = require('./functions/patch.cjs');
const require_prerelease$1 = require('./functions/prerelease.cjs');
const require_compare$1 = require('./functions/compare.cjs');
const require_rcompare$1 = require('./functions/rcompare.cjs');
const require_compare_loose$1 = require('./functions/compare-loose.cjs');
const require_compare_build$1 = require('./functions/compare-build.cjs');
const require_sort$1 = require('./functions/sort.cjs');
const require_rsort$1 = require('./functions/rsort.cjs');
const require_gt$1 = require('./functions/gt.cjs');
const require_lt$1 = require('./functions/lt.cjs');
const require_eq$1 = require('./functions/eq.cjs');
const require_neq$1 = require('./functions/neq.cjs');
const require_gte$1 = require('./functions/gte.cjs');
const require_lte$1 = require('./functions/lte.cjs');
const require_cmp$1 = require('./functions/cmp.cjs');
const require_coerce$1 = require('./functions/coerce.cjs');
const require_range$1 = require('./classes/range.cjs');
const require_comparator$1 = require('./classes/comparator.cjs');
const require_satisfies$1 = require('./functions/satisfies.cjs');
const require_to_comparators$1 = require('./ranges/to-comparators.cjs');
const require_max_satisfying$1 = require('./ranges/max-satisfying.cjs');
const require_min_satisfying$1 = require('./ranges/min-satisfying.cjs');
const require_min_version$1 = require('./ranges/min-version.cjs');
const require_valid$3 = require('./ranges/valid.cjs');
const require_outside$1 = require('./ranges/outside.cjs');
const require_gtr$1 = require('./ranges/gtr.cjs');
const require_ltr$1 = require('./ranges/ltr.cjs');
const require_intersects$1 = require('./ranges/intersects.cjs');
const require_simplify$1 = require('./ranges/simplify.cjs');
const require_subset$1 = require('./ranges/subset.cjs');

//#region ../../node_modules/.pnpm/semver@7.7.2/node_modules/semver/index.js
var require_semver$2 = /* @__PURE__ */ require_rolldown_runtime.__commonJS({ "../../node_modules/.pnpm/semver@7.7.2/node_modules/semver/index.js": ((exports, module) => {
	const internalRe = require_re$1.require_re();
	const constants = require_constants$1.require_constants();
	const SemVer = require_semver$1.require_semver();
	const identifiers = require_identifiers$1.require_identifiers();
	const parse = require_parse$1.require_parse();
	const valid = require_valid$2.require_valid();
	const clean = require_clean$1.require_clean();
	const inc = require_inc$1.require_inc();
	const diff = require_diff$1.require_diff();
	const major = require_major$1.require_major();
	const minor = require_minor$1.require_minor();
	const patch = require_patch$1.require_patch();
	const prerelease = require_prerelease$1.require_prerelease();
	const compare = require_compare$1.require_compare();
	const rcompare = require_rcompare$1.require_rcompare();
	const compareLoose = require_compare_loose$1.require_compare_loose();
	const compareBuild = require_compare_build$1.require_compare_build();
	const sort = require_sort$1.require_sort();
	const rsort = require_rsort$1.require_rsort();
	const gt = require_gt$1.require_gt();
	const lt = require_lt$1.require_lt();
	const eq = require_eq$1.require_eq();
	const neq = require_neq$1.require_neq();
	const gte = require_gte$1.require_gte();
	const lte = require_lte$1.require_lte();
	const cmp = require_cmp$1.require_cmp();
	const coerce = require_coerce$1.require_coerce();
	const Comparator = require_comparator$1.require_comparator();
	const Range = require_range$1.require_range();
	const satisfies = require_satisfies$1.require_satisfies();
	const toComparators = require_to_comparators$1.require_to_comparators();
	const maxSatisfying = require_max_satisfying$1.require_max_satisfying();
	const minSatisfying = require_min_satisfying$1.require_min_satisfying();
	const minVersion = require_min_version$1.require_min_version();
	const validRange = require_valid$3.require_valid();
	const outside = require_outside$1.require_outside();
	const gtr = require_gtr$1.require_gtr();
	const ltr = require_ltr$1.require_ltr();
	const intersects = require_intersects$1.require_intersects();
	const simplifyRange = require_simplify$1.require_simplify();
	const subset = require_subset$1.require_subset();
	module.exports = {
		parse,
		valid,
		clean,
		inc,
		diff,
		major,
		minor,
		patch,
		prerelease,
		compare,
		rcompare,
		compareLoose,
		compareBuild,
		sort,
		rsort,
		gt,
		lt,
		eq,
		neq,
		gte,
		lte,
		cmp,
		coerce,
		Comparator,
		Range,
		satisfies,
		toComparators,
		maxSatisfying,
		minSatisfying,
		minVersion,
		validRange,
		outside,
		gtr,
		ltr,
		intersects,
		simplifyRange,
		subset,
		SemVer,
		re: internalRe.re,
		src: internalRe.src,
		tokens: internalRe.t,
		SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
		RELEASE_TYPES: constants.RELEASE_TYPES,
		compareIdentifiers: identifiers.compareIdentifiers,
		rcompareIdentifiers: identifiers.rcompareIdentifiers
	};
}) });

//#endregion
Object.defineProperty(exports, 'default', {
  enumerable: true,
  get: function () {
    return require_semver$2();
  }
});
//# sourceMappingURL=index.cjs.map