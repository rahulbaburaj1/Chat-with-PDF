{"version":3,"file":"index.js","names":["error"],"sources":["../../../../../../../../node_modules/.pnpm/p-retry@4.6.2/node_modules/p-retry/index.js"],"sourcesContent":["'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n"],"x_google_ignoreList":[0],"mappings":";;;;;;;CACA,MAAM;CAEN,MAAM,mBAAmB;EACxB;EACA;EACA;EACA;CACA;CAED,IAAM,aAAN,cAAyB,MAAM;EAC9B,YAAY,SAAS;GACpB,OAAO;AAEP,OAAI,mBAAmB,OAAO;IAC7B,KAAK,gBAAgB;KACpB,CAAC,QAAQ,GAAG;GACb,OAAM;IACN,KAAK,gBAAgB,IAAI,MAAM;IAC/B,KAAK,cAAc,QAAQ,KAAK;GAChC;GAED,KAAK,OAAO;GACZ,KAAK,UAAU;EACf;CACD;CAED,MAAM,0BAA0B,CAAC,OAAO,eAAe,YAAY;EAElE,MAAM,cAAc,QAAQ,WAAW,gBAAgB;EAEvD,MAAM,gBAAgB;EACtB,MAAM,cAAc;AACpB,SAAO;CACP;CAED,MAAM,iBAAiB,kBAAgB,iBAAiB,SAAS,aAAa;CAE9E,MAAM,SAAS,CAAC,OAAO,YAAY,IAAI,QAAQ,CAAC,SAAS,WAAW;EACnE,UAAU;GACT,iBAAiB,MAAM,CAAE;GACzB,SAAS;GACT,GAAG;EACH;EAED,MAAM,YAAY,MAAM,UAAU,QAAQ;EAE1C,UAAU,QAAQ,OAAM,kBAAiB;AACxC,OAAI;IACH,QAAQ,MAAM,MAAM,cAAc,CAAC;GACnC,SAAQ,OAAO;AACf,QAAI,EAAE,iBAAiB,QAAQ;KAC9B,uBAAO,IAAI,UAAU,CAAC,uBAAuB,EAAE,MAAM,gCAAgC,CAAC,EAAE;AACxF;IACA;AAED,QAAI,iBAAiB,YAAY;KAChC,UAAU,MAAM;KAChB,OAAO,MAAM,cAAc;IAC3B,WAAU,iBAAiB,aAAa,CAAC,eAAe,MAAM,QAAQ,EAAE;KACxE,UAAU,MAAM;KAChB,OAAO,MAAM;IACb,OAAM;KACN,wBAAwB,OAAO,eAAe,QAAQ;AAEtD,SAAI;MACH,MAAM,QAAQ,gBAAgB,MAAM;KACpC,SAAQA,SAAO;MACf,OAAOA,QAAM;AACb;KACA;AAED,SAAI,CAAC,UAAU,MAAM,MAAM,EAC1B,OAAO,UAAU,WAAW,CAAC;IAE9B;GACD;EACD,EAAC;CACF;CAED,OAAO,UAAU;CAEjB,OAAO,QAAQ,UAAU;CAEzB,OAAO,QAAQ,aAAa"}