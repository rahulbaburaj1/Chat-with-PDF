{"version":3,"file":"bindingutilities.cjs","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/bindingutilities.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eventingFunctionLanguageCompatibilityFromCpp = exports.eventingFunctionLanguageCompatibilityToCpp = exports.eventingFunctionLogLevelFromCpp = exports.eventingFunctionLogLevelToCpp = exports.eventingFunctionProcessingStatusFromCpp = exports.eventingFunctionProcessingStatusToCpp = exports.eventingFunctionDeploymentStatusFromCpp = exports.eventingFunctionDeploymentStatusToCpp = exports.eventingFunctionDcpBoundaryFromCpp = exports.eventingFunctionDcpBoundaryToCpp = exports.eventingBucketBindingAccessFromCpp = exports.eventingBucketBindingAccessToCpp = exports.transactionKeyspaceToCpp = exports.designDocumentNamespaceToCpp = exports.designDocumentNamespaceFromCpp = exports.vectorQueryCombinationToCpp = exports.bucketConflictResolutionTypeFromCpp = exports.bucketConflictResolutionTypeToCpp = exports.bucketStorageBackendFromCpp = exports.bucketStorageBackendToCpp = exports.bucketEvictionPolicyFromCpp = exports.bucketEvictionPolicyToCpp = exports.bucketCompressionModeFromCpp = exports.bucketCompressionModeToCpp = exports.bucketTypeFromCpp = exports.bucketTypeToCpp = exports.scanTypeToCpp = exports.errorFromCpp = exports.contextFromCpp = exports.pingStateFromCpp = exports.txnOpExeptionFromCpp = exports.txnExternalExceptionStringFromCpp = exports.endpointStateFromCpp = exports.serviceTypeFromCpp = exports.serviceTypeToCpp = exports.mutationStateToCpp = exports.searchHighlightStyleToCpp = exports.searchScanConsistencyToCpp = exports.analyticsStatusFromCpp = exports.analyticsScanConsistencyToCpp = exports.queryProfileToCpp = exports.queryScanConsistencyFromCpp = exports.queryScanConsistencyToCpp = exports.viewOrderingToCpp = exports.viewScanConsistencyToCpp = exports.storeSemanticToCpp = exports.replicateToToCpp = exports.persistToToCpp = exports.durabilityFromCpp = exports.durabilityToCpp = void 0;\nexports.transactionGetMultiReplicasFromPreferredServerGroupModeToCpp = exports.transactionGetMultiModeToCpp = exports.readPreferenceToCpp = exports.authDomainFromCpp = exports.authDomainToCpp = exports.encryptionSettingsFromCpp = exports.encryptionSettingsToCpp = exports.encryptionLevelToCpp = exports.couchbaseLinkEncryptionLevelFromCpp = exports.eventingFunctionStatusFromCpp = void 0;\nconst analyticstypes_1 = require(\"./analyticstypes\");\nconst analyticsindexmanager_1 = require(\"./analyticsindexmanager\");\nconst binding_1 = __importDefault(require(\"./binding\"));\nconst bucketmanager_1 = require(\"./bucketmanager\");\nconst diagnosticstypes_1 = require(\"./diagnosticstypes\");\nconst errctxs = __importStar(require(\"./errorcontexts\"));\nconst errs = __importStar(require(\"./errors\"));\nconst generaltypes_1 = require(\"./generaltypes\");\nconst querytypes_1 = require(\"./querytypes\");\nconst rangeScan_1 = require(\"./rangeScan\");\nconst searchtypes_1 = require(\"./searchtypes\");\nconst transactions_1 = require(\"./transactions\");\nconst utilities_1 = require(\"./utilities\");\nconst vectorsearch_1 = require(\"./vectorsearch\");\nconst viewtypes_1 = require(\"./viewtypes\");\nconst eventingfunctionmanager_1 = require(\"./eventingfunctionmanager\");\n/**\n * @internal\n */\nfunction durabilityToCpp(mode) {\n    // Unspecified is allowed, and means no sync durability.\n    if (mode === null || mode === undefined) {\n        return binding_1.default.durability_level.none;\n    }\n    if (typeof mode === 'string') {\n        mode = (0, utilities_1.nsServerStrToDuraLevel)(mode);\n    }\n    if (mode === generaltypes_1.DurabilityLevel.None) {\n        return binding_1.default.durability_level.none;\n    }\n    else if (mode === generaltypes_1.DurabilityLevel.Majority) {\n        return binding_1.default.durability_level.majority;\n    }\n    else if (mode === generaltypes_1.DurabilityLevel.MajorityAndPersistOnMaster) {\n        return binding_1.default.durability_level.majority_and_persist_to_active;\n    }\n    else if (mode === generaltypes_1.DurabilityLevel.PersistToMajority) {\n        return binding_1.default.durability_level.persist_to_majority;\n    }\n    throw new errs.InvalidDurabilityLevel();\n}\nexports.durabilityToCpp = durabilityToCpp;\n/**\n * @internal\n */\nfunction durabilityFromCpp(mode) {\n    if (mode === null || mode === undefined) {\n        return undefined;\n    }\n    if (mode === binding_1.default.durability_level.none) {\n        return generaltypes_1.DurabilityLevel.None;\n    }\n    else if (mode === binding_1.default.durability_level.majority) {\n        return generaltypes_1.DurabilityLevel.Majority;\n    }\n    else if (mode === binding_1.default.durability_level.majority_and_persist_to_active) {\n        return generaltypes_1.DurabilityLevel.MajorityAndPersistOnMaster;\n    }\n    else if (mode === binding_1.default.durability_level.persist_to_majority) {\n        return generaltypes_1.DurabilityLevel.PersistToMajority;\n    }\n    throw new errs.InvalidDurabilityLevel();\n}\nexports.durabilityFromCpp = durabilityFromCpp;\n/**\n * @internal\n */\nfunction persistToToCpp(persistTo) {\n    // Unspecified is allowed, and means no persistTo.\n    if (persistTo === null || persistTo === undefined) {\n        return binding_1.default.persist_to.none;\n    }\n    if (persistTo === 0) {\n        return binding_1.default.persist_to.none;\n    }\n    else if (persistTo === 1) {\n        return binding_1.default.persist_to.active;\n    }\n    else if (persistTo === 2) {\n        return binding_1.default.persist_to.one;\n    }\n    else if (persistTo === 3) {\n        return binding_1.default.persist_to.two;\n    }\n    else if (persistTo === 4) {\n        return binding_1.default.persist_to.three;\n    }\n    else if (persistTo === 5) {\n        return binding_1.default.persist_to.four;\n    }\n    throw new errs.InvalidDurabilityPersistToLevel();\n}\nexports.persistToToCpp = persistToToCpp;\n/**\n * @internal\n */\nfunction replicateToToCpp(replicateTo) {\n    // Unspecified is allowed, and means no persistTo.\n    if (replicateTo === null || replicateTo === undefined) {\n        return binding_1.default.replicate_to.none;\n    }\n    if (replicateTo === 0) {\n        return binding_1.default.replicate_to.none;\n    }\n    else if (replicateTo === 1) {\n        return binding_1.default.replicate_to.one;\n    }\n    else if (replicateTo === 2) {\n        return binding_1.default.replicate_to.two;\n    }\n    else if (replicateTo === 3) {\n        return binding_1.default.replicate_to.three;\n    }\n    throw new errs.InvalidDurabilityReplicateToLevel();\n}\nexports.replicateToToCpp = replicateToToCpp;\n/**\n * @internal\n */\nfunction storeSemanticToCpp(mode) {\n    if (mode === null || mode === undefined) {\n        return binding_1.default.store_semantics.replace;\n    }\n    if (mode === generaltypes_1.StoreSemantics.Insert) {\n        return binding_1.default.store_semantics.insert;\n    }\n    else if (mode === generaltypes_1.StoreSemantics.Upsert) {\n        return binding_1.default.store_semantics.upsert;\n    }\n    else if (mode === generaltypes_1.StoreSemantics.Replace) {\n        return binding_1.default.store_semantics.replace;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.storeSemanticToCpp = storeSemanticToCpp;\n/**\n * @internal\n */\nfunction viewScanConsistencyToCpp(mode) {\n    // Unspecified is allowed, and means no sync durability.\n    if (mode === null || mode === undefined) {\n        return undefined;\n    }\n    if (mode === viewtypes_1.ViewScanConsistency.NotBounded) {\n        return binding_1.default.view_scan_consistency.not_bounded;\n    }\n    else if (mode === viewtypes_1.ViewScanConsistency.UpdateAfter) {\n        return binding_1.default.view_scan_consistency.update_after;\n    }\n    else if (mode === viewtypes_1.ViewScanConsistency.RequestPlus) {\n        return binding_1.default.view_scan_consistency.request_plus;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.viewScanConsistencyToCpp = viewScanConsistencyToCpp;\n/**\n * @internal\n */\nfunction viewOrderingToCpp(ordering) {\n    // Unspecified is allowed, and means default ordering.\n    if (ordering === null || ordering === undefined) {\n        return undefined;\n    }\n    if (ordering === viewtypes_1.ViewOrdering.Ascending) {\n        return binding_1.default.view_sort_order.ascending;\n    }\n    else if (ordering === viewtypes_1.ViewOrdering.Descending) {\n        return binding_1.default.view_sort_order.descending;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized view ordering.'));\n}\nexports.viewOrderingToCpp = viewOrderingToCpp;\n/**\n * @internal\n */\nfunction queryScanConsistencyToCpp(mode) {\n    // Unspecified is allowed, and means no sync durability.\n    if (mode === null || mode === undefined) {\n        return undefined;\n    }\n    if (mode === querytypes_1.QueryScanConsistency.NotBounded) {\n        return binding_1.default.query_scan_consistency.not_bounded;\n    }\n    else if (mode === querytypes_1.QueryScanConsistency.RequestPlus) {\n        return binding_1.default.query_scan_consistency.request_plus;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.queryScanConsistencyToCpp = queryScanConsistencyToCpp;\n/**\n * @internal\n */\nfunction queryScanConsistencyFromCpp(mode) {\n    if (!mode)\n        return undefined;\n    if (mode === binding_1.default.query_scan_consistency.not_bounded) {\n        return querytypes_1.QueryScanConsistency.NotBounded;\n    }\n    else if (mode === binding_1.default.query_scan_consistency.request_plus) {\n        return querytypes_1.QueryScanConsistency.RequestPlus;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.queryScanConsistencyFromCpp = queryScanConsistencyFromCpp;\n/**\n * @internal\n */\nfunction queryProfileToCpp(mode) {\n    // Unspecified is allowed, and means no sync durability.\n    if (mode === null || mode === undefined) {\n        return binding_1.default.query_profile.off;\n    }\n    if (mode === querytypes_1.QueryProfileMode.Off) {\n        return binding_1.default.query_profile.off;\n    }\n    else if (mode === querytypes_1.QueryProfileMode.Phases) {\n        return binding_1.default.query_profile.phases;\n    }\n    else if (mode === querytypes_1.QueryProfileMode.Timings) {\n        return binding_1.default.query_profile.timings;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.queryProfileToCpp = queryProfileToCpp;\n/**\n * @internal\n */\nfunction analyticsScanConsistencyToCpp(mode) {\n    // Unspecified is allowed, and means no sync durability.\n    if (mode === null || mode === undefined) {\n        return binding_1.default.analytics_scan_consistency.not_bounded;\n    }\n    if (mode === analyticstypes_1.AnalyticsScanConsistency.NotBounded) {\n        return binding_1.default.analytics_scan_consistency.not_bounded;\n    }\n    else if (mode === analyticstypes_1.AnalyticsScanConsistency.RequestPlus) {\n        return binding_1.default.analytics_scan_consistency.request_plus;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.analyticsScanConsistencyToCpp = analyticsScanConsistencyToCpp;\n/**\n * @internal\n */\nfunction analyticsStatusFromCpp(status) {\n    if (status === binding_1.default.analytics_response_analytics_status.running) {\n        return analyticstypes_1.AnalyticsStatus.Running;\n    }\n    else if (status === binding_1.default.analytics_response_analytics_status.success) {\n        return analyticstypes_1.AnalyticsStatus.Success;\n    }\n    else if (status === binding_1.default.analytics_response_analytics_status.errors) {\n        return analyticstypes_1.AnalyticsStatus.Errors;\n    }\n    else if (status === binding_1.default.analytics_response_analytics_status.completed) {\n        return analyticstypes_1.AnalyticsStatus.Completed;\n    }\n    else if (status === binding_1.default.analytics_response_analytics_status.stopped) {\n        return analyticstypes_1.AnalyticsStatus.Stopped;\n    }\n    else if (status === binding_1.default.analytics_response_analytics_status.timedout) {\n        return analyticstypes_1.AnalyticsStatus.Timeout;\n    }\n    else if (status === binding_1.default.analytics_response_analytics_status.closed) {\n        return analyticstypes_1.AnalyticsStatus.Closed;\n    }\n    else if (status === binding_1.default.analytics_response_analytics_status.fatal) {\n        return analyticstypes_1.AnalyticsStatus.Fatal;\n    }\n    else if (status === binding_1.default.analytics_response_analytics_status.aborted) {\n        return analyticstypes_1.AnalyticsStatus.Aborted;\n    }\n    else if (status === binding_1.default.analytics_response_analytics_status.unknown) {\n        return analyticstypes_1.AnalyticsStatus.Unknown;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.analyticsStatusFromCpp = analyticsStatusFromCpp;\n/**\n * @internal\n */\nfunction searchScanConsistencyToCpp(mode) {\n    // Unspecified is allowed, and means no sync durability.\n    if (mode === null || mode === undefined) {\n        return binding_1.default.search_scan_consistency.not_bounded;\n    }\n    if (mode === searchtypes_1.SearchScanConsistency.NotBounded) {\n        return binding_1.default.search_scan_consistency.not_bounded;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.searchScanConsistencyToCpp = searchScanConsistencyToCpp;\n/**\n * @internal\n */\nfunction searchHighlightStyleToCpp(mode) {\n    // Unspecified is allowed, and means no sync durability.\n    if (mode === null || mode === undefined) {\n        return undefined;\n    }\n    if (mode === searchtypes_1.HighlightStyle.ANSI) {\n        return binding_1.default.search_highlight_style.ansi;\n    }\n    else if (mode === searchtypes_1.HighlightStyle.HTML) {\n        return binding_1.default.search_highlight_style.html;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.searchHighlightStyleToCpp = searchHighlightStyleToCpp;\n/**\n * @internal\n */\nfunction mutationStateToCpp(state) {\n    if (state === null || state === undefined) {\n        return { tokens: [] };\n    }\n    const tokens = [];\n    for (const bucketName in state._data) {\n        for (const vbId in state._data[bucketName]) {\n            const token = state._data[bucketName][vbId];\n            tokens.push(token);\n        }\n    }\n    return { tokens: tokens };\n}\nexports.mutationStateToCpp = mutationStateToCpp;\n/**\n * @internal\n */\nfunction serviceTypeToCpp(service) {\n    if (service === generaltypes_1.ServiceType.KeyValue) {\n        return binding_1.default.service_type.key_value;\n    }\n    else if (service === generaltypes_1.ServiceType.Query) {\n        return binding_1.default.service_type.query;\n    }\n    else if (service === generaltypes_1.ServiceType.Analytics) {\n        return binding_1.default.service_type.analytics;\n    }\n    else if (service === generaltypes_1.ServiceType.Search) {\n        return binding_1.default.service_type.search;\n    }\n    else if (service === generaltypes_1.ServiceType.Views) {\n        return binding_1.default.service_type.view;\n    }\n    else if (service === generaltypes_1.ServiceType.Management) {\n        return binding_1.default.service_type.management;\n    }\n    else if (service === generaltypes_1.ServiceType.Eventing) {\n        return binding_1.default.service_type.eventing;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.serviceTypeToCpp = serviceTypeToCpp;\n/**\n * @internal\n */\nfunction serviceTypeFromCpp(service) {\n    if (service === binding_1.default.service_type.key_value) {\n        return generaltypes_1.ServiceType.KeyValue;\n    }\n    else if (service === binding_1.default.service_type.query) {\n        return generaltypes_1.ServiceType.Query;\n    }\n    else if (service === binding_1.default.service_type.analytics) {\n        return generaltypes_1.ServiceType.Analytics;\n    }\n    else if (service === binding_1.default.service_type.search) {\n        return generaltypes_1.ServiceType.Search;\n    }\n    else if (service === binding_1.default.service_type.view) {\n        return generaltypes_1.ServiceType.Views;\n    }\n    else if (service === binding_1.default.service_type.management) {\n        return generaltypes_1.ServiceType.Management;\n    }\n    else if (service === binding_1.default.service_type.eventing) {\n        return generaltypes_1.ServiceType.Eventing;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.serviceTypeFromCpp = serviceTypeFromCpp;\n/**\n * @internal\n */\nfunction endpointStateFromCpp(service) {\n    if (service === binding_1.default.diag_endpoint_state.disconnected) {\n        return diagnosticstypes_1.EndpointState.Disconnected;\n    }\n    else if (service === binding_1.default.diag_endpoint_state.connecting) {\n        return diagnosticstypes_1.EndpointState.Connecting;\n    }\n    else if (service === binding_1.default.diag_endpoint_state.connected) {\n        return diagnosticstypes_1.EndpointState.Connected;\n    }\n    else if (service === binding_1.default.diag_endpoint_state.disconnecting) {\n        return diagnosticstypes_1.EndpointState.Disconnecting;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.endpointStateFromCpp = endpointStateFromCpp;\n/**\n * @internal\n */\nfunction txnExternalExceptionStringFromCpp(cause, message) {\n    if (cause === binding_1.default.transactions_external_exception.UNKNOWN) {\n        if (message) {\n            return message;\n        }\n        return 'unknown';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception\n            .ACTIVE_TRANSACTION_RECORD_ENTRY_NOT_FOUND) {\n        return 'active_transaction_record_entry_not_found';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.ACTIVE_TRANSACTION_RECORD_FULL) {\n        return 'active_transaction_record_full';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.ACTIVE_TRANSACTION_RECORD_NOT_FOUND) {\n        return 'active_transaction_record_not_found';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.DOCUMENT_ALREADY_IN_TRANSACTION) {\n        return 'document_already_in_transaction';\n    }\n    else if (cause === binding_1.default.transactions_external_exception.DOCUMENT_EXISTS_EXCEPTION) {\n        return 'document_exists_exception';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.DOCUMENT_NOT_FOUND_EXCEPTION) {\n        return 'document_not_found_exception';\n    }\n    else if (cause === binding_1.default.transactions_external_exception.NOT_SET) {\n        return 'not_set';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.FEATURE_NOT_AVAILABLE_EXCEPTION) {\n        return 'feature_not_available_exception';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.TRANSACTION_ABORTED_EXTERNALLY) {\n        return 'transaction_aborted_externally';\n    }\n    else if (cause === binding_1.default.transactions_external_exception.PREVIOUS_OPERATION_FAILED) {\n        return 'previous_operation_failed';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.FORWARD_COMPATIBILITY_FAILURE) {\n        return 'forward_compatibility_failure';\n    }\n    else if (cause === binding_1.default.transactions_external_exception.PARSING_FAILURE) {\n        return 'parsing_failure';\n    }\n    else if (cause === binding_1.default.transactions_external_exception.ILLEGAL_STATE_EXCEPTION) {\n        return 'illegal_state_exception';\n    }\n    else if (cause === binding_1.default.transactions_external_exception.COUCHBASE_EXCEPTION) {\n        return 'couchbase_exception';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.SERVICE_NOT_AVAILABLE_EXCEPTION) {\n        return 'service_not_available_exception';\n    }\n    else if (cause === binding_1.default.transactions_external_exception.REQUEST_CANCELED_EXCEPTION) {\n        return 'request_canceled_exception';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception\n            .CONCURRENT_OPERATIONS_DETECTED_ON_SAME_DOCUMENT) {\n        return 'concurrent_operations_detected_on_same_document';\n    }\n    else if (cause === binding_1.default.transactions_external_exception.COMMIT_NOT_PERMITTED) {\n        return 'commit_not_permitted';\n    }\n    else if (cause === binding_1.default.transactions_external_exception.ROLLBACK_NOT_PERMITTED) {\n        return 'rollback_not_permitted';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.TRANSACTION_ALREADY_ABORTED) {\n        return 'transaction_already_aborted';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.TRANSACTION_ALREADY_COMMITTED) {\n        return 'transaction_already_committed';\n    }\n    else if (cause ===\n        binding_1.default.transactions_external_exception.DOCUMENT_UNRETRIEVABLE_EXCEPTION) {\n        return 'document_unretrievable_exception';\n    }\n    return 'unknown';\n}\nexports.txnExternalExceptionStringFromCpp = txnExternalExceptionStringFromCpp;\n/**\n * @internal\n */\nfunction txnOpExeptionFromCpp(err, ctx) {\n    if (!err) {\n        return null;\n    }\n    const context = ctx ? ctx : undefined;\n    if (err.cause ===\n        binding_1.default.transactions_external_exception.DOCUMENT_EXISTS_EXCEPTION) {\n        return new errs.DocumentExistsError(new Error(txnExternalExceptionStringFromCpp(err.cause, err.message)), context);\n    }\n    else if (err.cause ===\n        binding_1.default.transactions_external_exception.DOCUMENT_NOT_FOUND_EXCEPTION) {\n        return new errs.DocumentNotFoundError(new Error(txnExternalExceptionStringFromCpp(err.cause, err.message)), context);\n    }\n    else if (err.cause === binding_1.default.transactions_external_exception.PARSING_FAILURE) {\n        return new errs.ParsingFailureError(new Error(txnExternalExceptionStringFromCpp(err.cause, err.message)), context);\n    }\n    else if (err.cause === binding_1.default.transactions_external_exception.COUCHBASE_EXCEPTION) {\n        const cause = txnExternalExceptionStringFromCpp(err.cause, err.message);\n        return new errs.CouchbaseError(cause, new Error(cause), context);\n    }\n    else if (err.cause ===\n        binding_1.default.transactions_external_exception.DOCUMENT_UNRETRIEVABLE_EXCEPTION) {\n        return new errs.DocumentUnretrievableError(new Error(txnExternalExceptionStringFromCpp(err.cause, err.message)), context);\n    }\n    return err;\n}\nexports.txnOpExeptionFromCpp = txnOpExeptionFromCpp;\n/**\n * @internal\n */\nfunction pingStateFromCpp(service) {\n    if (service === binding_1.default.diag_ping_state.ok) {\n        return diagnosticstypes_1.PingState.Ok;\n    }\n    else if (service === binding_1.default.diag_ping_state.timeout) {\n        return diagnosticstypes_1.PingState.Timeout;\n    }\n    else if (service === binding_1.default.diag_ping_state.error) {\n        return diagnosticstypes_1.PingState.Error;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.pingStateFromCpp = pingStateFromCpp;\n/**\n * @internal\n */\nfunction contextFromCpp(err) {\n    if (!err) {\n        return null;\n    }\n    let retry_reasons = [];\n    if ('retry_reasons' in err) {\n        retry_reasons = err.retry_reasons.map(retryReasonFromCpp);\n    }\n    let context = null;\n    if (err.ctxtype === 'key_value') {\n        context = new errctxs.KeyValueErrorContext({\n            status_code: err.status_code,\n            opaque: err.opaque,\n            cas: err.cas,\n            key: err.id ? err.id.key : '',\n            bucket: err.id ? err.id.bucket : '',\n            collection: err.id ? err.id.collection : '',\n            scope: err.id ? err.id.scope : '',\n            context: err.enhanced_error_info ? err.enhanced_error_info.context : '',\n            ref: err.enhanced_error_info ? err.enhanced_error_info.reference : '',\n            last_dispatched_from: err.last_dispatched_from\n                ? err.last_dispatched_from\n                : '',\n            last_dispatched_to: err.last_dispatched_to ? err.last_dispatched_to : '',\n            retry_attempts: err.retry_attempts ? err.retry_attempts : 0,\n            retry_reasons: retry_reasons,\n        });\n    }\n    else if (err.ctxtype === 'view') {\n        context = new errctxs.ViewErrorContext({\n            design_document: err.design_document_name,\n            view: err.view_name,\n            parameters: err.query_string,\n            http_response_code: err.http_status,\n            http_response_body: err.http_body,\n            last_dispatched_from: err.last_dispatched_from\n                ? err.last_dispatched_from\n                : '',\n            last_dispatched_to: err.last_dispatched_to ? err.last_dispatched_to : '',\n            retry_attempts: err.retry_attempts ? err.retry_attempts : 0,\n            retry_reasons: retry_reasons,\n        });\n    }\n    else if (err.ctxtype === 'query') {\n        context = new errctxs.QueryErrorContext({\n            statement: err.statement,\n            client_context_id: err.client_context_id,\n            parameters: err.parameters,\n            http_response_code: err.http_status,\n            http_response_body: err.http_body,\n            last_dispatched_from: err.last_dispatched_from\n                ? err.last_dispatched_from\n                : '',\n            last_dispatched_to: err.last_dispatched_to ? err.last_dispatched_to : '',\n            retry_attempts: err.retry_attempts ? err.retry_attempts : 0,\n            retry_reasons: retry_reasons,\n        });\n    }\n    else if (err.ctxtype === 'search') {\n        context = new errctxs.SearchErrorContext({\n            index_name: err.index_name,\n            query: err.query,\n            parameters: err.parameters,\n            http_response_code: err.http_status,\n            http_response_body: err.http_body,\n            last_dispatched_from: err.last_dispatched_from\n                ? err.last_dispatched_from\n                : '',\n            last_dispatched_to: err.last_dispatched_to ? err.last_dispatched_to : '',\n            retry_attempts: err.retry_attempts ? err.retry_attempts : 0,\n            retry_reasons: retry_reasons,\n        });\n    }\n    else if (err.ctxtype === 'analytics') {\n        context = new errctxs.AnalyticsErrorContext({\n            statement: err.statement,\n            client_context_id: err.client_context_id,\n            parameters: err.parameters,\n            http_response_code: err.http_status,\n            http_response_body: err.http_body,\n            last_dispatched_from: err.last_dispatched_from\n                ? err.last_dispatched_from\n                : '',\n            last_dispatched_to: err.last_dispatched_to ? err.last_dispatched_to : '',\n            retry_attempts: err.retry_attempts ? err.retry_attempts : 0,\n            retry_reasons: retry_reasons,\n        });\n    }\n    else if (err.ctxtype === 'http') {\n        context = new errctxs.HttpErrorContext({\n            method: err.method,\n            request_path: err.path,\n            response_code: err.http_status,\n            response_body: err.http_body,\n            last_dispatched_from: err.last_dispatched_from\n                ? err.last_dispatched_from\n                : '',\n            last_dispatched_to: err.last_dispatched_to ? err.last_dispatched_to : '',\n            retry_attempts: err.retry_attempts ? err.retry_attempts : 0,\n            retry_reasons: retry_reasons,\n        });\n    }\n    return context;\n}\nexports.contextFromCpp = contextFromCpp;\n/**\n * @internal\n */\nfunction retryReasonFromCpp(reason) {\n    if (reason === binding_1.default.retry_reason.do_not_retry) {\n        return 'do_not_retry';\n    }\n    else if (reason === binding_1.default.retry_reason.unknown) {\n        return 'unknown';\n    }\n    else if (reason === binding_1.default.retry_reason.socket_not_available) {\n        return 'socket_not_available';\n    }\n    else if (reason === binding_1.default.retry_reason.service_not_available) {\n        return 'service_not_available';\n    }\n    else if (reason === binding_1.default.retry_reason.node_not_available) {\n        return 'node_not_available';\n    }\n    else if (reason === binding_1.default.retry_reason.key_value_not_my_vbucket) {\n        return 'key_value_not_my_vbucket';\n    }\n    else if (reason === binding_1.default.retry_reason.key_value_collection_outdated) {\n        return 'key_value_collection_outdated';\n    }\n    else if (reason === binding_1.default.retry_reason.key_value_error_map_retry_indicated) {\n        return 'key_value_error_map_retry_indicated';\n    }\n    else if (reason === binding_1.default.retry_reason.key_value_locked) {\n        return 'key_value_locked';\n    }\n    else if (reason === binding_1.default.retry_reason.key_value_temporary_failure) {\n        return 'key_value_temporary_failure';\n    }\n    else if (reason === binding_1.default.retry_reason.key_value_sync_write_in_progress) {\n        return 'key_value_sync_write_in_progress';\n    }\n    else if (reason === binding_1.default.retry_reason.key_value_sync_write_re_commit_in_progress) {\n        return 'key_value_sync_write_re_commit_in_progress';\n    }\n    else if (reason === binding_1.default.retry_reason.service_response_code_indicated) {\n        return 'service_response_code_indicated';\n    }\n    else if (reason === binding_1.default.retry_reason.socket_closed_while_in_flight) {\n        return 'socket_closed_while_in_flight';\n    }\n    else if (reason === binding_1.default.retry_reason.circuit_breaker_open) {\n        return 'circuit_breaker_open';\n    }\n    else if (reason === binding_1.default.retry_reason.query_prepared_statement_failure) {\n        return 'query_prepared_statement_failure';\n    }\n    else if (reason === binding_1.default.retry_reason.query_index_not_found) {\n        return 'query_index_not_found';\n    }\n    else if (reason === binding_1.default.retry_reason.analytics_temporary_failure) {\n        return 'analytics_temporary_failure';\n    }\n    else if (reason === binding_1.default.retry_reason.search_too_many_requests) {\n        return 'search_too_many_requests';\n    }\n    else if (reason === binding_1.default.retry_reason.views_temporary_failure) {\n        return 'views_temporary_failure';\n    }\n    else if (reason === binding_1.default.retry_reason.views_no_active_partition) {\n        return 'views_no_active_partition';\n    }\n    else {\n        return 'unknown';\n    }\n}\n/**\n * @internal\n */\nfunction errorFromCpp(err) {\n    var _a;\n    if (!err) {\n        return null;\n    }\n    // BUG(JSCBC-1010): We shouldn't need to special case these.\n    if (err.ctxtype === 'transaction_operation_failed') {\n        const cause = txnExternalExceptionStringFromCpp(err.cause, err.message);\n        if (cause == 'feature_not_available_exception') {\n            const msg = 'Possibly attempting a binary transaction operation with a server version < 7.6.2';\n            return new errs.TransactionOperationFailedError(new errs.FeatureNotAvailableError(new Error(msg)));\n        }\n        return new errs.TransactionOperationFailedError(new Error(txnExternalExceptionStringFromCpp(err.cause, err.message)));\n    }\n    else if (err.ctxtype === 'transaction_op_exception') {\n        let txnContext = null;\n        if ((_a = err.ctx) === null || _a === void 0 ? void 0 : _a.cause) {\n            txnContext = contextFromCpp(err.ctx.cause);\n        }\n        return txnOpExeptionFromCpp(err, txnContext);\n    }\n    else if (err.ctxtype === 'transaction_exception') {\n        if (err.type === binding_1.default.transactions_failure_type.FAIL) {\n            return new errs.TransactionFailedError(new Error(txnExternalExceptionStringFromCpp(err.cause, err.message)));\n        }\n        else if (err.type === binding_1.default.transactions_failure_type.EXPIRY) {\n            return new errs.TransactionExpiredError(new Error(txnExternalExceptionStringFromCpp(err.cause, err.message)));\n        }\n        else if (err.type === binding_1.default.transactions_failure_type.COMMIT_AMBIGUOUS) {\n            return new errs.TransactionCommitAmbiguousError(new Error(txnExternalExceptionStringFromCpp(err.cause, err.message)));\n        }\n        return new errs.TransactionFailedError(new Error(txnExternalExceptionStringFromCpp(err.cause, err.message)));\n    }\n    const baseErr = err;\n    const contextOrNull = contextFromCpp(err);\n    const context = contextOrNull ? contextOrNull : undefined;\n    if ('retry_reasons' in baseErr && Array.isArray(baseErr.retry_reasons)) {\n        baseErr.retry_reasons = baseErr.retry_reasons.map(retryReasonFromCpp);\n    }\n    switch (err.code) {\n        case binding_1.default.errc_common.request_canceled:\n            return new errs.RequestCanceledError(baseErr, context);\n        case binding_1.default.errc_common.invalid_argument:\n            return new errs.InvalidArgumentError(baseErr, context);\n        case binding_1.default.errc_common.service_not_available:\n            return new errs.ServiceNotAvailableError(baseErr, context);\n        case binding_1.default.errc_common.internal_server_failure:\n            return new errs.InternalServerFailureError(baseErr, context);\n        case binding_1.default.errc_common.authentication_failure:\n            return new errs.AuthenticationFailureError(baseErr, context);\n        case binding_1.default.errc_common.temporary_failure:\n            return new errs.TemporaryFailureError(baseErr, context);\n        case binding_1.default.errc_common.parsing_failure:\n            return new errs.ParsingFailureError(baseErr, context);\n        case binding_1.default.errc_common.cas_mismatch:\n            return new errs.CasMismatchError(baseErr, context);\n        case binding_1.default.errc_common.bucket_not_found:\n            return new errs.BucketNotFoundError(baseErr, context);\n        case binding_1.default.errc_common.collection_not_found:\n            return new errs.CollectionNotFoundError(baseErr, context);\n        case binding_1.default.errc_common.unsupported_operation:\n            return new errs.UnsupportedOperationError(baseErr, context);\n        case binding_1.default.errc_common.unambiguous_timeout:\n            return new errs.UnambiguousTimeoutError(baseErr, context);\n        case binding_1.default.errc_common.ambiguous_timeout:\n            return new errs.AmbiguousTimeoutError(baseErr, context);\n        case binding_1.default.errc_common.feature_not_available:\n            return new errs.FeatureNotAvailableError(baseErr, context);\n        case binding_1.default.errc_common.scope_not_found:\n            return new errs.ScopeNotFoundError(baseErr, context);\n        case binding_1.default.errc_common.index_not_found:\n            return new errs.IndexNotFoundError(baseErr, context);\n        case binding_1.default.errc_common.index_exists:\n            return new errs.IndexExistsError(baseErr, context);\n        case binding_1.default.errc_common.decoding_failure:\n            return new errs.DecodingFailureError(baseErr, context);\n        case binding_1.default.errc_common.rate_limited:\n            return new errs.RateLimitedError(baseErr, context);\n        case binding_1.default.errc_common.quota_limited:\n            return new errs.QuotaLimitedError(baseErr, context);\n        case binding_1.default.errc_key_value.document_not_found:\n            return new errs.DocumentNotFoundError(baseErr, context);\n        case binding_1.default.errc_key_value.document_irretrievable:\n            return new errs.DocumentUnretrievableError(baseErr, context);\n        case binding_1.default.errc_key_value.document_locked:\n            return new errs.DocumentLockedError(baseErr, context);\n        case binding_1.default.errc_key_value.document_not_locked:\n            return new errs.DocumentNotLockedError(baseErr, context);\n        case binding_1.default.errc_key_value.value_too_large:\n            return new errs.ValueTooLargeError(baseErr, context);\n        case binding_1.default.errc_key_value.document_exists:\n            return new errs.DocumentExistsError(baseErr, context);\n        case binding_1.default.errc_key_value.durability_level_not_available:\n            return new errs.DurabilityLevelNotAvailableError(baseErr, context);\n        case binding_1.default.errc_key_value.durability_impossible:\n            return new errs.DurabilityImpossibleError(baseErr, context);\n        case binding_1.default.errc_key_value.durability_ambiguous:\n            return new errs.DurabilityAmbiguousError(baseErr, context);\n        case binding_1.default.errc_key_value.durable_write_in_progress:\n            return new errs.DurableWriteInProgressError(baseErr, context);\n        case binding_1.default.errc_key_value.durable_write_re_commit_in_progress:\n            return new errs.DurableWriteReCommitInProgressError(baseErr, context);\n        case binding_1.default.errc_key_value.path_not_found:\n            return new errs.PathNotFoundError(baseErr, context);\n        case binding_1.default.errc_key_value.path_mismatch:\n            return new errs.PathMismatchError(baseErr, context);\n        case binding_1.default.errc_key_value.path_invalid:\n            return new errs.PathInvalidError(baseErr, context);\n        case binding_1.default.errc_key_value.path_too_big:\n            return new errs.PathTooBigError(baseErr, context);\n        case binding_1.default.errc_key_value.path_too_deep:\n            return new errs.PathTooDeepError(baseErr, context);\n        case binding_1.default.errc_key_value.value_too_deep:\n            return new errs.ValueTooDeepError(baseErr, context);\n        case binding_1.default.errc_key_value.value_invalid:\n            return new errs.ValueInvalidError(baseErr, context);\n        case binding_1.default.errc_key_value.document_not_json:\n            return new errs.DocumentNotJsonError(baseErr, context);\n        case binding_1.default.errc_key_value.number_too_big:\n            return new errs.NumberTooBigError(baseErr, context);\n        case binding_1.default.errc_key_value.delta_invalid:\n            return new errs.DeltaInvalidError(baseErr, context);\n        case binding_1.default.errc_key_value.path_exists:\n            return new errs.PathExistsError(baseErr, context);\n        case binding_1.default.errc_key_value.xattr_unknown_macro:\n        case binding_1.default.errc_key_value.xattr_invalid_key_combo:\n        case binding_1.default.errc_key_value.xattr_unknown_virtual_attribute:\n        case binding_1.default.errc_key_value.xattr_cannot_modify_virtual_attribute:\n        case binding_1.default.errc_key_value.xattr_no_access:\n        case binding_1.default.errc_key_value.cannot_revive_living_document:\n            // These error types are converted into generic ones instead.\n            break;\n        case binding_1.default.errc_query.planning_failure:\n            return new errs.PlanningFailureError(baseErr, context);\n        case binding_1.default.errc_query.index_failure:\n            return new errs.IndexFailureError(baseErr, context);\n        case binding_1.default.errc_query.prepared_statement_failure:\n            return new errs.PreparedStatementFailureError(baseErr, context);\n        case binding_1.default.errc_query.dml_failure:\n            return new errs.DmlFailureError(baseErr, context);\n        case binding_1.default.errc_analytics.compilation_failure:\n            return new errs.CompilationFailureError(baseErr, context);\n        case binding_1.default.errc_analytics.job_queue_full:\n            return new errs.JobQueueFullError(baseErr, context);\n        case binding_1.default.errc_analytics.dataset_not_found:\n            return new errs.DatasetNotFoundError(baseErr, context);\n        case binding_1.default.errc_analytics.dataverse_not_found:\n            return new errs.DataverseNotFoundError(baseErr, context);\n        case binding_1.default.errc_analytics.dataset_exists:\n            return new errs.DatasetExistsError(baseErr, context);\n        case binding_1.default.errc_analytics.dataverse_exists:\n            return new errs.DataverseExistsError(baseErr, context);\n        case binding_1.default.errc_analytics.link_not_found:\n            return new errs.LinkNotFoundError(baseErr, context);\n        case binding_1.default.errc_analytics.link_exists:\n            return new errs.LinkExistsError(baseErr, context);\n        case binding_1.default.errc_search.index_not_ready:\n            return new errs.IndexNotReadyError(baseErr, context);\n        case binding_1.default.errc_search.consistency_mismatch:\n            // These error types are converted into generic ones instead.\n            break;\n        case binding_1.default.errc_view.view_not_found:\n            return new errs.ViewNotFoundError(baseErr, context);\n        case binding_1.default.errc_view.design_document_not_found:\n            return new errs.DesignDocumentNotFoundError(baseErr, context);\n        case binding_1.default.errc_management.collection_exists:\n            return new errs.CollectionExistsError(baseErr, context);\n        case binding_1.default.errc_management.scope_exists:\n            return new errs.ScopeExistsError(baseErr, context);\n        case binding_1.default.errc_management.user_not_found:\n            return new errs.UserNotFoundError(baseErr, context);\n        case binding_1.default.errc_management.group_not_found:\n            return new errs.GroupNotFoundError(baseErr, context);\n        case binding_1.default.errc_management.bucket_exists:\n            return new errs.BucketExistsError(baseErr, context);\n        case binding_1.default.errc_management.user_exists:\n            return new errs.UserExistsError(baseErr, context);\n        case binding_1.default.errc_management.bucket_not_flushable:\n            return new errs.BucketNotFlushableError(baseErr, context);\n        case binding_1.default.errc_management.eventing_function_not_found:\n            return new errs.EventingFunctionNotFoundError(baseErr, context);\n        case binding_1.default.errc_management.eventing_function_not_deployed:\n            return new errs.EventingFunctionNotDeployedError(baseErr, context);\n        case binding_1.default.errc_management.eventing_function_compilation_failure:\n            return new errs.EventingFunctionCompilationFailureError(baseErr, context);\n        case binding_1.default.errc_management.eventing_function_identical_keyspace:\n            return new errs.EventingFunctionIdenticalKeyspaceError(baseErr, context);\n        case binding_1.default.errc_management.eventing_function_not_bootstrapped:\n            return new errs.EventingFunctionNotBootstrappedError(baseErr, context);\n        case binding_1.default.errc_management.eventing_function_deployed:\n            return new errs.EventingFunctionDeployedError(baseErr, context);\n        case binding_1.default.errc_management.eventing_function_paused:\n            return new errs.EventingFunctionPausedError(baseErr, context);\n    }\n    return baseErr;\n}\nexports.errorFromCpp = errorFromCpp;\n/**\n * @internal\n */\nfunction scanTypeToCpp(scanType) {\n    var _a, _b, _c, _d;\n    if (scanType instanceof rangeScan_1.RangeScan) {\n        return {\n            from: scanType.start !== undefined\n                ? {\n                    term: scanType.start.term,\n                    exclusive: (_b = (_a = scanType.start) === null || _a === void 0 ? void 0 : _a.exclusive) !== null && _b !== void 0 ? _b : false,\n                }\n                : undefined,\n            to: scanType.end !== undefined\n                ? {\n                    term: scanType.end.term,\n                    exclusive: (_d = (_c = scanType.end) === null || _c === void 0 ? void 0 : _c.exclusive) !== null && _d !== void 0 ? _d : false,\n                }\n                : undefined,\n        };\n    }\n    else if (scanType instanceof rangeScan_1.SamplingScan) {\n        return {\n            limit: scanType.limit,\n            seed: scanType.seed,\n        };\n    }\n    else {\n        return {\n            prefix: scanType.prefix,\n        };\n    }\n}\nexports.scanTypeToCpp = scanTypeToCpp;\n/**\n * @internal\n */\nfunction bucketTypeToCpp(type) {\n    if (type === null || type === undefined) {\n        return binding_1.default.management_cluster_bucket_type.couchbase;\n    }\n    if (type === bucketmanager_1.BucketType.Couchbase) {\n        return binding_1.default.management_cluster_bucket_type.couchbase;\n    }\n    else if (type === bucketmanager_1.BucketType.Ephemeral) {\n        return binding_1.default.management_cluster_bucket_type.ephemeral;\n    }\n    else if (type === bucketmanager_1.BucketType.Memcached) {\n        return binding_1.default.management_cluster_bucket_type.memcached;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.bucketTypeToCpp = bucketTypeToCpp;\n/**\n * @internal\n */\nfunction bucketTypeFromCpp(type) {\n    if (type === binding_1.default.management_cluster_bucket_type.couchbase) {\n        return bucketmanager_1.BucketType.Couchbase;\n    }\n    else if (type === binding_1.default.management_cluster_bucket_type.ephemeral) {\n        return bucketmanager_1.BucketType.Ephemeral;\n    }\n    else if (type === binding_1.default.management_cluster_bucket_type.memcached) {\n        return bucketmanager_1.BucketType.Memcached;\n    }\n    else if (type === binding_1.default.management_cluster_bucket_type.unknown) {\n        return undefined;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.bucketTypeFromCpp = bucketTypeFromCpp;\n/**\n * @internal\n */\nfunction bucketCompressionModeToCpp(mode) {\n    if (mode === null || mode === undefined) {\n        return binding_1.default.management_cluster_bucket_compression.unknown;\n    }\n    if (mode === bucketmanager_1.CompressionMode.Active) {\n        return binding_1.default.management_cluster_bucket_compression.active;\n    }\n    else if (mode === bucketmanager_1.CompressionMode.Passive) {\n        return binding_1.default.management_cluster_bucket_compression.passive;\n    }\n    else if (mode === bucketmanager_1.CompressionMode.Off) {\n        return binding_1.default.management_cluster_bucket_compression.off;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.bucketCompressionModeToCpp = bucketCompressionModeToCpp;\n/**\n * @internal\n */\nfunction bucketCompressionModeFromCpp(mode) {\n    if (mode === binding_1.default.management_cluster_bucket_compression.active) {\n        return bucketmanager_1.CompressionMode.Active;\n    }\n    else if (mode === binding_1.default.management_cluster_bucket_compression.passive) {\n        return bucketmanager_1.CompressionMode.Passive;\n    }\n    else if (mode === binding_1.default.management_cluster_bucket_compression.off) {\n        return bucketmanager_1.CompressionMode.Off;\n    }\n    else if (mode === binding_1.default.management_cluster_bucket_compression.unknown) {\n        return undefined;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.bucketCompressionModeFromCpp = bucketCompressionModeFromCpp;\n/**\n * @internal\n */\nfunction bucketEvictionPolicyToCpp(policy) {\n    if (policy === null || policy === undefined) {\n        return binding_1.default.management_cluster_bucket_eviction_policy.unknown;\n    }\n    if (policy === bucketmanager_1.EvictionPolicy.FullEviction) {\n        return binding_1.default.management_cluster_bucket_eviction_policy.full;\n    }\n    else if (policy === bucketmanager_1.EvictionPolicy.ValueOnly) {\n        return binding_1.default.management_cluster_bucket_eviction_policy.value_only;\n    }\n    else if (policy === bucketmanager_1.EvictionPolicy.NotRecentlyUsed) {\n        return binding_1.default.management_cluster_bucket_eviction_policy.not_recently_used;\n    }\n    else if (policy === bucketmanager_1.EvictionPolicy.NoEviction) {\n        return binding_1.default.management_cluster_bucket_eviction_policy.no_eviction;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.bucketEvictionPolicyToCpp = bucketEvictionPolicyToCpp;\n/**\n * @internal\n */\nfunction bucketEvictionPolicyFromCpp(policy) {\n    if (policy === binding_1.default.management_cluster_bucket_eviction_policy.full) {\n        return bucketmanager_1.EvictionPolicy.FullEviction;\n    }\n    else if (policy === binding_1.default.management_cluster_bucket_eviction_policy.value_only) {\n        return bucketmanager_1.EvictionPolicy.ValueOnly;\n    }\n    else if (policy ===\n        binding_1.default.management_cluster_bucket_eviction_policy.not_recently_used) {\n        return bucketmanager_1.EvictionPolicy.NotRecentlyUsed;\n    }\n    else if (policy === binding_1.default.management_cluster_bucket_eviction_policy.no_eviction) {\n        return bucketmanager_1.EvictionPolicy.NoEviction;\n    }\n    else if (policy === binding_1.default.management_cluster_bucket_eviction_policy.unknown) {\n        return undefined;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.bucketEvictionPolicyFromCpp = bucketEvictionPolicyFromCpp;\n/**\n * @internal\n */\nfunction bucketStorageBackendToCpp(backend) {\n    if (backend === null || backend === undefined) {\n        return binding_1.default.management_cluster_bucket_storage_backend.unknown;\n    }\n    if (backend === bucketmanager_1.StorageBackend.Couchstore) {\n        return binding_1.default.management_cluster_bucket_storage_backend.couchstore;\n    }\n    else if (backend === bucketmanager_1.StorageBackend.Magma) {\n        return binding_1.default.management_cluster_bucket_storage_backend.magma;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.bucketStorageBackendToCpp = bucketStorageBackendToCpp;\n/**\n * @internal\n */\nfunction bucketStorageBackendFromCpp(backend) {\n    if (backend === binding_1.default.management_cluster_bucket_storage_backend.couchstore) {\n        return bucketmanager_1.StorageBackend.Couchstore;\n    }\n    else if (backend === binding_1.default.management_cluster_bucket_storage_backend.magma) {\n        return bucketmanager_1.StorageBackend.Magma;\n    }\n    else if (backend === binding_1.default.management_cluster_bucket_storage_backend.unknown) {\n        return undefined;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.bucketStorageBackendFromCpp = bucketStorageBackendFromCpp;\n/**\n * @internal\n */\nfunction bucketConflictResolutionTypeToCpp(type) {\n    if (type === null || type === undefined) {\n        return binding_1.default.management_cluster_bucket_conflict_resolution.unknown;\n    }\n    if (type === bucketmanager_1.ConflictResolutionType.SequenceNumber) {\n        return binding_1.default.management_cluster_bucket_conflict_resolution.sequence_number;\n    }\n    else if (type === bucketmanager_1.ConflictResolutionType.Timestamp) {\n        return binding_1.default.management_cluster_bucket_conflict_resolution.timestamp;\n    }\n    else if (type === bucketmanager_1.ConflictResolutionType.Custom) {\n        return binding_1.default.management_cluster_bucket_conflict_resolution.custom;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.bucketConflictResolutionTypeToCpp = bucketConflictResolutionTypeToCpp;\n/**\n * @internal\n */\nfunction bucketConflictResolutionTypeFromCpp(type) {\n    if (type ===\n        binding_1.default.management_cluster_bucket_conflict_resolution.sequence_number) {\n        return bucketmanager_1.ConflictResolutionType.SequenceNumber;\n    }\n    else if (type === binding_1.default.management_cluster_bucket_conflict_resolution.timestamp) {\n        return bucketmanager_1.ConflictResolutionType.Timestamp;\n    }\n    else if (type === binding_1.default.management_cluster_bucket_conflict_resolution.custom) {\n        return bucketmanager_1.ConflictResolutionType.Custom;\n    }\n    else if (type === binding_1.default.management_cluster_bucket_conflict_resolution.unknown) {\n        return undefined;\n    }\n    throw new errs.InvalidArgumentError();\n}\nexports.bucketConflictResolutionTypeFromCpp = bucketConflictResolutionTypeFromCpp;\n/**\n * @internal\n */\nfunction vectorQueryCombinationToCpp(combination) {\n    if (combination === vectorsearch_1.VectorQueryCombination.AND) {\n        return binding_1.default.vector_query_combination.combination_and;\n    }\n    else if (combination === vectorsearch_1.VectorQueryCombination.OR) {\n        return binding_1.default.vector_query_combination.combination_or;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized VectorQueryCombination.'));\n}\nexports.vectorQueryCombinationToCpp = vectorQueryCombinationToCpp;\n/**\n * @internal\n */\nfunction designDocumentNamespaceFromCpp(namespace) {\n    if (namespace === binding_1.default.design_document_namespace.production) {\n        return viewtypes_1.DesignDocumentNamespace.Production;\n    }\n    else if (namespace === binding_1.default.design_document_namespace.development) {\n        return viewtypes_1.DesignDocumentNamespace.Development;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized DesignDocumentNamespace.'));\n}\nexports.designDocumentNamespaceFromCpp = designDocumentNamespaceFromCpp;\n/**\n * @internal\n */\nfunction designDocumentNamespaceToCpp(namespace) {\n    if (namespace === viewtypes_1.DesignDocumentNamespace.Production) {\n        return binding_1.default.design_document_namespace.production;\n    }\n    else if (namespace === viewtypes_1.DesignDocumentNamespace.Development) {\n        return binding_1.default.design_document_namespace.development;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized DesignDocumentNamespace.'));\n}\nexports.designDocumentNamespaceToCpp = designDocumentNamespaceToCpp;\n/**\n * @internal\n */\nfunction transactionKeyspaceToCpp(keyspace) {\n    var _a, _b;\n    if (!keyspace)\n        return undefined;\n    return {\n        bucket_name: keyspace.bucket,\n        scope_name: (_a = keyspace.scope) !== null && _a !== void 0 ? _a : '_default',\n        collection_name: (_b = keyspace.collection) !== null && _b !== void 0 ? _b : '_default',\n    };\n}\nexports.transactionKeyspaceToCpp = transactionKeyspaceToCpp;\n/**\n * @internal\n */\nfunction eventingBucketBindingAccessToCpp(access) {\n    if (access === eventingfunctionmanager_1.EventingFunctionBucketAccess.ReadOnly) {\n        return binding_1.default.management_eventing_function_bucket_access.read_only;\n    }\n    if (access === eventingfunctionmanager_1.EventingFunctionBucketAccess.ReadWrite) {\n        return binding_1.default.management_eventing_function_bucket_access.read_write;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionBucketAccess'));\n}\nexports.eventingBucketBindingAccessToCpp = eventingBucketBindingAccessToCpp;\n/**\n * @internal\n */\nfunction eventingBucketBindingAccessFromCpp(access) {\n    if (access === binding_1.default.management_eventing_function_bucket_access.read_only) {\n        return eventingfunctionmanager_1.EventingFunctionBucketAccess.ReadOnly;\n    }\n    if (access === binding_1.default.management_eventing_function_bucket_access.read_write) {\n        return eventingfunctionmanager_1.EventingFunctionBucketAccess.ReadWrite;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionBucketAccess'));\n}\nexports.eventingBucketBindingAccessFromCpp = eventingBucketBindingAccessFromCpp;\n/**\n * @internal\n */\nfunction eventingFunctionDcpBoundaryToCpp(boundary) {\n    if (!boundary)\n        return undefined;\n    if (boundary === eventingfunctionmanager_1.EventingFunctionDcpBoundary.Everything) {\n        return binding_1.default.management_eventing_function_dcp_boundary.everything;\n    }\n    if (boundary === eventingfunctionmanager_1.EventingFunctionDcpBoundary.FromNow) {\n        return binding_1.default.management_eventing_function_dcp_boundary.from_now;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionDcpBoundary'));\n}\nexports.eventingFunctionDcpBoundaryToCpp = eventingFunctionDcpBoundaryToCpp;\n/**\n * @internal\n */\nfunction eventingFunctionDcpBoundaryFromCpp(boundary) {\n    if (!boundary)\n        return undefined;\n    if (boundary === binding_1.default.management_eventing_function_dcp_boundary.everything) {\n        return eventingfunctionmanager_1.EventingFunctionDcpBoundary.Everything;\n    }\n    if (boundary === binding_1.default.management_eventing_function_dcp_boundary.from_now) {\n        return eventingfunctionmanager_1.EventingFunctionDcpBoundary.FromNow;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionDcpBoundary'));\n}\nexports.eventingFunctionDcpBoundaryFromCpp = eventingFunctionDcpBoundaryFromCpp;\n/**\n * @internal\n */\nfunction eventingFunctionDeploymentStatusToCpp(status) {\n    if (!status)\n        return undefined;\n    if (status === eventingfunctionmanager_1.EventingFunctionDeploymentStatus.Deployed) {\n        return binding_1.default.management_eventing_function_deployment_status.deployed;\n    }\n    if (status === eventingfunctionmanager_1.EventingFunctionDeploymentStatus.Undeployed) {\n        return binding_1.default.management_eventing_function_deployment_status.undeployed;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionDeploymentStatus'));\n}\nexports.eventingFunctionDeploymentStatusToCpp = eventingFunctionDeploymentStatusToCpp;\n/**\n * @internal\n */\nfunction eventingFunctionDeploymentStatusFromCpp(status) {\n    if (!status)\n        return undefined;\n    if (status === binding_1.default.management_eventing_function_deployment_status.deployed) {\n        return eventingfunctionmanager_1.EventingFunctionDeploymentStatus.Deployed;\n    }\n    if (status === binding_1.default.management_eventing_function_deployment_status.undeployed) {\n        return eventingfunctionmanager_1.EventingFunctionDeploymentStatus.Undeployed;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionDeploymentStatus'));\n}\nexports.eventingFunctionDeploymentStatusFromCpp = eventingFunctionDeploymentStatusFromCpp;\n/**\n * @internal\n */\nfunction eventingFunctionProcessingStatusToCpp(status) {\n    if (!status)\n        return undefined;\n    if (status === eventingfunctionmanager_1.EventingFunctionProcessingStatus.Running) {\n        return binding_1.default.management_eventing_function_processing_status.running;\n    }\n    if (status === eventingfunctionmanager_1.EventingFunctionProcessingStatus.Paused) {\n        return binding_1.default.management_eventing_function_processing_status.paused;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionProcessingStatus'));\n}\nexports.eventingFunctionProcessingStatusToCpp = eventingFunctionProcessingStatusToCpp;\n/**\n * @internal\n */\nfunction eventingFunctionProcessingStatusFromCpp(status) {\n    if (!status)\n        return undefined;\n    if (status === binding_1.default.management_eventing_function_processing_status.running) {\n        return eventingfunctionmanager_1.EventingFunctionProcessingStatus.Running;\n    }\n    if (status === binding_1.default.management_eventing_function_processing_status.paused) {\n        return eventingfunctionmanager_1.EventingFunctionProcessingStatus.Paused;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionProcessingStatus'));\n}\nexports.eventingFunctionProcessingStatusFromCpp = eventingFunctionProcessingStatusFromCpp;\n/**\n * @internal\n */\nfunction eventingFunctionLogLevelToCpp(level) {\n    if (!level)\n        return undefined;\n    if (level === eventingfunctionmanager_1.EventingFunctionLogLevel.Debug) {\n        return binding_1.default.management_eventing_function_log_level.debug;\n    }\n    if (level === eventingfunctionmanager_1.EventingFunctionLogLevel.Error) {\n        return binding_1.default.management_eventing_function_log_level.error;\n    }\n    if (level === eventingfunctionmanager_1.EventingFunctionLogLevel.Info) {\n        return binding_1.default.management_eventing_function_log_level.info;\n    }\n    if (level === eventingfunctionmanager_1.EventingFunctionLogLevel.Trace) {\n        return binding_1.default.management_eventing_function_log_level.trace;\n    }\n    if (level === eventingfunctionmanager_1.EventingFunctionLogLevel.Warning) {\n        return binding_1.default.management_eventing_function_log_level.warning;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionLogLevel'));\n}\nexports.eventingFunctionLogLevelToCpp = eventingFunctionLogLevelToCpp;\n/**\n * @internal\n */\nfunction eventingFunctionLogLevelFromCpp(level) {\n    if (!level)\n        return undefined;\n    if (level === binding_1.default.management_eventing_function_log_level.debug) {\n        return eventingfunctionmanager_1.EventingFunctionLogLevel.Debug;\n    }\n    if (level === binding_1.default.management_eventing_function_log_level.error) {\n        return eventingfunctionmanager_1.EventingFunctionLogLevel.Error;\n    }\n    if (level === binding_1.default.management_eventing_function_log_level.info) {\n        return eventingfunctionmanager_1.EventingFunctionLogLevel.Info;\n    }\n    if (level === binding_1.default.management_eventing_function_log_level.trace) {\n        return eventingfunctionmanager_1.EventingFunctionLogLevel.Trace;\n    }\n    if (level === binding_1.default.management_eventing_function_log_level.warning) {\n        return eventingfunctionmanager_1.EventingFunctionLogLevel.Warning;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionLogLevel'));\n}\nexports.eventingFunctionLogLevelFromCpp = eventingFunctionLogLevelFromCpp;\n/**\n * @internal\n */\nfunction eventingFunctionLanguageCompatibilityToCpp(compatibility) {\n    if (!compatibility)\n        return undefined;\n    if (compatibility === eventingfunctionmanager_1.EventingFunctionLanguageCompatibility.Version_6_0_0) {\n        return binding_1.default.management_eventing_function_language_compatibility\n            .version_6_0_0;\n    }\n    if (compatibility === eventingfunctionmanager_1.EventingFunctionLanguageCompatibility.Version_6_5_0) {\n        return binding_1.default.management_eventing_function_language_compatibility\n            .version_6_5_0;\n    }\n    if (compatibility === eventingfunctionmanager_1.EventingFunctionLanguageCompatibility.Version_6_6_2) {\n        return binding_1.default.management_eventing_function_language_compatibility\n            .version_6_6_2;\n    }\n    if (compatibility === eventingfunctionmanager_1.EventingFunctionLanguageCompatibility.Version_7_2_0) {\n        return binding_1.default.management_eventing_function_language_compatibility\n            .version_7_2_0;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionLanguageCompatibility'));\n}\nexports.eventingFunctionLanguageCompatibilityToCpp = eventingFunctionLanguageCompatibilityToCpp;\n/**\n * @internal\n */\nfunction eventingFunctionLanguageCompatibilityFromCpp(compatibility) {\n    if (!compatibility)\n        return undefined;\n    if (compatibility ===\n        binding_1.default.management_eventing_function_language_compatibility.version_6_0_0) {\n        return eventingfunctionmanager_1.EventingFunctionLanguageCompatibility.Version_6_0_0;\n    }\n    if (compatibility ===\n        binding_1.default.management_eventing_function_language_compatibility.version_6_5_0) {\n        return eventingfunctionmanager_1.EventingFunctionLanguageCompatibility.Version_6_5_0;\n    }\n    if (compatibility ===\n        binding_1.default.management_eventing_function_language_compatibility.version_6_6_2) {\n        return eventingfunctionmanager_1.EventingFunctionLanguageCompatibility.Version_6_6_2;\n    }\n    if (compatibility ===\n        binding_1.default.management_eventing_function_language_compatibility.version_7_2_0) {\n        return eventingfunctionmanager_1.EventingFunctionLanguageCompatibility.Version_7_2_0;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionLanguageCompatibility'));\n}\nexports.eventingFunctionLanguageCompatibilityFromCpp = eventingFunctionLanguageCompatibilityFromCpp;\n/**\n * @internal\n */\nfunction eventingFunctionStatusFromCpp(status) {\n    if (status === binding_1.default.management_eventing_function_status.undeployed) {\n        return eventingfunctionmanager_1.EventingFunctionStatus.Undeployed;\n    }\n    if (status === binding_1.default.management_eventing_function_status.deploying) {\n        return eventingfunctionmanager_1.EventingFunctionStatus.Deploying;\n    }\n    if (status === binding_1.default.management_eventing_function_status.deployed) {\n        return eventingfunctionmanager_1.EventingFunctionStatus.Deployed;\n    }\n    if (status === binding_1.default.management_eventing_function_status.undeploying) {\n        return eventingfunctionmanager_1.EventingFunctionStatus.Undeploying;\n    }\n    if (status === binding_1.default.management_eventing_function_status.paused) {\n        return eventingfunctionmanager_1.EventingFunctionStatus.Paused;\n    }\n    if (status === binding_1.default.management_eventing_function_status.pausing) {\n        return eventingfunctionmanager_1.EventingFunctionStatus.Pausing;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionStatus'));\n}\nexports.eventingFunctionStatusFromCpp = eventingFunctionStatusFromCpp;\n/**\n * @internal\n */\nfunction couchbaseLinkEncryptionLevelFromCpp(level) {\n    if (level === binding_1.default.management_analytics_couchbase_link_encryption_level.none) {\n        return analyticsindexmanager_1.AnalyticsEncryptionLevel.None;\n    }\n    if (level === binding_1.default.management_analytics_couchbase_link_encryption_level.half) {\n        return analyticsindexmanager_1.AnalyticsEncryptionLevel.Half;\n    }\n    if (level === binding_1.default.management_analytics_couchbase_link_encryption_level.full) {\n        return analyticsindexmanager_1.AnalyticsEncryptionLevel.Full;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized CppManagementAnalyticsCouchbaseLinkEncryptionLevel'));\n}\nexports.couchbaseLinkEncryptionLevelFromCpp = couchbaseLinkEncryptionLevelFromCpp;\n/**\n * @internal\n */\nfunction encryptionLevelToCpp(level) {\n    if (level === analyticsindexmanager_1.AnalyticsEncryptionLevel.None) {\n        return binding_1.default.management_analytics_couchbase_link_encryption_level.none;\n    }\n    if (level === analyticsindexmanager_1.AnalyticsEncryptionLevel.Half) {\n        return binding_1.default.management_analytics_couchbase_link_encryption_level.half;\n    }\n    if (level === analyticsindexmanager_1.AnalyticsEncryptionLevel.Full) {\n        return binding_1.default.management_analytics_couchbase_link_encryption_level.full;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized AnalyticsEncryptionLevel'));\n}\nexports.encryptionLevelToCpp = encryptionLevelToCpp;\n/**\n * @internal\n */\nfunction encryptionSettingsToCpp(settings) {\n    if (!settings) {\n        return {\n            level: binding_1.default.management_analytics_couchbase_link_encryption_level.none,\n        };\n    }\n    return {\n        level: encryptionLevelToCpp(settings.encryptionLevel),\n        certificate: settings.certificate\n            ? settings.certificate.toString()\n            : undefined,\n        client_certificate: settings.clientCertificate\n            ? settings.clientCertificate.toString()\n            : undefined,\n        client_key: settings.clientKey ? settings.clientKey.toString() : undefined,\n    };\n}\nexports.encryptionSettingsToCpp = encryptionSettingsToCpp;\n/**\n * @internal\n */\nfunction encryptionSettingsFromCpp(settings) {\n    return new analyticsindexmanager_1.CouchbaseAnalyticsEncryptionSettings({\n        encryptionLevel: couchbaseLinkEncryptionLevelFromCpp(settings.level),\n        certificate: settings.certificate\n            ? Buffer.from(settings.certificate)\n            : undefined,\n        clientCertificate: settings.client_certificate\n            ? Buffer.from(settings.client_certificate)\n            : undefined,\n        clientKey: undefined,\n    });\n}\nexports.encryptionSettingsFromCpp = encryptionSettingsFromCpp;\n/**\n * @internal\n */\nfunction authDomainToCpp(domain) {\n    if (domain === 'unknown') {\n        return binding_1.default.management_rbac_auth_domain.unknown;\n    }\n    if (domain === 'local') {\n        return binding_1.default.management_rbac_auth_domain.local;\n    }\n    if (domain === 'external') {\n        return binding_1.default.management_rbac_auth_domain.external;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized auth domain.'));\n}\nexports.authDomainToCpp = authDomainToCpp;\n/**\n * @internal\n */\nfunction authDomainFromCpp(domain) {\n    if (domain === binding_1.default.management_rbac_auth_domain.unknown) {\n        return 'unknown';\n    }\n    if (domain === binding_1.default.management_rbac_auth_domain.local) {\n        return 'local';\n    }\n    if (domain === binding_1.default.management_rbac_auth_domain.external) {\n        return 'external';\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized CppManagementRbacAuthDomain.'));\n}\nexports.authDomainFromCpp = authDomainFromCpp;\n/**\n * @internal\n */\nfunction readPreferenceToCpp(preference) {\n    // Unspecified is allowed, and means no preference.\n    if (preference === null || preference === undefined) {\n        return binding_1.default.read_preference.no_preference;\n    }\n    if (preference === generaltypes_1.ReadPreference.NoPreference) {\n        return binding_1.default.read_preference.no_preference;\n    }\n    else if (preference === generaltypes_1.ReadPreference.SelectedServerGroup) {\n        return binding_1.default.read_preference.selected_server_group;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized ReadPreference.'));\n}\nexports.readPreferenceToCpp = readPreferenceToCpp;\n/**\n * @internal\n */\nfunction transactionGetMultiModeToCpp(mode) {\n    if (mode === null || mode === undefined) {\n        return undefined;\n    }\n    if (mode === transactions_1.TransactionGetMultiMode.PrioritiseLatency) {\n        return binding_1.default.transactions_transaction_get_multi_mode.prioritise_latency;\n    }\n    else if (mode === transactions_1.TransactionGetMultiMode.DisableReadSkewDetection) {\n        return binding_1.default.transactions_transaction_get_multi_mode\n            .disable_read_skew_detection;\n    }\n    else if (mode === transactions_1.TransactionGetMultiMode.PrioritiseReadSkewDetection) {\n        return binding_1.default.transactions_transaction_get_multi_mode\n            .prioritise_read_skew_detection;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized TransactionGetMultiMode.'));\n}\nexports.transactionGetMultiModeToCpp = transactionGetMultiModeToCpp;\n/**\n * @internal\n */\nfunction transactionGetMultiReplicasFromPreferredServerGroupModeToCpp(mode) {\n    if (mode === null || mode === undefined) {\n        return undefined;\n    }\n    if (mode ===\n        transactions_1.TransactionGetMultiReplicasFromPreferredServerGroupMode.PrioritiseLatency) {\n        return binding_1.default\n            .transactions_transaction_get_multi_replicas_from_preferred_server_group_mode\n            .prioritise_latency;\n    }\n    else if (mode ===\n        transactions_1.TransactionGetMultiReplicasFromPreferredServerGroupMode.DisableReadSkewDetection) {\n        return binding_1.default\n            .transactions_transaction_get_multi_replicas_from_preferred_server_group_mode\n            .disable_read_skew_detection;\n    }\n    else if (mode ===\n        transactions_1.TransactionGetMultiReplicasFromPreferredServerGroupMode.PrioritiseReadSkewDetection) {\n        return binding_1.default\n            .transactions_transaction_get_multi_replicas_from_preferred_server_group_mode\n            .prioritise_read_skew_detection;\n    }\n    throw new errs.InvalidArgumentError(new Error('Unrecognized TransactionGetMultiReplicasFromPreferredServerGroupMode.'));\n}\nexports.transactionGetMultiReplicasFromPreferredServerGroupModeToCpp = transactionGetMultiReplicasFromPreferredServerGroupModeToCpp;\n"],"x_google_ignoreList":[0],"mappings":"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"}