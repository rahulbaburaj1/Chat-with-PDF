{"version":3,"file":"pyinterpreter.d.ts","names":["loadPyodide","PyodideInterface","Tool","ToolParams","PythonInterpreterToolParams","Parameters","PythonInterpreterTool","Promise","Omit"],"sources":["../../../src/experimental/tools/pyinterpreter.d.ts"],"sourcesContent":["import { loadPyodide, type PyodideInterface } from \"pyodide\";\nimport { Tool, ToolParams } from \"@langchain/core/tools\";\nexport type PythonInterpreterToolParams = Parameters<typeof loadPyodide>[0] & ToolParams & {\n    instance: PyodideInterface;\n};\nexport declare class PythonInterpreterTool extends Tool {\n    static lc_name(): string;\n    name: string;\n    description: string;\n    pyodideInstance: PyodideInterface;\n    stdout: string;\n    stderr: string;\n    constructor(options: PythonInterpreterToolParams);\n    addPackage(packageName: string): Promise<void>;\n    get availableDefaultPackages(): string;\n    static initialize(options: Omit<PythonInterpreterToolParams, \"instance\">): Promise<PythonInterpreterTool>;\n    _call(script: string): Promise<string>;\n}\n"],"mappings":";;;;;;;KAEYI,2BAAAA,GAA8BC,kBAAkBL,kBAAkBG;YAChEF;;cAEOK,qBAAAA,SAA8BJ,IAAAA;;;;mBAI9BD;EAPTG,MAAAA,EAAAA,MAAAA;EAA2B,MAAA,EAAA,MAAA;EAAA,WAAqBJ,CAAAA,OAAAA,EAUnCI,2BAVmCJ;EAAW,UAA7BK,CAAAA,WAAAA,EAAAA,MAAAA,CAAAA,EAWLE,OAXKF,CAAAA,IAAAA,CAAAA;EAAU,IAA0BF,wBAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAU,OAC1EF,UAAAA,CAAAA,OAAAA,EAYiBO,IAZjBP,CAYsBG,2BAZtBH,EAAAA,UAAAA,CAAAA,CAAAA,EAYiEM,OAZjEN,CAYyEK,qBAZzEL,CAAAA;EAAgB,KAAA,CAAA,MAAA,EAAA,MAAA,CAAA,EAaHM,OAbG,CAAA,MAAA,CAAA;AAE9B"}