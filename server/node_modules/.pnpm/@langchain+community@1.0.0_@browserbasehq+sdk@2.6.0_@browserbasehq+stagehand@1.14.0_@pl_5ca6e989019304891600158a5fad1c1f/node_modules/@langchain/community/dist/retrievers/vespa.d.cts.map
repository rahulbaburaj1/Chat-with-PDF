{"version":3,"file":"vespa.d.cts","names":["DocumentInterface","RemoteRetriever","RemoteRetrieverValues","RemoteRetrieverParams","VespaRetrieverParams","VespaRetriever"],"sources":["../../src/retrievers/vespa.d.ts"],"sourcesContent":["import { type DocumentInterface } from \"@langchain/core/documents\";\nimport { RemoteRetriever, RemoteRetrieverValues, RemoteRetrieverParams } from \"./remote/base.js\";\nexport interface VespaRetrieverParams extends RemoteRetrieverParams {\n    /**\n     * The body of the query to send to Vespa\n     */\n    query_body: object;\n    /**\n     * The name of the field the content resides in\n     */\n    content_field: string;\n}\n/**\n * Class responsible for retrieving data from Vespa. It extends the\n * `RemoteRetriever` class and includes methods for creating the JSON body\n * for a query and processing the JSON response from Vespa.\n * @example\n * ```typescript\n * const retriever = new VespaRetriever({\n *   url: \"https:\n *   auth: false,\n *   query_body: {\n *     yql: \"select content from paragraph where userQuery()\",\n *     hits: 5,\n *     ranking: \"documentation\",\n *     locale: \"en-us\",\n *   },\n *   content_field: \"content\",\n * });\n * const result = await retriever.getRelevantDocuments(\"what is vespa?\");\n * ```\n */\nexport declare class VespaRetriever extends RemoteRetriever {\n    static lc_name(): string;\n    lc_namespace: string[];\n    query_body: object;\n    content_field: string;\n    constructor(fields: VespaRetrieverParams);\n    /**\n     * Method that takes a query string as input and returns a JSON object\n     * that includes the query and the original `query_body`.\n     * @param query The query string to be sent to Vespa.\n     * @returns A JSON object that includes the query and the original `query_body`.\n     */\n    createJsonBody(query: string): RemoteRetrieverValues;\n    /**\n     * Method that processes the JSON response from Vespa into an array of\n     * `Document` instances. Each `Document` instance includes the content\n     * from the specified `content_field` and the document's ID.\n     * @param json The JSON response from Vespa.\n     * @returns An array of `Document` instances.\n     */\n    processJsonResponse(json: RemoteRetrieverValues): DocumentInterface[];\n}\n"],"mappings":";;;;;;;UAEiBI,oBAAAA,SAA6BD;;;;;;;;EAA7BC,aAAAA,EAAAA,MAAAA;AA8BjB;;;;;;;AAA2D;;;;;;;;;;;;;;cAAtCC,cAAAA,SAAuBJ,eAAAA;;;;;sBAKpBG;;;;;;;iCAOWF;;;;;;;;4BAQLA,wBAAwBF"}