{"version":3,"file":"chrome_ai.d.ts","names":["BaseLanguageModelCallOptions","CallbackManagerForLLMRun","GenerationChunk","BaseLLMParams","LLM","AILanguageModelFactory","AILanguageModelCreateOptions","AILanguageModel","Promise","AILanguageModelCapabilities","AILanguageModelPromptInput","AILanguageModelPromptOptions","ReadableStream","Event","AILanguageModelCloneOptions","EventTarget","AICapabilityAvailability","AbortSignal","AICreateMonitorCallback","AILanguageModelInitialPrompt","AILanguageModelInitialPromptRole","AILanguageModelPrompt","AILanguageModelPromptRole","ChromeAIInputs","ChromeAICallOptions","ChromeAI","AsyncGenerator"],"sources":["../../../src/experimental/llms/chrome_ai.d.ts"],"sourcesContent":["import type { BaseLanguageModelCallOptions } from \"@langchain/core/language_models/base\";\nimport { CallbackManagerForLLMRun } from \"@langchain/core/callbacks/manager\";\nimport { GenerationChunk } from \"@langchain/core/outputs\";\nimport { BaseLLMParams, LLM } from \"@langchain/core/language_models/llms\";\nexport interface AILanguageModelFactory {\n    create(options?: AILanguageModelCreateOptions): Promise<AILanguageModel>;\n    capabilities(): Promise<AILanguageModelCapabilities>;\n}\nexport interface AILanguageModel extends EventTarget {\n    prompt(input: AILanguageModelPromptInput, options?: AILanguageModelPromptOptions): Promise<string>;\n    promptStreaming(input: AILanguageModelPromptInput, options?: AILanguageModelPromptOptions): ReadableStream;\n    countPromptTokens(input: AILanguageModelPromptInput, options?: AILanguageModelPromptOptions): Promise<number>;\n    get maxTokens(): number;\n    get tokensSoFar(): number;\n    get tokensLeft(): number;\n    get topK(): number;\n    get temperature(): number;\n    oncontextoverflow: (event: Event) => void;\n    clone(options?: AILanguageModelCloneOptions): Promise<AILanguageModel>;\n    destroy(): void;\n}\ninterface AILanguageModelCapabilities {\n    readonly available: AICapabilityAvailability;\n    languageAvailable(languageTag: string): AICapabilityAvailability;\n    get defaultTopK(): number | undefined;\n    get maxTopK(): number | undefined;\n    get defaultTemperature(): number | undefined;\n    get maxTemperature(): number | undefined;\n}\ninterface AILanguageModelCreateOptions {\n    signal?: AbortSignal;\n    monitor?: AICreateMonitorCallback;\n    systemPrompt?: string;\n    initialPrompts?: AILanguageModelInitialPrompt[];\n    topK: number;\n    temperature: number;\n}\nexport interface AILanguageModelInitialPrompt {\n    role: AILanguageModelInitialPromptRole;\n    content: string;\n}\nexport interface AILanguageModelPrompt {\n    role: AILanguageModelPromptRole;\n    content: string;\n}\nexport interface AILanguageModelPromptOptions {\n    signal?: AbortSignal;\n}\nexport interface AILanguageModelCloneOptions {\n    signal?: AbortSignal;\n}\nexport type AILanguageModelPromptInput = string | AILanguageModelPrompt | AILanguageModelPrompt[];\ndeclare enum AILanguageModelInitialPromptRole {\n    \"system\" = 0,\n    \"user\" = 1,\n    \"assistant\" = 2\n}\ndeclare enum AILanguageModelPromptRole {\n    \"user\" = 0,\n    \"assistant\" = 1\n}\nexport type AICapabilityAvailability = \"yes\" | \"no\";\nexport type AICreateMonitorCallback = () => void;\nexport interface ChromeAIInputs extends BaseLLMParams {\n    topK?: number;\n    temperature?: number;\n    systemPrompt?: string;\n}\nexport interface ChromeAICallOptions extends BaseLanguageModelCallOptions {\n}\n/**\n * To use this model you need to have the `Built-in AI Early Preview Program`\n * for Chrome. You can find more information about the program here:\n * @link https://developer.chrome.com/docs/ai/built-in\n *\n * @example\n * ```typescript\n * // Initialize the ChromeAI model.\n * const model = new ChromeAI({\n *   temperature: 0.5, // Optional. Default is 0.5.\n *   topK: 40, // Optional. Default is 40.\n * });\n *\n * // Call the model with a message and await the response.\n * const response = await model.invoke([\n *   new HumanMessage({ content: \"My name is John.\" }),\n * ]);\n * ```\n */\nexport declare class ChromeAI extends LLM<ChromeAICallOptions> {\n    temperature?: number;\n    topK?: number;\n    systemPrompt?: string;\n    static lc_name(): string;\n    constructor(inputs?: ChromeAIInputs);\n    _llmType(): string;\n    /**\n     * Initialize the model. This method may be called before invoking the model\n     * to set up a chat session in advance.\n     */\n    protected createSession(): Promise<any>;\n    _streamResponseChunks(prompt: string, _options: this[\"ParsedCallOptions\"], runManager?: CallbackManagerForLLMRun): AsyncGenerator<GenerationChunk>;\n    _call(prompt: string, options: this[\"ParsedCallOptions\"], runManager?: CallbackManagerForLLMRun): Promise<string>;\n}\nexport {};\n"],"mappings":";;;;;;;;;UAIiBK,sBAAAA;mBACIC,+BAA+BE,QAAQD;kBACxCC,QAAQC;;UAEXF,eAAAA,SAAwBQ;gBACvBL,sCAAsCC,+BAA+BH;yBAC5DE,sCAAsCC,+BAA+BC;2BACnEF,sCAAsCC,+BAA+BH;;;;;;6BAMnEK;kBACXC,8BAA8BN,QAAQD;;;UAGhDE,2BAAAA;EAjBOJ,SAAAA,SAAAA,EAkBOW,wBAlBe;EAAA,iBAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAmBKA,wBAnBL;EAAA,IAClBV,WAAAA,EAAAA,EAAAA,MAAAA,GAAAA,SAAAA;EAA4B,IAAWC,OAAAA,EAAAA,EAAAA,MAAAA,GAAAA,SAAAA;EAAe,IAAvBC,kBAAAA,EAAAA,EAAAA,MAAAA,GAAAA,SAAAA;EAAO,IAC/BC,cAAAA,EAAAA,EAAAA,MAAAA,GAAAA,SAAAA;;AAAD,UAuBjBH,4BAAAA,CAvBiB;EAEVC,MAAAA,CAAAA,EAsBJU,WAtBmB;EAAA,OAAA,CAAA,EAuBlBC,uBAvBkB;EAAA,YACdR,CAAAA,EAAAA,MAAAA;EAA0B,cAAYC,CAAAA,EAwBnCQ,4BAxBmCR,EAAAA;EAA4B,IAAGH,EAAAA,MAAAA;EAAO,WACnEE,EAAAA,MAAAA;;AAAqEE,UA2B/EO,4BAAAA,CA3B+EP;EAAc,IACjFF,EA2BnBU,gCA3BmBV;EAA0B,OAAYC,EAAAA,MAAAA;;AAMpCE,UAwBdQ,qBAAAA,CAxBcR;EAAK,IAChBC,EAwBVQ,yBAxBUR;EAA2B,OAAWP,EAAAA,MAAAA;;AAVjBQ,UAqCxBJ,4BAAAA,CArCwBI;EAAW,MAAA,CAAA,EAsCvCE,WAtCuC;AAYnD;AACoC,UA2BpBH,2BAAAA,CA3BoB;EAAA,MACbE,CAAAA,EA2BXC,WA3BWD;;AAC4C,KA4BxDN,0BAAAA,GA5BwD,MAAA,GA4BlBW,qBA5BkB,GA4BMA,qBA5BN,EAAA;AAAA,aA6BvDD,gCAAAA;EAvByB,QAAA,GAAA,CAAA;EAAA,MACzBH,GAAAA,CAAAA;EAAW,WACVC,GAAAA,CAAAA;;AAEmC,aAwBpCI,yBAAAA;EApBIH,MAAAA,GAAAA,CAAAA;EAIAE,WAAAA,GAAAA,CAAAA;AAIjB;AAGiBP,KAaLE,wBAAAA,GAbgC,KAAA,GAC/BC,IAAAA;AAEDP,KAWAQ,uBAAAA,GAX0B,GAAA,GAAA,IAAA;AAAA,UAYrBK,cAAAA,SAAuBpB,aAZF,CAAA;EAAA,IAAYkB,CAAAA,EAAAA,MAAAA;EAAqB,WAAGA,CAAAA,EAAAA,MAAAA;EAAqB,YAAA,CAAA,EAAA,MAAA;AAAG;AAMrFC,UAWIE,mBAAAA,SAA4BxB,4BAXP,CAAA,CAItC;AACA;AACA;AAKA;AAqBA;;;;;;;;;;;AAAyC;;;;;cAApByB,QAAAA,SAAiBrB,IAAIoB;;;;;uBAKjBD;;;;;;6BAMMf;0FAC6DP,2BAA2ByB,eAAexB;yEAC3DD,2BAA2BO"}