{"version":3,"file":"ibm.d.cts","names":["CallbackManagerForLLMRun","BaseLLM","BaseLLMParams","RequestCallbacks","ReturnOptionProperties","TextGenLengthPenalty","TextGenParameters","TextTokenizeParameters","LLMResult","GenerationChunk","BaseLanguageModelCallOptions","Neverify","WatsonxAuth","WatsonxDeployedParams","WatsonxParams","WatsonxLLMParams","Constants","DecodingMethod","WatsonxDeploymentLLMParams","WatsonxCallOptionsLLM","Partial","WatsonxInputLLM","WatsonxDeployedInputLLM","WatsonxLLMConstructor","WatsonxLLM","CallOptions","Promise","T","AsyncGenerator"],"sources":["../../src/llms/ibm.d.ts"],"sourcesContent":["import { CallbackManagerForLLMRun } from \"@langchain/core/callbacks/manager\";\nimport { BaseLLM, BaseLLMParams } from \"@langchain/core/language_models/llms\";\nimport { RequestCallbacks, ReturnOptionProperties, TextGenLengthPenalty, TextGenParameters, TextTokenizeParameters } from \"@ibm-cloud/watsonx-ai/dist/watsonx-ai-ml/vml_v1.js\";\nimport { LLMResult, GenerationChunk } from \"@langchain/core/outputs\";\nimport { BaseLanguageModelCallOptions } from \"@langchain/core/language_models/base\";\nimport { Neverify, WatsonxAuth, WatsonxDeployedParams, WatsonxParams } from \"../types/ibm.js\";\n/**\n * Input to LLM class.\n */\nexport interface WatsonxLLMParams {\n    maxNewTokens?: number;\n    decodingMethod?: TextGenParameters.Constants.DecodingMethod | string;\n    lengthPenalty?: TextGenLengthPenalty;\n    minNewTokens?: number;\n    randomSeed?: number;\n    stopSequence?: string[];\n    temperature?: number;\n    timeLimit?: number;\n    topK?: number;\n    topP?: number;\n    repetitionPenalty?: number;\n    truncateInpuTokens?: number;\n    returnOptions?: ReturnOptionProperties;\n    includeStopSequence?: boolean;\n}\nexport interface WatsonxDeploymentLLMParams {\n    idOrName: string;\n}\nexport interface WatsonxCallOptionsLLM extends BaseLanguageModelCallOptions {\n    maxRetries?: number;\n    parameters?: Partial<WatsonxLLMParams>;\n    watsonxCallbacks?: RequestCallbacks;\n}\nexport interface WatsonxInputLLM extends WatsonxParams, BaseLLMParams, WatsonxLLMParams, Neverify<WatsonxDeploymentLLMParams> {\n}\nexport interface WatsonxDeployedInputLLM extends WatsonxDeployedParams, BaseLLMParams, Neverify<WatsonxLLMParams> {\n    model?: never;\n}\nexport type WatsonxLLMConstructor = BaseLLMParams & WatsonxLLMParams & Partial<WatsonxParams> & WatsonxDeployedParams;\n/**\n * Integration with an LLM.\n */\nexport declare class WatsonxLLM<CallOptions extends WatsonxCallOptionsLLM = WatsonxCallOptionsLLM> extends BaseLLM<CallOptions> implements WatsonxLLMConstructor {\n    // Used for tracing, replace with the same name as your class\n    static lc_name(): string;\n    lc_serializable: boolean;\n    streaming: boolean;\n    model: string;\n    maxRetries: number;\n    version: string;\n    serviceUrl: string;\n    maxNewTokens?: number;\n    spaceId?: string;\n    projectId?: string;\n    idOrName?: string;\n    decodingMethod?: TextGenParameters.Constants.DecodingMethod | string;\n    lengthPenalty?: TextGenLengthPenalty;\n    minNewTokens?: number;\n    randomSeed?: number;\n    stopSequence?: string[];\n    temperature?: number;\n    timeLimit?: number;\n    topK?: number;\n    topP?: number;\n    repetitionPenalty?: number;\n    truncateInpuTokens?: number;\n    returnOptions?: ReturnOptionProperties;\n    includeStopSequence?: boolean;\n    maxConcurrency?: number;\n    watsonxCallbacks?: RequestCallbacks;\n    private service;\n    constructor(fields: (WatsonxInputLLM | WatsonxDeployedInputLLM) & WatsonxAuth);\n    get lc_secrets(): {\n        [key: string]: string;\n    };\n    get lc_aliases(): {\n        [key: string]: string;\n    };\n    invocationParams(options: this[\"ParsedCallOptions\"]): {\n        max_new_tokens: number | undefined;\n        decoding_method: string | undefined;\n        length_penalty: TextGenLengthPenalty | undefined;\n        min_new_tokens: number | undefined;\n        random_seed: number | undefined;\n        stop_sequences: string[] | undefined;\n        temperature: number | undefined;\n        time_limit: number | undefined;\n        top_k: number | undefined;\n        top_p: number | undefined;\n        repetition_penalty: number | undefined;\n        truncate_input_tokens: number | undefined;\n        return_options: ReturnOptionProperties | undefined;\n        include_stop_sequence: boolean | undefined;\n    } | undefined;\n    invocationCallbacks(options: this[\"ParsedCallOptions\"]): RequestCallbacks<any> | undefined;\n    scopeId(): {\n        spaceId?: undefined;\n        projectId: string;\n        modelId: string;\n        idOrName?: undefined;\n    } | {\n        projectId?: undefined;\n        spaceId: string;\n        modelId: string;\n        idOrName?: undefined;\n    } | {\n        projectId?: undefined;\n        spaceId?: undefined;\n        idOrName: string;\n        modelId: string;\n    } | {\n        projectId?: undefined;\n        spaceId?: undefined;\n        idOrName?: undefined;\n        modelId: string;\n    };\n    listModels(): Promise<string[] | undefined>;\n    private generateSingleMessage;\n    completionWithRetry<T>(callback: () => T, options?: this[\"ParsedCallOptions\"]): Promise<T>;\n    _generate(prompts: string[], options: this[\"ParsedCallOptions\"], runManager?: CallbackManagerForLLMRun): Promise<LLMResult>;\n    getNumTokens(content: string, options?: TextTokenizeParameters): Promise<number>;\n    _streamResponseChunks(prompt: string, options: this[\"ParsedCallOptions\"], runManager?: CallbackManagerForLLMRun): AsyncGenerator<GenerationChunk>;\n    _llmType(): string;\n}\n"],"mappings":"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"}