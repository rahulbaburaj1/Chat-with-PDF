{"version":3,"file":"s3.d.ts","names":["fsDefault","S3ClientConfig","BaseDocumentLoader","UnstructuredLoader","UnstructuredLoaderDefault","S3LoaderParams","S3Loader","bucket","key","unstructuredAPIURL","unstructuredAPIKey","s3Config","fs","Record","____________langchain_core_dist_documents_document_js0","Document","Promise"],"sources":["../../../src/document_loaders/web/s3.d.ts"],"sourcesContent":["import * as fsDefault from \"node:fs\";\nimport { S3ClientConfig } from \"@aws-sdk/client-s3\";\nimport { BaseDocumentLoader } from \"@langchain/core/document_loaders/base\";\nimport { UnstructuredLoader as UnstructuredLoaderDefault } from \"../fs/unstructured.js\";\n/**\n * Represents the parameters for the S3Loader class. It includes\n * properties such as the S3 bucket, key, unstructured API URL,\n * unstructured API key, S3 configuration, file system module, and\n * UnstructuredLoader module.\n */\nexport interface S3LoaderParams {\n    bucket: string;\n    key: string;\n    unstructuredAPIURL: string;\n    unstructuredAPIKey: string;\n    s3Config?: S3ClientConfig;\n    fs?: typeof fsDefault;\n    UnstructuredLoader?: typeof UnstructuredLoaderDefault;\n}\n/**\n * A class that extends the BaseDocumentLoader class. It represents a\n * document loader for loading files from an S3 bucket.\n * @example\n * ```typescript\n * const loader = new S3Loader({\n *   bucket: \"my-document-bucket-123\",\n *   key: \"AccountingOverview.pdf\",\n *   s3Config: {\n *     region: \"us-east-1\",\n *     credentials: {\n *       accessKeyId: \"<YourAccessKeyId>\",\n *       secretAccessKey: \"<YourSecretAccessKey>\",\n *     },\n *   },\n *   unstructuredAPIURL: \"<YourUnstructuredAPIURL>\",\n *   unstructuredAPIKey: \"<YourUnstructuredAPIKey>\",\n * });\n * const docs = await loader.load();\n * ```\n */\nexport declare class S3Loader extends BaseDocumentLoader {\n    private bucket;\n    private key;\n    private unstructuredAPIURL;\n    private unstructuredAPIKey;\n    private s3Config;\n    private _fs;\n    private _UnstructuredLoader;\n    constructor({ bucket, key, unstructuredAPIURL, unstructuredAPIKey, s3Config, fs, UnstructuredLoader }: S3LoaderParams);\n    /**\n     * Loads the file from the S3 bucket, saves it to a temporary directory,\n     * and then uses the UnstructuredLoader to load the file as a document.\n     * @returns An array of Document objects representing the loaded documents.\n     */\n    load(): Promise<import(\"../../../../langchain-core/dist/documents/document.js\").Document<Record<string, any>>[]>;\n}\n"],"mappings":";;;;;;;;;;;;;;;;UAUiBK,cAAAA;;;EAAAA,kBAAc,EAAA,MAAA;EAAA,kBAAA,EAAA,MAAA;EAAA,QAKhBJ,CAAAA,EAAAA,cAAAA;EAAc,EAAA,CACbD,EAAAA,OAAAA,SAAAA;EAAS,kBACOI,CAAAA,EAAAA,OAAAA,oBAAAA;AAAyB;AAuBzD;;;;;;;;;;;;;;AAAwD;;;;;;;cAAnCE,QAAAA,SAAiBJ,kBAAAA;;;;;;;;;;;;;;;;KAQqEG;;;;;;UAM/FW,QAAuF,SAANH"}