{"version":3,"file":"scope.js","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/scope.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Scope = void 0;\nconst analyticsexecutor_1 = require(\"./analyticsexecutor\");\nconst collection_1 = require(\"./collection\");\nconst queryexecutor_1 = require(\"./queryexecutor\");\nconst searchexecutor_1 = require(\"./searchexecutor\");\nconst scopesearchindexmanager_1 = require(\"./scopesearchindexmanager\");\nconst utilities_1 = require(\"./utilities\");\nconst scopeeventingfunctionmanager_1 = require(\"./scopeeventingfunctionmanager\");\n/**\n * Exposes the operations which are available to be performed against a scope.\n * Namely the ability to access to Collections for performing operations.\n *\n * @category Core\n */\nclass Scope {\n    /**\n     * @internal\n     */\n    static get DEFAULT_NAME() {\n        return '_default';\n    }\n    /**\n    @internal\n    */\n    constructor(bucket, scopeName) {\n        this._bucket = bucket;\n        this._name = scopeName;\n        this._conn = bucket.conn;\n    }\n    /**\n    @internal\n    */\n    get conn() {\n        return this._conn;\n    }\n    /**\n    @internal\n    */\n    get bucket() {\n        return this._bucket;\n    }\n    /**\n    @internal\n    */\n    get cluster() {\n        return this._bucket.cluster;\n    }\n    /**\n    @internal\n    */\n    get transcoder() {\n        return this._bucket.transcoder;\n    }\n    /**\n     * The name of the scope this Scope object references.\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Creates a Collection object reference to a specific collection.\n     *\n     * @param collectionName The name of the collection to reference.\n     */\n    collection(collectionName) {\n        return new collection_1.Collection(this, collectionName);\n    }\n    /**\n     * Returns a SearchIndexManager which can be used to manage the search\n     * indexes of this scope.\n     */\n    searchIndexes() {\n        return new scopesearchindexmanager_1.ScopeSearchIndexManager(this.cluster, this.bucket.name, this._name);\n    }\n    /**\n     * Returns a ScopeEventingFunctionManager which can be used to manage the eventing\n     * functions of this scope.\n     * Uncommitted: This API is subject to change in the future.\n     */\n    eventingFunctions() {\n        return new scopeeventingfunctionmanager_1.ScopeEventingFunctionManager(this.cluster, this._bucket.name, this._name);\n    }\n    /**\n     * Executes a N1QL query against the cluster scoped to this scope.\n     *\n     * @param statement The N1QL statement to execute.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    query(statement, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const bucket = this.bucket;\n        const exec = new queryexecutor_1.QueryExecutor(this.cluster);\n        const options_ = options;\n        return utilities_1.PromiseHelper.wrapAsync(() => exec.query(statement, {\n            ...options_,\n            queryContext: `${bucket.name}.${this.name}`,\n        }), callback);\n    }\n    /**\n     * Executes an analytics query against the cluster scoped this scope.\n     *\n     * @param statement The analytics statement to execute.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    analyticsQuery(statement, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const bucket = this.bucket;\n        const exec = new analyticsexecutor_1.AnalyticsExecutor(this.cluster);\n        const options_ = options;\n        return utilities_1.PromiseHelper.wrapAsync(() => exec.query(statement, {\n            ...options_,\n            queryContext: `${bucket.name}.${this.name}`,\n        }), callback);\n    }\n    /**\n     * Executes a search query against the scope.\n     *\n     * @param indexName The name of the index to query.\n     * @param request The SearchRequest describing the search to execute.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    search(indexName, request, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[2];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const exec = new searchexecutor_1.SearchExecutor(this.cluster, this._bucket.name, this._name);\n        const options_ = options;\n        return utilities_1.PromiseHelper.wrapAsync(() => exec.query(indexName, request, options_), callback);\n    }\n}\nexports.Scope = Scope;\n"],"x_google_ignoreList":[0],"mappings":";;;;;;;;;;;;;CACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAM,EAAC;CAC7D,QAAQ,QAAQ,KAAK;CACrB,MAAM;CACN,MAAM;CACN,MAAM;CACN,MAAM;CACN,MAAM;CACN,MAAM;CACN,MAAM;;;;;;;CAON,IAAM,QAAN,MAAY;;;;EAIR,WAAW,eAAe;AACtB,UAAO;EACV;;;;EAID,YAAY,QAAQ,WAAW;GAC3B,KAAK,UAAU;GACf,KAAK,QAAQ;GACb,KAAK,QAAQ,OAAO;EACvB;;;;EAID,IAAI,OAAO;AACP,UAAO,KAAK;EACf;;;;EAID,IAAI,SAAS;AACT,UAAO,KAAK;EACf;;;;EAID,IAAI,UAAU;AACV,UAAO,KAAK,QAAQ;EACvB;;;;EAID,IAAI,aAAa;AACb,UAAO,KAAK,QAAQ;EACvB;;;;EAID,IAAI,OAAO;AACP,UAAO,KAAK;EACf;;;;;;EAMD,WAAW,gBAAgB;AACvB,UAAO,IAAI,aAAa,WAAW,MAAM;EAC5C;;;;;EAKD,gBAAgB;AACZ,UAAO,IAAI,0BAA0B,wBAAwB,KAAK,SAAS,KAAK,OAAO,MAAM,KAAK;EACrG;;;;;;EAMD,oBAAoB;AAChB,UAAO,IAAI,+BAA+B,6BAA6B,KAAK,SAAS,KAAK,QAAQ,MAAM,KAAK;EAChH;;;;;;;;EAQD,MAAM,WAAW,SAAS,UAAU;AAChC,OAAI,mBAAmB,UAAU;IAC7B,WAAW,UAAU;IACrB,UAAU;GACb;AACD,OAAI,CAAC,SACD,UAAU,CAAE;GAEhB,MAAM,SAAS,KAAK;GACpB,MAAM,OAAO,IAAI,gBAAgB,cAAc,KAAK;GACpD,MAAM,WAAW;AACjB,UAAO,YAAY,cAAc,UAAU,MAAM,KAAK,MAAM,WAAW;IACnE,GAAG;IACH,cAAc,GAAG,OAAO,KAAK,CAAC,EAAE,KAAK,MAAM;GAC9C,EAAC,EAAE,SAAS;EAChB;;;;;;;;EAQD,eAAe,WAAW,SAAS,UAAU;AACzC,OAAI,mBAAmB,UAAU;IAC7B,WAAW,UAAU;IACrB,UAAU;GACb;AACD,OAAI,CAAC,SACD,UAAU,CAAE;GAEhB,MAAM,SAAS,KAAK;GACpB,MAAM,OAAO,IAAI,oBAAoB,kBAAkB,KAAK;GAC5D,MAAM,WAAW;AACjB,UAAO,YAAY,cAAc,UAAU,MAAM,KAAK,MAAM,WAAW;IACnE,GAAG;IACH,cAAc,GAAG,OAAO,KAAK,CAAC,EAAE,KAAK,MAAM;GAC9C,EAAC,EAAE,SAAS;EAChB;;;;;;;;;EASD,OAAO,WAAW,SAAS,SAAS,UAAU;AAC1C,OAAI,mBAAmB,UAAU;IAC7B,WAAW,UAAU;IACrB,UAAU;GACb;AACD,OAAI,CAAC,SACD,UAAU,CAAE;GAEhB,MAAM,OAAO,IAAI,iBAAiB,eAAe,KAAK,SAAS,KAAK,QAAQ,MAAM,KAAK;GACvF,MAAM,WAAW;AACjB,UAAO,YAAY,cAAc,UAAU,MAAM,KAAK,MAAM,WAAW,SAAS,SAAS,EAAE,SAAS;EACvG;CACJ;CACD,QAAQ,QAAQ"}