{"version":3,"file":"queryexecutor.js","names":[],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/queryexecutor.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryExecutor = void 0;\nconst bindingutilities_1 = require(\"./bindingutilities\");\nconst querytypes_1 = require(\"./querytypes\");\nconst streamablepromises_1 = require(\"./streamablepromises\");\n/**\n * @internal\n */\nclass QueryExecutor {\n    /**\n     * @internal\n     */\n    constructor(cluster) {\n        this._cluster = cluster;\n    }\n    /**\n     * @internal\n     */\n    static execute(exec) {\n        const emitter = new streamablepromises_1.StreamableRowPromise((rows, meta) => {\n            return new querytypes_1.QueryResult({\n                rows: rows,\n                meta: meta,\n            });\n        });\n        exec((cppErr, resp) => {\n            const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n            if (err) {\n                emitter.emit('error', err);\n                emitter.emit('end');\n                return;\n            }\n            resp.rows.forEach((row) => {\n                emitter.emit('row', JSON.parse(row));\n            });\n            {\n                const metaData = resp.meta;\n                let warnings;\n                if (metaData.warnings) {\n                    warnings = metaData.warnings.map((warningData) => new querytypes_1.QueryWarning({\n                        code: warningData.code,\n                        message: warningData.message,\n                    }));\n                }\n                else {\n                    warnings = [];\n                }\n                let metrics;\n                if (metaData.metrics) {\n                    const metricsData = metaData.metrics;\n                    metrics = new querytypes_1.QueryMetrics({\n                        elapsedTime: metricsData.elapsed_time,\n                        executionTime: metricsData.execution_time,\n                        sortCount: metricsData.sort_count || 0,\n                        resultCount: metricsData.result_count || 0,\n                        resultSize: metricsData.result_size || 0,\n                        mutationCount: metricsData.mutation_count || 0,\n                        errorCount: metricsData.error_count || 0,\n                        warningCount: metricsData.warning_count || 0,\n                    });\n                }\n                else {\n                    metrics = undefined;\n                }\n                const meta = new querytypes_1.QueryMetaData({\n                    requestId: metaData.request_id,\n                    clientContextId: metaData.client_context_id,\n                    status: metaData.status,\n                    signature: metaData.signature\n                        ? JSON.parse(metaData.signature)\n                        : undefined,\n                    warnings: warnings,\n                    metrics: metrics,\n                    profile: metaData.profile ? JSON.parse(metaData.profile) : undefined,\n                });\n                emitter.emit('meta', meta);\n            }\n            emitter.emit('end');\n            return;\n        });\n        return emitter;\n    }\n    /**\n     * @internal\n     */\n    query(query, options) {\n        const timeout = options.timeout || this._cluster.queryTimeout;\n        return QueryExecutor.execute((callback) => {\n            this._cluster.conn.query({\n                statement: query,\n                client_context_id: options.clientContextId,\n                adhoc: options.adhoc === false ? false : true,\n                metrics: options.metrics || false,\n                readonly: options.readOnly || false,\n                flex_index: options.flexIndex || false,\n                preserve_expiry: options.preserveExpiry || false,\n                use_replica: options.useReplica,\n                max_parallelism: options.maxParallelism,\n                scan_cap: options.scanCap,\n                scan_wait: options.scanWait,\n                pipeline_batch: options.pipelineBatch,\n                pipeline_cap: options.pipelineCap,\n                scan_consistency: (0, bindingutilities_1.queryScanConsistencyToCpp)(options.scanConsistency),\n                mutation_state: (0, bindingutilities_1.mutationStateToCpp)(options.consistentWith).tokens,\n                timeout: timeout,\n                query_context: options.queryContext,\n                profile: (0, bindingutilities_1.queryProfileToCpp)(options.profile),\n                raw: options.raw\n                    ? Object.fromEntries(Object.entries(options.raw)\n                        .filter(([, v]) => v !== undefined)\n                        .map(([k, v]) => [k, JSON.stringify(v)]))\n                    : {},\n                positional_parameters: options.parameters && Array.isArray(options.parameters)\n                    ? options.parameters.map((v) => JSON.stringify(v !== null && v !== void 0 ? v : null))\n                    : [],\n                named_parameters: options.parameters && !Array.isArray(options.parameters)\n                    ? Object.fromEntries(Object.entries(options.parameters)\n                        .filter(([, v]) => v !== undefined)\n                        .map(([k, v]) => [k, JSON.stringify(v)]))\n                    : {},\n                body_str: '',\n            }, callback);\n        });\n    }\n}\nexports.QueryExecutor = QueryExecutor;\n"],"x_google_ignoreList":[0],"mappings":"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"}