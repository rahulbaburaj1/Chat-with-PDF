{"version":3,"file":"epub.d.cts","names":["EPub","Document","BaseDocumentLoader","EPubLoader","splitChapters","Promise"],"sources":["../../../src/document_loaders/fs/epub.d.ts"],"sourcesContent":["import type { EPub } from \"epub2\";\nimport { Document } from \"@langchain/core/documents\";\nimport { BaseDocumentLoader } from \"@langchain/core/document_loaders/base\";\n/**\n * A class that extends the `BaseDocumentLoader` class. It represents a\n * document loader that loads documents from EPUB files.\n */\nexport declare class EPubLoader extends BaseDocumentLoader {\n    filePath: string;\n    private splitChapters;\n    constructor(filePath: string, { splitChapters }?: {\n        splitChapters?: boolean | undefined;\n    });\n    /**\n     * A protected method that takes an EPUB object as a parameter and returns\n     * a promise that resolves to an array of objects representing the content\n     * and metadata of each chapter.\n     * @param epub The EPUB object to parse.\n     * @returns A promise that resolves to an array of objects representing the content and metadata of each chapter.\n     */\n    protected parse(epub: EPub): Promise<{\n        pageContent: string;\n        metadata?: object;\n    }[]>;\n    /**\n     * A method that loads the EPUB file and returns a promise that resolves\n     * to an array of `Document` instances.\n     * @returns A promise that resolves to an array of `Document` instances.\n     */\n    load(): Promise<Document[]>;\n}\n"],"mappings":";;;;;;;;;;;;cAOqBG,UAAAA,SAAmBD,kBAAAA;EAAnBC,QAAAA,EAAAA,MAAU;EAAA,QAAA,aAAA;EAAA,WAGKC,CAAAA,QAAAA,EAAAA,MAAAA,EAAAA;IAAAA;EAUN,CAAA,CAVMA,EAAAA;IAUVJ,aAAAA,CAAAA,EAAAA,OAAAA,GAAAA,SAAAA;EAAI,CAAA;EAAU;;;AAbkB;;;;wBAahCA,OAAOK;;;;;;;;;UASrBA,QAAQJ"}