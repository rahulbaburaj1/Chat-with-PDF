{"version":3,"file":"arcjet.d.cts","names":["BaseChatModel","BaseChatModelParams","ArcjetSensitiveInfoType","RedactOptions","CallbackManagerForLLMRun","BaseMessage","ChatResult","DetectSensitiveInfoEntities","T","Array","ValidEntities","Detect","CustomEntities","ArcjetRedactOptions","ArcjetRedact","Promise"],"sources":["../../src/chat_models/arcjet.d.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { BaseChatModel, type BaseChatModelParams } from \"@langchain/core/language_models/chat_models\";\nimport type { ArcjetSensitiveInfoType, RedactOptions } from \"@arcjet/redact\";\nimport { CallbackManagerForLLMRun } from \"@langchain/core/callbacks/manager\";\nimport { BaseMessage } from \"@langchain/core/messages\";\nimport { ChatResult } from \"@langchain/core/outputs\";\ntype DetectSensitiveInfoEntities<T> = (tokens: string[]) => Array<ArcjetSensitiveInfoType | T | undefined>;\ntype ValidEntities<Detect> = Array<undefined extends Detect ? ArcjetSensitiveInfoType : Detect extends DetectSensitiveInfoEntities<infer CustomEntities> ? ArcjetSensitiveInfoType | CustomEntities : never>;\nexport interface ArcjetRedactOptions<Detect> extends BaseChatModelParams {\n    chatModel: BaseChatModel;\n    entities?: ValidEntities<Detect>;\n    contextWindowSize?: number;\n    detect?: Detect;\n    replace?: (entity: ValidEntities<Detect>[number]) => string | undefined;\n}\nexport type { ArcjetSensitiveInfoType, RedactOptions };\nexport declare class ArcjetRedact<Detect extends DetectSensitiveInfoEntities<CustomEntities> | undefined, CustomEntities extends string> extends BaseChatModel {\n    static lc_name(): string;\n    chatModel: BaseChatModel;\n    entities?: ValidEntities<Detect>;\n    contextWindowSize?: number;\n    detect?: Detect;\n    replace?: (entity: ValidEntities<Detect>[number]) => string | undefined;\n    index: number;\n    constructor(options: ArcjetRedactOptions<Detect>);\n    _createUniqueReplacement(entity: ValidEntities<Detect>[number]): string;\n    _llmType(): string;\n    _generate(messages: BaseMessage[], options: this[\"ParsedCallOptions\"], runManager?: CallbackManagerForLLMRun | undefined): Promise<ChatResult>;\n}\n"],"mappings":";;;;;;;;;;KAMKO,uDAAuDE,MAAMP,0BAA0BM;KACvFE,wBAAwBD,wBAAwBE,SAAST,0BAA0BS,eAAeJ,oDAAoDL,0BAA0BU;UACpKC,oCAAoCZ;aACtCD;aACAU,cAAcC;;WAEhBA;qBACUD,cAAcC;;AAPL,cAUXG,YAVW,CAAA,eAUiBP,2BAVjB,CAU6CK,cAV7C,CAAA,GAAA,SAAA,EAAA,uBAAA,MAAA,CAAA,SAUiHZ,aAAAA,CAVjH;EAAA,OAAkCE,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAuB,SAAGM,EAY7ER,aAZ6EQ;EAAC,QAAjCC,CAAAA,EAa7CC,aAb6CD,CAa/BE,MAb+BF,CAAAA;EAAK,iBAAA,CAAA,EAAA,MAAA;EAC5DC,MAAAA,CAAAA,EAcQC,MAdRD;EAAa,OAAA,CAAA,EAAA,CAAA,MAAA,EAeKA,aAfL,CAemBC,MAfnB,CAAA,CAAA,MAAA,CAAA,EAAA,GAAA,MAAA,GAAA,SAAA;EAAA,KAAmCA,EAAAA,MAAAA;EAAM,WAAGT,CAAAA,OAAAA,EAiBrCW,mBAjBqCX,CAiBjBS,MAjBiBT,CAAAA;EAAuB,wBAAGS,CAAAA,MAAAA,EAkBnDD,aAlBmDC,CAkBrCA,MAlBqCA,CAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAM,QAASJ,CAAAA,CAAAA,EAAAA,MAAAA;EAA2B,SAAyBL,CAAAA,QAAAA,EAoBnIG,WApBmIH,EAAAA,EAAAA,OAAAA,EAAAA,IAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAoBnEE,wBApBmEF,GAAAA,SAAAA,CAAAA,EAoB5Ba,OApB4Bb,CAoBpBI,UApBoBJ,CAAAA"}