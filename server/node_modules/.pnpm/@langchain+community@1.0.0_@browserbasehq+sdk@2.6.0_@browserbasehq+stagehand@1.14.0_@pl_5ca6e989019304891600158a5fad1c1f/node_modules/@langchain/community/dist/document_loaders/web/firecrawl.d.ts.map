{"version":3,"file":"firecrawl.d.ts","names":["DocumentInterface","BaseDocumentLoader","FirecrawlLoaderParameters","Record","FireCrawlLoader","Promise"],"sources":["../../../src/document_loaders/web/firecrawl.d.ts"],"sourcesContent":["import { type DocumentInterface } from \"@langchain/core/documents\";\nimport { BaseDocumentLoader } from \"@langchain/core/document_loaders/base\";\n/**\n * Interface representing the parameters for the Firecrawl loader. It\n * includes properties such as the URL to scrape or crawl and the API key.\n */\ninterface FirecrawlLoaderParameters {\n    /**\n     * URL to scrape or crawl\n     */\n    url: string;\n    /**\n     * API key for Firecrawl. If not provided, the default value is the value of the FIRECRAWL_API_KEY environment variable.\n     */\n    apiKey?: string;\n    /**\n     * API URL for Firecrawl.\n     */\n    apiUrl?: string;\n    /**\n     * Mode of operation. Can be \"crawl\", \"scrape\", or \"map\". If not provided, the default value is \"crawl\".\n     */\n    mode?: \"crawl\" | \"scrape\" | \"map\";\n    params?: Record<string, unknown>;\n}\n/**\n * Class representing a document loader for loading data from\n * Firecrawl (firecrawl.dev). It extends the BaseDocumentLoader class.\n * @example\n * ```typescript\n * const loader = new FireCrawlLoader({\n *   url: \"{url}\",\n *   apiKey: \"{apiKey}\",\n *   mode: \"crawl\"\n * });\n * const docs = await loader.load();\n * ```\n */\nexport declare class FireCrawlLoader extends BaseDocumentLoader {\n    private apiKey;\n    private apiUrl?;\n    private url;\n    private mode;\n    private params?;\n    constructor(loaderParams: FirecrawlLoaderParameters);\n    /**\n     * Loads data from Firecrawl.\n     * @returns An array of Documents representing the retrieved data.\n     * @throws An error if the data could not be loaded.\n     */\n    load(): Promise<DocumentInterface[]>;\n}\nexport {};\n"],"mappings":";;;;;;;;;;;UAMUE,yBAAAA;EAAAA;AAgCV;;EAAoC,GAMNA,EAAAA,MAAAA;EAAyB;;;EANQ,MAAA,CAAA,EAAA,MAAA;;;;;;;;;WAflDC;;;;;;;;;;;;;;;cAeQC,eAAAA,SAAwBH,kBAAAA;;;;;;4BAMfC;;;;;;UAMlBG,QAAQL"}