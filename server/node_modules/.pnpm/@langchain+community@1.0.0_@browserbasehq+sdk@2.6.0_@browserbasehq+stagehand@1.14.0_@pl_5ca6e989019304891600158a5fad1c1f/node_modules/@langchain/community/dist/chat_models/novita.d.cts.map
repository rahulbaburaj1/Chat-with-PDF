{"version":3,"file":"novita.d.cts","names":["BaseChatModelParams","LangSmithParams","OpenAIClient","ChatOpenAICallOptions","OpenAIChatInput","OpenAICoreRequestOptions","ChatOpenAICompletions","NovitaUnsupportedArgs","NovitaUnsupportedCallOptions","ChatNovitaCallOptions","Record","Omit","ChatNovitaInput","ChatNovitaAI","Partial","___load_serializable0","Serialized","Chat","ChatCompletionCreateParamsStreaming","Completions","ChatCompletionChunk","AsyncIterable","Promise","ChatCompletionCreateParamsNonStreaming","ChatCompletion"],"sources":["../../src/chat_models/novita.d.ts"],"sourcesContent":["import type { BaseChatModelParams, LangSmithParams } from \"@langchain/core/language_models/chat_models\";\nimport { type OpenAIClient, type ChatOpenAICallOptions, type OpenAIChatInput, type OpenAICoreRequestOptions, ChatOpenAICompletions } from \"@langchain/openai\";\ntype NovitaUnsupportedArgs = \"frequencyPenalty\" | \"presencePenalty\" | \"logitBias\" | \"functions\";\ntype NovitaUnsupportedCallOptions = \"functions\" | \"function_call\";\nexport interface ChatNovitaCallOptions extends Omit<ChatOpenAICallOptions, NovitaUnsupportedCallOptions> {\n    response_format: {\n        type: \"json_object\";\n        schema: Record<string, unknown>;\n    };\n}\nexport interface ChatNovitaInput extends Omit<OpenAIChatInput, \"openAIApiKey\" | NovitaUnsupportedArgs>, BaseChatModelParams {\n    /**\n     * Novita API key\n     * @default process.env.NOVITA_API_KEY\n     */\n    novitaApiKey?: string;\n    /**\n     * API key alias\n     * @default process.env.NOVITA_API_KEY\n     */\n    apiKey?: string;\n}\n/**\n * Novita chat model implementation\n */\nexport declare class ChatNovitaAI extends ChatOpenAICompletions<ChatNovitaCallOptions> {\n    static lc_name(): string;\n    _llmType(): string;\n    get lc_secrets(): {\n        [key: string]: string;\n    } | undefined;\n    lc_serializable: boolean;\n    constructor(fields?: Partial<Omit<OpenAIChatInput, \"openAIApiKey\" | NovitaUnsupportedArgs>> & BaseChatModelParams & {\n        novitaApiKey?: string;\n        apiKey?: string;\n    });\n    getLsParams(options: this[\"ParsedCallOptions\"]): LangSmithParams;\n    toJSON(): import(\"../load/serializable\").Serialized;\n    completionWithRetry(request: OpenAIClient.Chat.ChatCompletionCreateParamsStreaming, options?: OpenAICoreRequestOptions): Promise<AsyncIterable<OpenAIClient.Chat.Completions.ChatCompletionChunk>>;\n    completionWithRetry(request: OpenAIClient.Chat.ChatCompletionCreateParamsNonStreaming, options?: OpenAICoreRequestOptions): Promise<OpenAIClient.Chat.Completions.ChatCompletion>;\n}\nexport {};\n"],"mappings":";;;;;;;;KAEKO,qBAAAA;KACAC,4BAAAA;UACYC,qBAAAA,SAA8BE,KAAKR,uBAAuBK;;;YAG3DE;;;UAGCE,eAAAA,SAAwBD,KAAKP,kCAAkCG,wBAAwBP;;AATsD;AACpI;AAE1B;EAAsC,YAAA,CAAA,EAAA,MAAA;EAAA;;;;EAAa,MAAA,CAAA,EAAA,MAAA;AAMnD;;;;AAAyCW,cAepBE,YAAAA,SAAqBP,qBAfDK,CAeuBF,qBAfvBE,CAAAA,CAAAA;EAAI,OAA2DX,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAmB,QAAA,CAAA,CAAA,EAAA,MAAA;EAetGa,IAAAA,UAAAA,CAAAA,CAAY,EAAA;IAAA,CAAA,GAAA,EAAA,MAAA,CAAA,EAAA,MAAA;EAAA,CAAA,GAA+BJ,SAAAA;EAAqB,eAO/CL,EAAAA,OAAAA;EAAe,WAAmBG,CAAAA,MAAxC,CAAwCA,EAA/CO,OAA+CP,CAAvCI,IAAuCJ,CAAlCH,eAAkCG,EAAAA,cAAAA,GAAAA,qBAAAA,CAAAA,CAAAA,GAA0BP,mBAA1BO,GAAAA;IAAvCI,YAAAA,CAAAA,EAAAA,MAAAA;IAARG,MAAAA,CAAAA,EAAAA,MAAAA;EAAO,CAAA;EAAqF,WAIhEb,CAAAA,OAAAA,EAAAA,IAAAA,CAAAA,mBAAAA,CAAAA,CAAAA,EAAAA,eAAAA;EAAe,MAAAc,CAAAA,CAAAA,EAAAA,sBAAAA,CACvBC,UAAAA;EAAU,mBACTC,CAAAA,OAAKC,EAAlBhB,YAAAA,CAAae,IAAAA,CAAKC,mCAAAA,EAAAA,OAAAA,CAAAA,EAA+Cb,wBAA/Ca,CAAAA,EAA0EI,OAA1EJ,CAAkFG,aAAlFH,CAAgGhB,YAAAA,CAAae,IAAAA,CAAKE,WAAAA,CAAYC,mBAA9HF,CAAAA,CAAAA;EAAmC,mBAAYb,CAAAA,OAAAA,EACjEH,YAAAA,CAAae,IAAAA,CAAKM,sCAD+ClB,EAAAA,OAAAA,CAAAA,EACGA,wBADHA,CAAAA,EAC8BiB,OAD9BjB,CACsCH,YAAAA,CAAae,IAAAA,CAAKE,WAAAA,CAAYK,cADpEnB,CAAAA"}