{"version":3,"file":"querytypes.cjs","names":["QueryStatus","QueryProfileMode","QueryScanConsistency"],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/querytypes.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryScanConsistency = exports.QueryProfileMode = exports.QueryMetrics = exports.QueryWarning = exports.QueryMetaData = exports.QueryResult = exports.QueryStatus = void 0;\n/**\n * Represents the status of a query.\n *\n * @category Query\n */\nvar QueryStatus;\n(function (QueryStatus) {\n    /**\n     * Indicates the query is still running.\n     */\n    QueryStatus[\"Running\"] = \"running\";\n    /**\n     * Indicates that the query completed successfully.\n     */\n    QueryStatus[\"Success\"] = \"success\";\n    /**\n     * Indicates that the query completed with errors.\n     */\n    QueryStatus[\"Errors\"] = \"errors\";\n    /**\n     * Indicates that the query completed but the outcome was unknown.\n     */\n    QueryStatus[\"Completed\"] = \"completed\";\n    /**\n     * Indicates that the query was stopped.\n     */\n    QueryStatus[\"Stopped\"] = \"stopped\";\n    /**\n     * Indicates that the query timed out during execution.\n     */\n    QueryStatus[\"Timeout\"] = \"timeout\";\n    /**\n     * Indicates that a connection was closed during execution of the query.\n     */\n    QueryStatus[\"Closed\"] = \"closed\";\n    /**\n     * Indicates that the query stopped with fatal errors.\n     */\n    QueryStatus[\"Fatal\"] = \"fatal\";\n    /**\n     * Indicates that the query was aborted while executing.\n     */\n    QueryStatus[\"Aborted\"] = \"aborted\";\n    /**\n     * Indicates that the status of the query is unknown.\n     */\n    QueryStatus[\"Unknown\"] = \"unknown\";\n})(QueryStatus || (exports.QueryStatus = QueryStatus = {}));\n/**\n * Contains the results of a query.\n *\n * @category Query\n */\nclass QueryResult {\n    /**\n     * @internal\n     */\n    constructor(data) {\n        this.rows = data.rows;\n        this.meta = data.meta;\n    }\n}\nexports.QueryResult = QueryResult;\n/**\n * Contains the meta-data that is returend from a query.\n *\n * @category Query\n */\nclass QueryMetaData {\n    /**\n     * @internal\n     */\n    constructor(data) {\n        this.requestId = data.requestId;\n        this.clientContextId = data.clientContextId;\n        this.status = data.status;\n        this.signature = data.signature;\n        this.warnings = data.warnings;\n        this.metrics = data.metrics;\n        this.profile = data.profile;\n    }\n}\nexports.QueryMetaData = QueryMetaData;\n/**\n * Contains information about a warning which occurred during the\n * execution of a query.\n *\n * @category Query\n */\nclass QueryWarning {\n    /**\n     * @internal\n     */\n    constructor(data) {\n        this.code = data.code;\n        this.message = data.message;\n    }\n}\nexports.QueryWarning = QueryWarning;\n/**\n * Contains various metrics that are returned by the server following\n * the execution of a query.\n *\n * @category Query\n */\nclass QueryMetrics {\n    /**\n     * @internal\n     */\n    constructor(data) {\n        this.elapsedTime = data.elapsedTime;\n        this.executionTime = data.executionTime;\n        this.sortCount = data.sortCount;\n        this.resultCount = data.resultCount;\n        this.resultSize = data.resultSize;\n        this.mutationCount = data.mutationCount;\n        this.errorCount = data.errorCount;\n        this.warningCount = data.warningCount;\n    }\n}\nexports.QueryMetrics = QueryMetrics;\n/**\n * Specifies the profiling mode for a query.\n *\n * @category Query\n */\nvar QueryProfileMode;\n(function (QueryProfileMode) {\n    /**\n     * Disables the generation of profiling data.\n     */\n    QueryProfileMode[\"Off\"] = \"off\";\n    /**\n     * Enables profiling of the phases of a query.\n     */\n    QueryProfileMode[\"Phases\"] = \"phases\";\n    /**\n     * Enables profiling of the timings of a query.\n     */\n    QueryProfileMode[\"Timings\"] = \"timings\";\n})(QueryProfileMode || (exports.QueryProfileMode = QueryProfileMode = {}));\n/**\n * Represents the various scan consistency options that are available when\n * querying against the query service.\n *\n * @category Query\n */\nvar QueryScanConsistency;\n(function (QueryScanConsistency) {\n    /**\n     * Indicates that no specific consistency is required, this is the fastest\n     * options, but results may not include the most recent operations which have\n     * been performed.\n     */\n    QueryScanConsistency[\"NotBounded\"] = \"not_bounded\";\n    /**\n     * Indicates that the results to the query should include all operations that\n     * have occurred up until the query was started.  This incurs a performance\n     * penalty of waiting for the index to catch up to the most recent operations,\n     * but provides the highest level of consistency.\n     */\n    QueryScanConsistency[\"RequestPlus\"] = \"request_plus\";\n})(QueryScanConsistency || (exports.QueryScanConsistency = QueryScanConsistency = {}));\n"],"x_google_ignoreList":[0],"mappings":";;;;;;;CACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAM,EAAC;CAC7D,QAAQ,uBAAuB,QAAQ,mBAAmB,QAAQ,eAAe,QAAQ,eAAe,QAAQ,gBAAgB,QAAQ,cAAc,QAAQ,cAAc,KAAK;;;;;;CAMjL,IAAI;EACH,SAAUA,eAAa;;;;EAIpBA,cAAY,aAAa;;;;EAIzBA,cAAY,aAAa;;;;EAIzBA,cAAY,YAAY;;;;EAIxBA,cAAY,eAAe;;;;EAI3BA,cAAY,aAAa;;;;EAIzBA,cAAY,aAAa;;;;EAIzBA,cAAY,YAAY;;;;EAIxBA,cAAY,WAAW;;;;EAIvBA,cAAY,aAAa;;;;EAIzBA,cAAY,aAAa;CAC5B,GAAE,gBAAgB,QAAQ,cAAc,cAAc,CAAE,GAAE;;;;;;CAM3D,IAAM,cAAN,MAAkB;;;;EAId,YAAY,MAAM;GACd,KAAK,OAAO,KAAK;GACjB,KAAK,OAAO,KAAK;EACpB;CACJ;CACD,QAAQ,cAAc;;;;;;CAMtB,IAAM,gBAAN,MAAoB;;;;EAIhB,YAAY,MAAM;GACd,KAAK,YAAY,KAAK;GACtB,KAAK,kBAAkB,KAAK;GAC5B,KAAK,SAAS,KAAK;GACnB,KAAK,YAAY,KAAK;GACtB,KAAK,WAAW,KAAK;GACrB,KAAK,UAAU,KAAK;GACpB,KAAK,UAAU,KAAK;EACvB;CACJ;CACD,QAAQ,gBAAgB;;;;;;;CAOxB,IAAM,eAAN,MAAmB;;;;EAIf,YAAY,MAAM;GACd,KAAK,OAAO,KAAK;GACjB,KAAK,UAAU,KAAK;EACvB;CACJ;CACD,QAAQ,eAAe;;;;;;;CAOvB,IAAM,eAAN,MAAmB;;;;EAIf,YAAY,MAAM;GACd,KAAK,cAAc,KAAK;GACxB,KAAK,gBAAgB,KAAK;GAC1B,KAAK,YAAY,KAAK;GACtB,KAAK,cAAc,KAAK;GACxB,KAAK,aAAa,KAAK;GACvB,KAAK,gBAAgB,KAAK;GAC1B,KAAK,aAAa,KAAK;GACvB,KAAK,eAAe,KAAK;EAC5B;CACJ;CACD,QAAQ,eAAe;;;;;;CAMvB,IAAI;EACH,SAAUC,oBAAkB;;;;EAIzBA,mBAAiB,SAAS;;;;EAI1BA,mBAAiB,YAAY;;;;EAI7BA,mBAAiB,aAAa;CACjC,GAAE,qBAAqB,QAAQ,mBAAmB,mBAAmB,CAAE,GAAE;;;;;;;CAO1E,IAAI;EACH,SAAUC,wBAAsB;;;;;;EAM7BA,uBAAqB,gBAAgB;;;;;;;EAOrCA,uBAAqB,iBAAiB;CACzC,GAAE,yBAAyB,QAAQ,uBAAuB,uBAAuB,CAAE,GAAE"}