{"version":3,"file":"chatgpt.cjs","names":["message: ChatGPTMessage","title: string","TextLoader","filePathOrBlob: string | Blob","raw: string","d: ChatGPTLog","text: string","metadata: Record<string, string>","Document"],"sources":["../../../src/document_loaders/fs/chatgpt.ts"],"sourcesContent":["import { Document } from \"@langchain/core/documents\";\nimport { TextLoader } from \"@langchain/classic/document_loaders/fs/text\";\n\ninterface ChatGPTMessage {\n  author: {\n    role: string;\n  };\n  content: {\n    parts: string[];\n  };\n  create_time: number;\n}\n\ninterface ChatGPTLog {\n  title: string;\n  mapping: Record<string, { message: ChatGPTMessage }>;\n}\n\nfunction concatenateRows(message: ChatGPTMessage, title: string): string {\n  /**\n   * Combine message information in a readable format ready to be used.\n   * @param {ChatGPTMessage} message - Message to be concatenated\n   * @param {string} title - Title of the conversation\n   *\n   * @returns {string} Concatenated message\n   */\n  if (!message) {\n    return \"\";\n  }\n\n  const sender = message.author ? message.author.role : \"unknown\";\n  const text = message.content.parts[0];\n  const date = new Date(message.create_time * 1000)\n    .toISOString()\n    .slice(0, 19)\n    .replace(\"T\", \" \");\n  return `${title} - ${sender} on ${date}: ${text}\\n\\n`;\n}\n\nexport class ChatGPTLoader extends TextLoader {\n  public numLogs: number;\n\n  constructor(filePathOrBlob: string | Blob, numLogs = 0) {\n    super(filePathOrBlob);\n    this.numLogs = numLogs;\n  }\n\n  protected async parse(raw: string): Promise<string[]> {\n    let data;\n    try {\n      data = JSON.parse(raw);\n    } catch (e) {\n      console.error(e);\n      throw new Error(\"Failed to parse JSON\");\n    }\n\n    const truncatedData = this.numLogs > 0 ? data.slice(0, this.numLogs) : data;\n\n    return truncatedData.map((d: ChatGPTLog) =>\n      Object.values(d.mapping)\n        .filter(\n          (msg, idx) => !(idx === 0 && msg.message.author.role === \"system\")\n        )\n        .map((msg) => concatenateRows(msg.message, d.title))\n        .join(\"\")\n    );\n  }\n\n  public async load(): Promise<Document[]> {\n    let text: string;\n    let metadata: Record<string, string>;\n    if (typeof this.filePathOrBlob === \"string\") {\n      const { readFile } = await TextLoader.imports();\n      try {\n        text = await readFile(this.filePathOrBlob, \"utf8\");\n      } catch (e) {\n        console.error(e);\n        throw new Error(\"Failed to read file\");\n      }\n      metadata = { source: this.filePathOrBlob };\n    } else {\n      try {\n        text = await this.filePathOrBlob.text();\n      } catch (e) {\n        console.error(e);\n        throw new Error(\"Failed to read blob\");\n      }\n      metadata = { source: \"blob\", blobType: this.filePathOrBlob.type };\n    }\n\n    const parsed = await this.parse(text);\n    return parsed.map(\n      (pageContent, i) =>\n        new Document({\n          pageContent,\n          metadata: {\n            ...metadata,\n            logIndex: i + 1,\n          },\n        })\n    );\n  }\n}\n"],"mappings":";;;;;;;AAkBA,SAAS,gBAAgBA,SAAyBC,OAAuB;;;;;;;;AAQvE,KAAI,CAAC,QACH,QAAO;CAGT,MAAM,SAAS,QAAQ,SAAS,QAAQ,OAAO,OAAO;CACtD,MAAM,OAAO,QAAQ,QAAQ,MAAM;CACnC,MAAM,wBAAO,IAAI,KAAK,QAAQ,cAAc,MACzC,aAAa,CACb,MAAM,GAAG,GAAG,CACZ,QAAQ,KAAK,IAAI;AACpB,QAAO,GAAG,MAAM,GAAG,EAAE,OAAO,IAAI,EAAE,KAAK,EAAE,EAAE,KAAK,IAAI,CAAC;AACtD;AAED,IAAa,gBAAb,cAAmCC,wDAAW;CAC5C,AAAO;CAEP,YAAYC,gBAA+B,UAAU,GAAG;EACtD,MAAM,eAAe;EACrB,KAAK,UAAU;CAChB;CAED,MAAgB,MAAMC,KAAgC;EACpD,IAAI;AACJ,MAAI;GACF,OAAO,KAAK,MAAM,IAAI;EACvB,SAAQ,GAAG;GACV,QAAQ,MAAM,EAAE;AAChB,SAAM,IAAI,MAAM;EACjB;EAED,MAAM,gBAAgB,KAAK,UAAU,IAAI,KAAK,MAAM,GAAG,KAAK,QAAQ,GAAG;AAEvE,SAAO,cAAc,IAAI,CAACC,MACxB,OAAO,OAAO,EAAE,QAAQ,CACrB,OACC,CAAC,KAAK,QAAQ,EAAE,QAAQ,KAAK,IAAI,QAAQ,OAAO,SAAS,UAC1D,CACA,IAAI,CAAC,QAAQ,gBAAgB,IAAI,SAAS,EAAE,MAAM,CAAC,CACnD,KAAK,GAAG,CACZ;CACF;CAED,MAAa,OAA4B;EACvC,IAAIC;EACJ,IAAIC;AACJ,MAAI,OAAO,KAAK,mBAAmB,UAAU;GAC3C,MAAM,EAAE,UAAU,GAAG,MAAML,wDAAW,SAAS;AAC/C,OAAI;IACF,OAAO,MAAM,SAAS,KAAK,gBAAgB,OAAO;GACnD,SAAQ,GAAG;IACV,QAAQ,MAAM,EAAE;AAChB,UAAM,IAAI,MAAM;GACjB;GACD,WAAW,EAAE,QAAQ,KAAK,eAAgB;EAC3C,OAAM;AACL,OAAI;IACF,OAAO,MAAM,KAAK,eAAe,MAAM;GACxC,SAAQ,GAAG;IACV,QAAQ,MAAM,EAAE;AAChB,UAAM,IAAI,MAAM;GACjB;GACD,WAAW;IAAE,QAAQ;IAAQ,UAAU,KAAK,eAAe;GAAM;EAClE;EAED,MAAM,SAAS,MAAM,KAAK,MAAM,KAAK;AACrC,SAAO,OAAO,IACZ,CAAC,aAAa,MACZ,IAAIM,oCAAS;GACX;GACA,UAAU;IACR,GAAG;IACH,UAAU,IAAI;GACf;EACF,GACJ;CACF;AACF"}