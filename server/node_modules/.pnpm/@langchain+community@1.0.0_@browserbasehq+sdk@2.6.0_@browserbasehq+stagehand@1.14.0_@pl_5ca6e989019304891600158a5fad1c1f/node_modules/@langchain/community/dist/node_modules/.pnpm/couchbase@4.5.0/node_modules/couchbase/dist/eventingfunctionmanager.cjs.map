{"version":3,"file":"eventingfunctionmanager.cjs","names":["EventingFunctionDcpBoundary","EventingFunctionDeploymentStatus","EventingFunctionProcessingStatus","EventingFunctionStatus","EventingFunctionLanguageCompatibility","EventingFunctionLogLevel","EventingFunctionBucketAccess","EventingFunctionUrlAuthMethod"],"sources":["../../../../../../../../../node_modules/.pnpm/couchbase@4.5.0/node_modules/couchbase/dist/eventingfunctionmanager.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventingFunctionManager = exports.EventingState = exports.EventingFunctionState = exports.EventingFunction = exports.EventingFunctionSettings = exports.EventingFunctionConstantBinding = exports.EventingFunctionUrlBinding = exports.EventingFunctionUrlAuthBearer = exports.EventingFunctionUrlAuthDigest = exports.EventingFunctionUrlAuthBasic = exports.EventingFunctionBucketBinding = exports.EventingFunctionKeyspace = exports.EventingFunctionUrlAuthMethod = exports.EventingFunctionBucketAccess = exports.EventingFunctionLogLevel = exports.EventingFunctionLanguageCompatibility = exports.EventingFunctionStatus = exports.EventingFunctionProcessingStatus = exports.EventingFunctionDeploymentStatus = exports.EventingFunctionDcpBoundary = void 0;\nconst utilities_1 = require(\"./utilities\");\nconst bindingutilities_1 = require(\"./bindingutilities\");\nconst errs = __importStar(require(\"./errors\"));\n/**\n * Represents the various dcp boundary options for eventing functions.\n *\n * @category Management\n */\nvar EventingFunctionDcpBoundary;\n(function (EventingFunctionDcpBoundary) {\n    /**\n     * Indicates all documents should be processed by the function.\n     */\n    EventingFunctionDcpBoundary[\"Everything\"] = \"everything\";\n    /**\n     * Indicates that only documents modified after a function is created\n     * should be processed by the function.\n     */\n    EventingFunctionDcpBoundary[\"FromNow\"] = \"from_now\";\n})(EventingFunctionDcpBoundary || (exports.EventingFunctionDcpBoundary = EventingFunctionDcpBoundary = {}));\n/**\n * Represents the various possible deployment statuses for an eventing function.\n *\n * @category Management\n */\nvar EventingFunctionDeploymentStatus;\n(function (EventingFunctionDeploymentStatus) {\n    /**\n     * Indicates that the function is deployed.\n     */\n    EventingFunctionDeploymentStatus[\"Deployed\"] = \"deployed\";\n    /**\n     * Indicates that the function has not yet been deployed.\n     */\n    EventingFunctionDeploymentStatus[\"Undeployed\"] = \"undeployed\";\n})(EventingFunctionDeploymentStatus || (exports.EventingFunctionDeploymentStatus = EventingFunctionDeploymentStatus = {}));\n/**\n * Represents the various possible processing statuses for an eventing function.\n *\n * @category Management\n */\nvar EventingFunctionProcessingStatus;\n(function (EventingFunctionProcessingStatus) {\n    /**\n     * Indicates that the eventing function is currently running.\n     */\n    EventingFunctionProcessingStatus[\"Running\"] = \"running\";\n    /**\n     * Indicates that the eventing function is currently paused.\n     */\n    EventingFunctionProcessingStatus[\"Paused\"] = \"paused\";\n})(EventingFunctionProcessingStatus || (exports.EventingFunctionProcessingStatus = EventingFunctionProcessingStatus = {}));\n/**\n * Represents the authentication method to use for a URL binding.\n *\n * @category Management\n */\nvar EventingFunctionStatus;\n(function (EventingFunctionStatus) {\n    /**\n     * Indicates that the eventing function is undeployed.\n     */\n    EventingFunctionStatus[\"Undeployed\"] = \"undeployed\";\n    /**\n     * Indicates that the eventing function is deploying.\n     */\n    EventingFunctionStatus[\"Deploying\"] = \"deploying\";\n    /**\n     * Indicates that the eventing function is deployed.\n     */\n    EventingFunctionStatus[\"Deployed\"] = \"deployed\";\n    /**\n     * Indicates that the eventing function is undeploying.\n     */\n    EventingFunctionStatus[\"Undeploying\"] = \"undeploying\";\n    /**\n     * Indicates that the eventing function is paused.\n     */\n    EventingFunctionStatus[\"Paused\"] = \"paused\";\n    /**\n     * Indicates that the eventing function is pausing.\n     */\n    EventingFunctionStatus[\"Pausing\"] = \"pausing\";\n})(EventingFunctionStatus || (exports.EventingFunctionStatus = EventingFunctionStatus = {}));\n/**\n * Represents the language compatibility levels of an eventing function.\n *\n * @category Management\n */\nvar EventingFunctionLanguageCompatibility;\n(function (EventingFunctionLanguageCompatibility) {\n    /**\n     * Indicates that the function should run with compatibility with\n     * Couchbase Server 6.0.0.\n     */\n    EventingFunctionLanguageCompatibility[\"Version_6_0_0\"] = \"6.0.0\";\n    /**\n     * Indicates that the function should run with compatibility with\n     * Couchbase Server 6.5.0.\n     */\n    EventingFunctionLanguageCompatibility[\"Version_6_5_0\"] = \"6.5.0\";\n    /**\n     * Indicates that the function should run with compatibility with\n     * Couchbase Server 6.6.2.\n     */\n    EventingFunctionLanguageCompatibility[\"Version_6_6_2\"] = \"6.6.2\";\n    /**\n     * Indicates that the function should run with compatibility with\n     * Couchbase Server 7.2.0.\n     */\n    EventingFunctionLanguageCompatibility[\"Version_7_2_0\"] = \"7.2.0\";\n})(EventingFunctionLanguageCompatibility || (exports.EventingFunctionLanguageCompatibility = EventingFunctionLanguageCompatibility = {}));\n/**\n * Represents the various log levels for an eventing function.\n *\n * @category Management\n */\nvar EventingFunctionLogLevel;\n(function (EventingFunctionLogLevel) {\n    /**\n     * Indicates to use INFO level logging.\n     */\n    EventingFunctionLogLevel[\"Info\"] = \"INFO\";\n    /**\n     * Indicates to use ERROR level logging.\n     */\n    EventingFunctionLogLevel[\"Error\"] = \"ERROR\";\n    /**\n     * Indicates to use WARNING level logging.\n     */\n    EventingFunctionLogLevel[\"Warning\"] = \"WARNING\";\n    /**\n     * Indicates to use DEBUG level logging.\n     */\n    EventingFunctionLogLevel[\"Debug\"] = \"DEBUG\";\n    /**\n     * Indicates to use TRACE level logging.\n     */\n    EventingFunctionLogLevel[\"Trace\"] = \"TRACE\";\n})(EventingFunctionLogLevel || (exports.EventingFunctionLogLevel = EventingFunctionLogLevel = {}));\n/**\n * Represents the various bucket access levels for an eventing function.\n *\n * @category Management\n */\nvar EventingFunctionBucketAccess;\n(function (EventingFunctionBucketAccess) {\n    /**\n     * Indicates that the function can only read the associated bucket.\n     */\n    EventingFunctionBucketAccess[\"ReadOnly\"] = \"r\";\n    /**\n     * Indicates that the function can both read and write the associated bucket.\n     */\n    EventingFunctionBucketAccess[\"ReadWrite\"] = \"rw\";\n})(EventingFunctionBucketAccess || (exports.EventingFunctionBucketAccess = EventingFunctionBucketAccess = {}));\n/**\n * Represents the authentication method to use for a URL binding.\n *\n * @category Management\n */\nvar EventingFunctionUrlAuthMethod;\n(function (EventingFunctionUrlAuthMethod) {\n    /**\n     * Indicates that no authentication should be used.\n     */\n    EventingFunctionUrlAuthMethod[\"None\"] = \"no-auth\";\n    /**\n     * Indicates that Basic should be used.\n     */\n    EventingFunctionUrlAuthMethod[\"Basic\"] = \"basic\";\n    /**\n     * Indicates that Digest should be used.\n     */\n    EventingFunctionUrlAuthMethod[\"Digest\"] = \"digest\";\n    /**\n     * Indicates that Bearer should be used.\n     */\n    EventingFunctionUrlAuthMethod[\"Bearer\"] = \"bearer\";\n})(EventingFunctionUrlAuthMethod || (exports.EventingFunctionUrlAuthMethod = EventingFunctionUrlAuthMethod = {}));\n/**\n * Specifies the bucket/scope/collection used by an eventing function.\n *\n * @category Management\n */\nclass EventingFunctionKeyspace {\n    constructor(v) {\n        this.bucket = v.bucket;\n        this.scope = v.scope;\n        this.collection = v.collection;\n    }\n}\nexports.EventingFunctionKeyspace = EventingFunctionKeyspace;\n/**\n * Specifies a bucket binding for an eventing function.\n *\n * @category Management\n */\nclass EventingFunctionBucketBinding {\n    constructor(v) {\n        this.alias = v.alias;\n        this.name = v.name;\n        this.access = v.access;\n    }\n    /**\n     * @internal\n     */\n    static _fromCppData(data) {\n        return new EventingFunctionBucketBinding({\n            alias: data.alias,\n            name: new EventingFunctionKeyspace({\n                bucket: data.name.bucket,\n                scope: data.name.scope,\n                collection: data.name.collection,\n            }),\n            access: (0, bindingutilities_1.eventingBucketBindingAccessFromCpp)(data.access),\n        });\n    }\n    /**\n     * @internal\n     */\n    static _toCppData(data) {\n        return {\n            alias: data.alias,\n            name: {\n                bucket: data.name.bucket,\n                scope: data.name.scope,\n                collection: data.name.collection,\n            },\n            access: (0, bindingutilities_1.eventingBucketBindingAccessToCpp)(data.access),\n        };\n    }\n}\nexports.EventingFunctionBucketBinding = EventingFunctionBucketBinding;\n/**\n * Specifies that Basic authentication should be used for the URL.\n *\n * @category Management\n */\nclass EventingFunctionUrlAuthBasic {\n    constructor(v) {\n        /**\n         * Sets the auth method to Basic.\n         */\n        this.method = EventingFunctionUrlAuthMethod.Basic;\n        this.username = v.username;\n        this.password = v.password;\n    }\n}\nexports.EventingFunctionUrlAuthBasic = EventingFunctionUrlAuthBasic;\n/**\n * Specifies that Digest authentication should be used for the URL.\n *\n * @category Management\n */\nclass EventingFunctionUrlAuthDigest {\n    constructor(v) {\n        /**\n         * Sets the auth method to Digest.\n         */\n        this.method = EventingFunctionUrlAuthMethod.Digest;\n        this.username = v.username;\n        this.password = v.password;\n    }\n}\nexports.EventingFunctionUrlAuthDigest = EventingFunctionUrlAuthDigest;\n/**\n * Specifies that Bearer authentication should be used for the URL.\n *\n * @category Management\n */\nclass EventingFunctionUrlAuthBearer {\n    constructor(v) {\n        /**\n         * Sets the auth method to Bearer.\n         */\n        this.method = EventingFunctionUrlAuthMethod.Bearer;\n        this.key = v.key;\n    }\n}\nexports.EventingFunctionUrlAuthBearer = EventingFunctionUrlAuthBearer;\n/**\n * Specifies a url binding for an eventing function.\n *\n * @category Management\n */\nclass EventingFunctionUrlBinding {\n    constructor(v) {\n        this.hostname = v.hostname;\n        this.alias = v.alias;\n        this.auth = v.auth;\n        this.allowCookies = v.allowCookies;\n        this.validateSslCertificate = v.validateSslCertificate;\n    }\n    /**\n     * @internal\n     */\n    static _fromCppData(data) {\n        let authObj;\n        if (data.auth_name === 'function_url_no_auth') {\n            authObj = undefined;\n        }\n        else if (data.auth_name === 'function_url_auth_basic') {\n            authObj = new EventingFunctionUrlAuthBasic({\n                username: data.auth_value\n                    .username,\n                password: data.auth_value\n                    .password,\n            });\n        }\n        else if (data.auth_name === 'function_url_auth_digest') {\n            authObj = new EventingFunctionUrlAuthDigest({\n                username: data.auth_value.username,\n                password: data.auth_value.password,\n            });\n        }\n        else if (data.auth_name === 'function_url_auth_bearer') {\n            authObj = new EventingFunctionUrlAuthBearer({\n                key: data.auth_value\n                    .key,\n            });\n        }\n        else {\n            throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionUrlBinding: ' + data.auth_name));\n        }\n        return {\n            hostname: data.hostname,\n            alias: data.alias,\n            allowCookies: data.allow_cookies,\n            validateSslCertificate: data.validate_ssl_certificate,\n            auth: authObj,\n        };\n    }\n    /**\n     * @internal\n     */\n    static _toCppData(data) {\n        let authObj;\n        let auth_name;\n        if (!data.auth || data.auth.method === EventingFunctionUrlAuthMethod.None) {\n            authObj = {};\n            auth_name = 'function_url_no_auth';\n        }\n        else if (data.auth.method === EventingFunctionUrlAuthMethod.Basic) {\n            authObj = {\n                username: data.auth.username,\n                password: data.auth.password,\n            };\n            auth_name = 'function_url_auth_basic';\n        }\n        else if (data.auth.method === EventingFunctionUrlAuthMethod.Digest) {\n            authObj = {\n                username: data.auth.username,\n                password: data.auth.password,\n            };\n            auth_name = 'function_url_auth_digest';\n        }\n        else if (data.auth.method === EventingFunctionUrlAuthMethod.Bearer) {\n            authObj = {\n                key: data.auth.key,\n            };\n            auth_name = 'function_url_auth_bearer';\n        }\n        else {\n            throw new errs.InvalidArgumentError(new Error('Unrecognized EventingFunctionUrlBinding'));\n        }\n        return {\n            alias: data.alias,\n            hostname: data.hostname,\n            allow_cookies: data.allowCookies,\n            validate_ssl_certificate: data.validateSslCertificate,\n            auth_name: auth_name,\n            auth_value: authObj,\n        };\n    }\n}\nexports.EventingFunctionUrlBinding = EventingFunctionUrlBinding;\n/**\n * Specifies a constant binding for an eventing function.\n *\n * @category Management\n */\nclass EventingFunctionConstantBinding {\n    constructor(v) {\n        this.alias = v.alias;\n        this.literal = v.literal;\n    }\n    /**\n     * @internal\n     */\n    static _fromCppData(data) {\n        return new EventingFunctionConstantBinding({\n            alias: data.alias,\n            literal: data.literal,\n        });\n    }\n    /**\n     * @internal\n     */\n    static _toCppData(data) {\n        return {\n            alias: data.alias,\n            literal: data.literal,\n        };\n    }\n}\nexports.EventingFunctionConstantBinding = EventingFunctionConstantBinding;\n/**\n * Specifies a number of options which can be used when updating or creating\n * a eventing function.\n *\n * @category Management\n */\nclass EventingFunctionSettings {\n    constructor(v) {\n        this.cppWorkerThreadCount = v.cppWorkerThreadCount;\n        this.dcpStreamBoundary = v.dcpStreamBoundary;\n        this.description = v.description;\n        this.deploymentStatus = v.deploymentStatus;\n        this.processingStatus = v.processingStatus;\n        this.languageCompatibility = v.languageCompatibility;\n        this.logLevel = v.logLevel;\n        this.executionTimeout = v.executionTimeout;\n        this.lcbInstCapacity = v.lcbInstCapacity;\n        this.lcbRetryCount = v.lcbRetryCount;\n        this.lcbTimeout = v.lcbTimeout;\n        this.queryConsistency = v.queryConsistency;\n        this.numTimerPartitions = v.numTimerPartitions;\n        this.sockBatchSize = v.sockBatchSize;\n        this.tickDuration = v.tickDuration;\n        this.timerContextSize = v.timerContextSize;\n        this.userPrefix = v.userPrefix;\n        this.bucketCacheSize = v.bucketCacheSize;\n        this.bucketCacheAge = v.bucketCacheAge;\n        this.curlMaxAllowedRespSize = v.curlMaxAllowedRespSize;\n        this.queryPrepareAll = v.queryPrepareAll;\n        this.workerCount = v.workerCount;\n        this.handlerHeaders = v.handlerHeaders;\n        this.handlerFooters = v.handlerFooters;\n        this.enableAppLogRotation = v.enableAppLogRotation;\n        this.appLogDir = v.appLogDir;\n        this.appLogMaxSize = v.appLogMaxSize;\n        this.appLogMaxFiles = v.appLogMaxFiles;\n        this.checkpointInterval = v.checkpointInterval;\n    }\n    /**\n     * @internal\n     */\n    static _fromCppData(data) {\n        return new EventingFunctionSettings({\n            cppWorkerThreadCount: data.cpp_worker_count,\n            dcpStreamBoundary: (0, bindingutilities_1.eventingFunctionDcpBoundaryFromCpp)(data.dcp_stream_boundary),\n            description: data.description,\n            deploymentStatus: (0, bindingutilities_1.eventingFunctionDeploymentStatusFromCpp)(data.deployment_status),\n            processingStatus: (0, bindingutilities_1.eventingFunctionProcessingStatusFromCpp)(data.processing_status),\n            logLevel: (0, bindingutilities_1.eventingFunctionLogLevelFromCpp)(data.log_level),\n            languageCompatibility: (0, bindingutilities_1.eventingFunctionLanguageCompatibilityFromCpp)(data.language_compatibility),\n            executionTimeout: data.execution_timeout,\n            lcbInstCapacity: data.lcb_inst_capacity,\n            lcbRetryCount: data.lcb_retry_count,\n            lcbTimeout: data.lcb_timeout,\n            queryConsistency: (0, bindingutilities_1.queryScanConsistencyFromCpp)(data.query_consistency),\n            numTimerPartitions: data.num_timer_partitions,\n            sockBatchSize: data.sock_batch_size,\n            tickDuration: data.tick_duration,\n            timerContextSize: data.timer_context_size,\n            userPrefix: data.user_prefix,\n            bucketCacheSize: data.bucket_cache_size,\n            bucketCacheAge: data.bucket_cache_age,\n            curlMaxAllowedRespSize: data.curl_max_allowed_resp_size,\n            queryPrepareAll: data.query_prepare_all,\n            workerCount: data.worker_count,\n            handlerHeaders: data.handler_headers,\n            handlerFooters: data.handler_footers,\n            enableAppLogRotation: data.enable_app_log_rotation,\n            appLogDir: data.app_log_dir,\n            appLogMaxSize: data.app_log_max_size,\n            appLogMaxFiles: data.app_log_max_files,\n            checkpointInterval: data.checkpoint_interval,\n        });\n    }\n    /**\n     * @internal\n     */\n    static _toCppData(data) {\n        var _a, _b;\n        if (!data) {\n            return {\n                handler_headers: [],\n                handler_footers: [],\n            };\n        }\n        return {\n            cpp_worker_count: data.cppWorkerThreadCount,\n            dcp_stream_boundary: (0, bindingutilities_1.eventingFunctionDcpBoundaryToCpp)(data.dcpStreamBoundary),\n            description: data.description,\n            deployment_status: (0, bindingutilities_1.eventingFunctionDeploymentStatusToCpp)(data.deploymentStatus),\n            processing_status: (0, bindingutilities_1.eventingFunctionProcessingStatusToCpp)(data.processingStatus),\n            log_level: (0, bindingutilities_1.eventingFunctionLogLevelToCpp)(data.logLevel),\n            language_compatibility: (0, bindingutilities_1.eventingFunctionLanguageCompatibilityToCpp)(data.languageCompatibility),\n            execution_timeout: data.executionTimeout,\n            lcb_inst_capacity: data.lcbInstCapacity,\n            lcb_retry_count: data.lcbRetryCount,\n            lcb_timeout: data.lcbTimeout,\n            query_consistency: (0, bindingutilities_1.queryScanConsistencyToCpp)(data.queryConsistency),\n            num_timer_partitions: data.numTimerPartitions,\n            sock_batch_size: data.sockBatchSize,\n            tick_duration: data.tickDuration,\n            timer_context_size: data.timerContextSize,\n            user_prefix: data.userPrefix,\n            bucket_cache_size: data.bucketCacheSize,\n            bucket_cache_age: data.bucketCacheAge,\n            curl_max_allowed_resp_size: data.curlMaxAllowedRespSize,\n            query_prepare_all: data.queryPrepareAll,\n            worker_count: data.workerCount,\n            handler_headers: (_a = data.handlerHeaders) !== null && _a !== void 0 ? _a : [],\n            handler_footers: (_b = data.handlerFooters) !== null && _b !== void 0 ? _b : [],\n            enable_app_log_rotation: data.enableAppLogRotation,\n            app_log_dir: data.appLogDir,\n            app_log_max_size: data.appLogMaxSize,\n            app_log_max_files: data.appLogMaxFiles,\n            checkpoint_interval: data.checkpointInterval,\n        };\n    }\n}\nexports.EventingFunctionSettings = EventingFunctionSettings;\n/**\n * Describes an eventing function.\n *\n * @category Management\n */\nclass EventingFunction {\n    constructor(v) {\n        this.name = v.name;\n        this.code = v.code;\n        this.version = v.version;\n        this.enforceSchema = v.enforceSchema;\n        this.handlerUuid = v.handlerUuid;\n        this.functionInstanceId = v.functionInstanceId;\n        this.metadataKeyspace = v.metadataKeyspace;\n        this.sourceKeyspace = v.sourceKeyspace;\n        this.bucketBindings = v.bucketBindings;\n        this.urlBindings = v.urlBindings;\n        this.constantBindings = v.constantBindings;\n        this.settings = v.settings;\n    }\n    /**\n     * @internal\n     */\n    static _fromCppData(data) {\n        return new EventingFunction({\n            name: data.name,\n            code: data.code,\n            metadataKeyspace: new EventingFunctionKeyspace({\n                bucket: data.metadata_keyspace.bucket,\n                scope: data.metadata_keyspace.scope,\n                collection: data.metadata_keyspace.collection,\n            }),\n            sourceKeyspace: new EventingFunctionKeyspace({\n                bucket: data.source_keyspace.bucket,\n                scope: data.source_keyspace.scope,\n                collection: data.source_keyspace.collection,\n            }),\n            version: data.version,\n            enforceSchema: data.enforce_schema,\n            handlerUuid: data.handler_uuid,\n            functionInstanceId: data.function_instance_id,\n            bucketBindings: data.bucket_bindings.map((bindingData) => EventingFunctionBucketBinding._fromCppData(bindingData)),\n            urlBindings: data.url_bindings.map((bindingData) => EventingFunctionUrlBinding._fromCppData(bindingData)),\n            constantBindings: data.constant_bindings.map((bindingData) => EventingFunctionConstantBinding._fromCppData(bindingData)),\n            settings: EventingFunctionSettings._fromCppData(data.settings),\n        });\n    }\n    /**\n     * @internal\n     */\n    static _toCppData(data) {\n        return {\n            name: data.name,\n            code: data.code,\n            metadata_keyspace: {\n                bucket: data.metadataKeyspace.bucket,\n                scope: data.metadataKeyspace.scope,\n                collection: data.metadataKeyspace.collection,\n            },\n            source_keyspace: {\n                bucket: data.sourceKeyspace.bucket,\n                scope: data.sourceKeyspace.scope,\n                collection: data.sourceKeyspace.collection,\n            },\n            version: data.version,\n            enforce_schema: data.enforceSchema,\n            handler_uuid: data.handlerUuid,\n            function_instance_id: data.functionInstanceId,\n            bucket_bindings: data.bucketBindings.map((binding) => EventingFunctionBucketBinding._toCppData(binding)),\n            url_bindings: data.urlBindings.map((binding) => EventingFunctionUrlBinding._toCppData(binding)),\n            constant_bindings: data.constantBindings.map((binding) => EventingFunctionConstantBinding._toCppData(binding)),\n            settings: EventingFunctionSettings._toCppData(data.settings),\n        };\n    }\n}\nexports.EventingFunction = EventingFunction;\n/**\n * Describes the current state of an eventing function.\n *\n * @category Management\n */\nclass EventingFunctionState {\n    constructor(v) {\n        this.name = v.name;\n        this.status = v.status;\n        this.numBootstrappingNodes = v.numBootstrappingNodes;\n        this.numDeployedNodes = v.numDeployedNodes;\n        this.deploymentStatus = v.deploymentStatus;\n        this.processingStatus = v.processingStatus;\n    }\n    /**\n     * @internal\n     */\n    static _fromCppData(data) {\n        return new EventingFunctionState({\n            name: data.name,\n            status: (0, bindingutilities_1.eventingFunctionStatusFromCpp)(data.status),\n            numBootstrappingNodes: data.num_bootstrapping_nodes,\n            numDeployedNodes: data.num_deployed_nodes,\n            // deploymentStatus & processingStatus are required in the EventingFunctionState, and always set in the c++ interface, so asserting the type here.\n            deploymentStatus: (0, bindingutilities_1.eventingFunctionDeploymentStatusFromCpp)(data.deployment_status),\n            processingStatus: (0, bindingutilities_1.eventingFunctionProcessingStatusFromCpp)(data.processing_status),\n        });\n    }\n}\nexports.EventingFunctionState = EventingFunctionState;\n/**\n * Describes the current state of all eventing function.\n *\n * @category Management\n */\nclass EventingState {\n    constructor(v) {\n        this.numEventingNodes = v.numEventingNodes;\n        this.functions = v.functions;\n    }\n    /**\n     * @internal\n     */\n    static _fromCppData(data) {\n        return new EventingState({\n            numEventingNodes: data.num_eventing_nodes,\n            functions: data.functions.map((functionData) => EventingFunctionState._fromCppData(functionData)),\n        });\n    }\n}\nexports.EventingState = EventingState;\n/**\n * EventingFunctionManager provides an interface for managing the\n * eventing functions on the cluster.\n * Uncommitted: This API is subject to change in the future.\n *\n * @category Management\n */\nclass EventingFunctionManager {\n    /**\n     * @internal\n     */\n    constructor(cluster) {\n        this._cluster = cluster;\n    }\n    /**\n     * Creates or updates an eventing function.\n     *\n     * @param functionDefinition The description of the eventing function to upsert.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async upsertFunction(functionDefinition, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementEventingUpsertFunction({\n                function: EventingFunction._toCppData(functionDefinition),\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n    /**\n     * Deletes an eventing function.\n     *\n     * @param name The name of the eventing function to delete.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async dropFunction(name, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementEventingDropFunction({\n                name: name,\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n    /**\n     * Fetches all eventing functions.\n     *\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async getAllFunctions(options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[0];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementEventingGetAllFunctions({\n                timeout: timeout,\n            }, (cppErr, resp) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                const functions = resp.functions.map((functionData) => EventingFunction._fromCppData(functionData));\n                wrapCallback(null, functions);\n            });\n        }, callback);\n    }\n    /**\n     * Fetches a specific eventing function.\n     *\n     * @param name The name of the eventing function to fetch.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async getFunction(name, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementEventingGetFunction({\n                name: name,\n                timeout: timeout,\n            }, (cppErr, resp) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                const eventingFunction = EventingFunction._fromCppData(resp.function);\n                wrapCallback(null, eventingFunction);\n            });\n        }, callback);\n    }\n    /**\n     * Deploys an eventing function.\n     *\n     * @param name The name of the eventing function to deploy.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async deployFunction(name, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementEventingDeployFunction({\n                name: name,\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n    /**\n     * Undeploys an eventing function.\n     *\n     * @param name The name of the eventing function to undeploy.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async undeployFunction(name, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementEventingUndeployFunction({\n                name: name,\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n    /**\n     * Pauses an eventing function.\n     *\n     * @param name The name of the eventing function to pause.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async pauseFunction(name, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementEventingPauseFunction({\n                name: name,\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n    /**\n     * Resumes an eventing function.\n     *\n     * @param name The name of the eventing function to resume.\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async resumeFunction(name, options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[1];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementEventingResumeFunction({\n                name: name,\n                timeout: timeout,\n            }, (cppErr) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                wrapCallback(err);\n            });\n        }, callback);\n    }\n    /**\n     * Fetches the status of all eventing functions.\n     *\n     * @param options Optional parameters for this operation.\n     * @param callback A node-style callback to be invoked after execution.\n     */\n    async functionsStatus(options, callback) {\n        if (options instanceof Function) {\n            callback = arguments[0];\n            options = undefined;\n        }\n        if (!options) {\n            options = {};\n        }\n        const timeout = options.timeout || this._cluster.managementTimeout;\n        return utilities_1.PromiseHelper.wrap((wrapCallback) => {\n            this._cluster.conn.managementEventingGetStatus({\n                timeout: timeout,\n            }, (cppErr, resp) => {\n                const err = (0, bindingutilities_1.errorFromCpp)(cppErr);\n                if (err) {\n                    return wrapCallback(err, null);\n                }\n                const state = EventingState._fromCppData(resp.status);\n                wrapCallback(null, state);\n            });\n        }, callback);\n    }\n}\nexports.EventingFunctionManager = EventingFunctionManager;\n"],"x_google_ignoreList":[0],"mappings":"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"}